/usr/include/stdint.h:typedef signed char		int8_t;
/usr/include/stdint.h:typedef short int		int16_t;
/usr/include/stdint.h:typedef int			int32_t;
/usr/include/stdint.h:typedef long int		int64_t;
/usr/include/stdint.h:typedef long long int		int64_t;
/usr/include/stdint.h:typedef unsigned char		uint8_t;
/usr/include/stdint.h:typedef unsigned short int	uint16_t;
/usr/include/stdint.h:typedef unsigned int		uint32_t;
/usr/include/stdint.h:typedef unsigned long int	uint64_t;
/usr/include/stdint.h:typedef unsigned long long int	uint64_t;
/usr/include/stdint.h:typedef signed char		int_least8_t;
/usr/include/stdint.h:typedef short int		int_least16_t;
/usr/include/stdint.h:typedef int			int_least32_t;
/usr/include/stdint.h:typedef long int		int_least64_t;
/usr/include/stdint.h:typedef long long int		int_least64_t;
/usr/include/stdint.h:typedef unsigned char		uint_least8_t;
/usr/include/stdint.h:typedef unsigned short int	uint_least16_t;
/usr/include/stdint.h:typedef unsigned int		uint_least32_t;
/usr/include/stdint.h:typedef unsigned long int	uint_least64_t;
/usr/include/stdint.h:typedef unsigned long long int	uint_least64_t;
/usr/include/stdint.h:typedef signed char		int_fast8_t;
/usr/include/stdint.h:typedef long int		int_fast16_t;
/usr/include/stdint.h:typedef long int		int_fast32_t;
/usr/include/stdint.h:typedef long int		int_fast64_t;
/usr/include/stdint.h:typedef int			int_fast16_t;
/usr/include/stdint.h:typedef int			int_fast32_t;
/usr/include/stdint.h:typedef long long int		int_fast64_t;
/usr/include/stdint.h:typedef unsigned char		uint_fast8_t;
/usr/include/stdint.h:typedef unsigned long int	uint_fast16_t;
/usr/include/stdint.h:typedef unsigned long int	uint_fast32_t;
/usr/include/stdint.h:typedef unsigned long int	uint_fast64_t;
/usr/include/stdint.h:typedef unsigned int		uint_fast16_t;
/usr/include/stdint.h:typedef unsigned int		uint_fast32_t;
/usr/include/stdint.h:typedef unsigned long long int	uint_fast64_t;
/usr/include/stdint.h:typedef long int		intptr_t;
/usr/include/stdint.h:typedef unsigned long int	uintptr_t;
/usr/include/stdint.h:typedef int			intptr_t;
/usr/include/stdint.h:typedef unsigned int		uintptr_t;
/usr/include/stdint.h:typedef long int		intmax_t;
/usr/include/stdint.h:typedef unsigned long int	uintmax_t;
/usr/include/stdint.h:typedef long long int		intmax_t;
/usr/include/stdint.h:typedef unsigned long long int	uintmax_t;
/usr/include/gconv.h:typedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,
/usr/include/gconv.h:typedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);
/usr/include/gconv.h:typedef int (*__gconv_init_fct) (struct __gconv_step *);
/usr/include/gconv.h:typedef void (*__gconv_end_fct) (struct __gconv_step *);
/usr/include/gconv.h:typedef struct __gconv_info
/usr/include/netrose/rose.h:typedef struct
/usr/include/sched.h:typedef __pid_t pid_t;
/usr/include/mtd/mtd-user.h:typedef struct mtd_info_user mtd_info_t;
/usr/include/mtd/mtd-user.h:typedef struct erase_info_user erase_info_t;
/usr/include/mtd/mtd-user.h:typedef struct region_info_user region_info_t;
/usr/include/mtd/mtd-user.h:typedef struct nand_oobinfo nand_oobinfo_t;
/usr/include/mtd/mtd-user.h:typedef struct nand_ecclayout_user nand_ecclayout_t;
/usr/include/argz.h:typedef int error_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __dev_t dev_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __gid_t gid_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __ino_t ino_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __ino64_t ino_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __mode_t mode_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __nlink_t nlink_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __off_t off_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __off64_t off_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __uid_t uid_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __blkcnt_t blkcnt_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __blkcnt64_t blkcnt_t;
/usr/include/x86_64-linux-gnu/sys/stat.h:typedef __blksize_t blksize_t;
/usr/include/x86_64-linux-gnu/sys/syslog.h:typedef struct _code {
/usr/include/x86_64-linux-gnu/sys/epoll.h:typedef __sigset_t sigset_t;
/usr/include/x86_64-linux-gnu/sys/epoll.h:typedef union epoll_data
/usr/include/x86_64-linux-gnu/sys/ucontext.h:__extension__ typedef long long int greg_t;
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef greg_t gregset_t[NGREG];
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct _libc_fpstate *fpregset_t;
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct ucontext
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef int greg_t;
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef greg_t gregset_t[NGREG];
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct _libc_fpstate *fpregset_t;
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct
/usr/include/x86_64-linux-gnu/sys/ucontext.h:typedef struct ucontext
/usr/include/x86_64-linux-gnu/sys/shm.h:typedef __pid_t pid_t;
/usr/include/x86_64-linux-gnu/sys/ipc.h:typedef __uid_t uid_t;
/usr/include/x86_64-linux-gnu/sys/ipc.h:typedef __gid_t gid_t;
/usr/include/x86_64-linux-gnu/sys/ipc.h:typedef __mode_t mode_t;
/usr/include/x86_64-linux-gnu/sys/ipc.h:typedef __key_t key_t;
/usr/include/x86_64-linux-gnu/sys/acct.h:typedef u_int16_t comp_t;
/usr/include/x86_64-linux-gnu/sys/socket.h:typedef union { __SOCKADDR_ALLTYPES
/usr/include/x86_64-linux-gnu/sys/socket.h:typedef union { __SOCKADDR_ALLTYPES
/usr/include/x86_64-linux-gnu/sys/mman.h:typedef __off_t off_t;
/usr/include/x86_64-linux-gnu/sys/mman.h:typedef __off64_t off_t;
/usr/include/x86_64-linux-gnu/sys/mman.h:typedef __mode_t mode_t;
/usr/include/x86_64-linux-gnu/sys/wait.h:typedef union
/usr/include/x86_64-linux-gnu/sys/wait.h:typedef __id_t id_t;
/usr/include/x86_64-linux-gnu/sys/statvfs.h:typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */
/usr/include/x86_64-linux-gnu/sys/statvfs.h:typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */
/usr/include/x86_64-linux-gnu/sys/statvfs.h:typedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */
/usr/include/x86_64-linux-gnu/sys/statvfs.h:typedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */
/usr/include/x86_64-linux-gnu/sys/time.h:typedef __suseconds_t suseconds_t;
/usr/include/x86_64-linux-gnu/sys/time.h:typedef struct timezone *__restrict __timezone_ptr_t;
/usr/include/x86_64-linux-gnu/sys/time.h:typedef void *__restrict __timezone_ptr_t;
/usr/include/x86_64-linux-gnu/sys/time.h:typedef enum __itimer_which __itimer_which_t;
/usr/include/x86_64-linux-gnu/sys/time.h:typedef int __itimer_which_t;
/usr/include/x86_64-linux-gnu/sys/select.h:typedef __sigset_t sigset_t;
/usr/include/x86_64-linux-gnu/sys/select.h:typedef __suseconds_t suseconds_t;
/usr/include/x86_64-linux-gnu/sys/select.h:typedef long int __fd_mask;
/usr/include/x86_64-linux-gnu/sys/select.h:typedef struct
/usr/include/x86_64-linux-gnu/sys/select.h:typedef __fd_mask fd_mask;
/usr/include/x86_64-linux-gnu/sys/eventfd.h:typedef uint64_t eventfd_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef __id_t id_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef enum __rlimit_resource __rlimit_resource_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef enum __rusage_who __rusage_who_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef enum __priority_which __priority_which_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef int __rlimit_resource_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef int __rusage_who_t;
/usr/include/x86_64-linux-gnu/sys/resource.h:typedef int __priority_which_t;
/usr/include/x86_64-linux-gnu/sys/poll.h:typedef unsigned long int nfds_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __u_char u_char;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __u_short u_short;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __u_int u_int;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __u_long u_long;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __quad_t quad_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __u_quad_t u_quad_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsid_t fsid_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __loff_t loff_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __ino_t ino_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __ino64_t ino_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __ino64_t ino64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __dev_t dev_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __gid_t gid_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __mode_t mode_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __nlink_t nlink_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __uid_t uid_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __off_t off_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __off64_t off_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __off64_t off64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __pid_t pid_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __id_t id_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __ssize_t ssize_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __daddr_t daddr_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __caddr_t caddr_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __key_t key_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __useconds_t useconds_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __suseconds_t suseconds_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef unsigned long int ulong;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef unsigned short int ushort;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef unsigned int uint;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	char int8_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	short int int16_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	int int32_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef long int int64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:__extension__ typedef long long int int64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	unsigned char u_int8_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	unsigned short int u_int16_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef	unsigned int u_int32_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef unsigned long int u_int64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:__extension__ typedef unsigned long long int u_int64_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef int register_t;
/usr/include/x86_64-linux-gnu/sys/types.h:  typedef int int##N##_t __attribute__ ((__mode__ (MODE)))
/usr/include/x86_64-linux-gnu/sys/types.h:  typedef unsigned int u_int##N##_t __attribute__ ((__mode__ (MODE)))
/usr/include/x86_64-linux-gnu/sys/types.h:typedef int register_t __attribute__ ((__mode__ (__word__)));
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __blksize_t blksize_t;
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __blkcnt64_t blkcnt_t;	   /* Type to count number of disk blocks.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */
/usr/include/x86_64-linux-gnu/sys/types.h:typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */
/usr/include/x86_64-linux-gnu/sys/procfs.h:__extension__ typedef unsigned long long elf_greg_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef unsigned long elf_greg_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:   user_regs_struct' directly in the typedef, but tradition says that
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef elf_greg_t elf_gregset_t[ELF_NGREG];
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef struct user_fpregs_struct elf_fpregset_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef struct user_fpxregs_struct elf_fpxregset_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef struct user_fpregs_struct elf_fpregset_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:   front to prevent clashes with Linux definitions, and the typedef
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef void *psaddr_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef elf_gregset_t prgregset_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef elf_fpregset_t prfpregset_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef __pid_t lwpid_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:/* Process status and info.  In the end we do provide typedefs for them.  */
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef struct elf_prstatus prstatus_t;
/usr/include/x86_64-linux-gnu/sys/procfs.h:typedef struct elf_prpsinfo prpsinfo_t;
/usr/include/x86_64-linux-gnu/sys/cdefs.h:/* This is not a typedef so `const __ptr_t' does the right thing.  */
/usr/include/x86_64-linux-gnu/sys/msg.h:typedef __pid_t pid_t;
/usr/include/x86_64-linux-gnu/sys/msg.h:typedef __ssize_t ssize_t;
/usr/include/x86_64-linux-gnu/sys/gmon_out.h:typedef enum
/usr/include/x86_64-linux-gnu/fpu_control.h:typedef unsigned int fpu_control_t __attribute__ ((__mode__ (__HI__)));
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++io.h:  typedef __gthread_mutex_t __c_lock;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++io.h:  typedef FILE __c_file;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++locale.h:  typedef __locale_t		__c_locale;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-single.h:typedef int __gthread_key_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-single.h:typedef int __gthread_once_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-single.h:typedef int __gthread_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-single.h:typedef int __gthread_recursive_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/atomic_word.h:typedef int _Atomic_word;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/ctype_base.h:    // Non-standard typedefs.
/usr/include/x86_64-linux-gnu/c++/4.9/bits/ctype_base.h:    typedef const int* 		__to_type;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/ctype_base.h:    typedef unsigned short 	mask;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/os_defines.h:// System-specific #define, typedefs, corrections, etc, go here.  This
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_t __gthread_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_key_t __gthread_key_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_once_t __gthread_once_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_mutex_t __gthread_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_mutex_t __gthread_recursive_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef pthread_cond_t __gthread_cond_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-default.h:typedef struct timespec __gthread_time_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/opt_random.h:	typedef uint64_t __uctype;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++config.h:  typedef __SIZE_TYPE__ 	size_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++config.h:  typedef __PTRDIFF_TYPE__	ptrdiff_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/c++config.h:  typedef decltype(nullptr)	nullptr_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_t __gthread_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_key_t __gthread_key_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_once_t __gthread_once_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_mutex_t __gthread_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_mutex_t __gthread_recursive_mutex_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef pthread_cond_t __gthread_cond_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/gthr-posix.h:typedef struct timespec __gthread_time_t;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/cxxabi_tweaks.h:  __extension__ typedef int __guard __attribute__((mode (__DI__)));
/usr/include/x86_64-linux-gnu/c++/4.9/bits/cxxabi_tweaks.h:  typedef void __cxa_vec_ctor_return_type;
/usr/include/x86_64-linux-gnu/c++/4.9/bits/cxxabi_tweaks.h:  typedef void __cxa_cdtor_return_type;
/usr/include/x86_64-linux-gnu/bits/mathdef.h:typedef float float_t;		/* `float' expressions are evaluated as `float'.  */
/usr/include/x86_64-linux-gnu/bits/mathdef.h:typedef double double_t;	/* `double' expressions are evaluated
/usr/include/x86_64-linux-gnu/bits/mathdef.h:typedef long double float_t;	/* `float' expressions are evaluated as
/usr/include/x86_64-linux-gnu/bits/mathdef.h:typedef long double double_t;	/* `double' expressions are evaluated as
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef union sigval
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef __clock_t __attribute__ ((__aligned__ (4))) __sigchld_clock_t;
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef __clock_t __sigchld_clock_t;
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef struct
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef union pthread_attr_t pthread_attr_t;
/usr/include/x86_64-linux-gnu/bits/siginfo.h:typedef struct sigevent
/usr/include/x86_64-linux-gnu/bits/sched.h:typedef unsigned long int __cpu_mask;
/usr/include/x86_64-linux-gnu/bits/sched.h:typedef struct
/usr/include/x86_64-linux-gnu/bits/xtitypes.h:typedef __SLONG32_TYPE __t_scalar_t;
/usr/include/x86_64-linux-gnu/bits/xtitypes.h:typedef __ULONG32_TYPE __t_uscalar_t;
/usr/include/x86_64-linux-gnu/bits/setjmp.h:typedef long int __jmp_buf[8];
/usr/include/x86_64-linux-gnu/bits/setjmp.h:__extension__ typedef long long int __jmp_buf[8];
/usr/include/x86_64-linux-gnu/bits/setjmp.h:typedef int __jmp_buf[6];
/usr/include/x86_64-linux-gnu/bits/msq.h:typedef __syscall_ulong_t msgqnum_t;
/usr/include/x86_64-linux-gnu/bits/msq.h:typedef __syscall_ulong_t msglen_t;
/usr/include/x86_64-linux-gnu/bits/shm.h:typedef __syscall_ulong_t shmatt_t;
/usr/include/x86_64-linux-gnu/bits/waitflags.h:typedef enum
/usr/include/x86_64-linux-gnu/bits/mqueue.h:typedef int mqd_t;
/usr/include/x86_64-linux-gnu/bits/sigset.h:typedef int __sig_atomic_t;
/usr/include/x86_64-linux-gnu/bits/sigset.h:typedef struct
/usr/include/x86_64-linux-gnu/bits/libc-lock.h:typedef struct { pthread_mutex_t mutex; } __libc_lock_recursive_t;
/usr/include/x86_64-linux-gnu/bits/libc-lock.h:typedef struct { int lock; int cnt; void *owner; } __libc_lock_recursive_t;
/usr/include/x86_64-linux-gnu/bits/libc-lock.h:typedef struct __libc_lock_recursive_opaque__ __libc_lock_recursive_t;
/usr/include/x86_64-linux-gnu/bits/fenv.h:typedef unsigned short int fexcept_t;
/usr/include/x86_64-linux-gnu/bits/fenv.h:typedef struct
/usr/include/x86_64-linux-gnu/bits/sockaddr.h:typedef unsigned short int sa_family_t;
/usr/include/x86_64-linux-gnu/bits/socket.h:typedef __socklen_t socklen_t;
/usr/include/x86_64-linux-gnu/bits/huge_val.h:typedef union { unsigned char __c[8]; double __d; } __huge_val_t;
/usr/include/x86_64-linux-gnu/bits/sigstack.h:typedef struct sigaltstack
/usr/include/x86_64-linux-gnu/bits/huge_valf.h:typedef union { unsigned char __c[4]; float __f; } __huge_valf_t;
/usr/include/x86_64-linux-gnu/bits/termios.h:typedef unsigned char	cc_t;
/usr/include/x86_64-linux-gnu/bits/termios.h:typedef unsigned int	speed_t;
/usr/include/x86_64-linux-gnu/bits/termios.h:typedef unsigned int	tcflag_t;
/usr/include/x86_64-linux-gnu/bits/string2.h:  typedef struct { unsigned char __arr[N]; }				      \
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef unsigned long int pthread_t;
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union pthread_attr_t pthread_attr_t;
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef struct __pthread_internal_list
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef struct __pthread_internal_slist
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef unsigned int pthread_key_t;
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef int pthread_once_t;
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef volatile int pthread_spinlock_t;
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:typedef union
/usr/include/x86_64-linux-gnu/bits/ipctypes.h:typedef int __ipc_pid_t;
/usr/include/x86_64-linux-gnu/bits/ipctypes.h:typedef unsigned short int __ipc_pid_t;
/usr/include/x86_64-linux-gnu/bits/resource.h:typedef __rlim_t rlim_t;
/usr/include/x86_64-linux-gnu/bits/resource.h:typedef __rlim64_t rlim_t;
/usr/include/x86_64-linux-gnu/bits/resource.h:typedef __rlim64_t rlim64_t;
/usr/include/x86_64-linux-gnu/bits/link.h:typedef struct La_i86_regs
/usr/include/x86_64-linux-gnu/bits/link.h:typedef struct La_i86_retval
/usr/include/x86_64-linux-gnu/bits/link.h:typedef float La_x86_64_xmm __attribute__ ((__vector_size__ (16)));
/usr/include/x86_64-linux-gnu/bits/link.h:typedef float La_x86_64_ymm
/usr/include/x86_64-linux-gnu/bits/link.h:typedef double La_x86_64_zmm
/usr/include/x86_64-linux-gnu/bits/link.h:typedef float La_x86_64_xmm __attribute__ ((__mode__ (__V4SF__)));
/usr/include/x86_64-linux-gnu/bits/link.h:typedef union
/usr/include/x86_64-linux-gnu/bits/link.h:typedef struct La_x86_64_regs
/usr/include/x86_64-linux-gnu/bits/link.h:typedef struct La_x86_64_retval
/usr/include/x86_64-linux-gnu/bits/stdio-lock.h:typedef struct { int lock; int cnt; void *owner; } _IO_lock_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned char __u_char;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned short int __u_short;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned int __u_int;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned long int __u_long;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef signed char __int8_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned char __uint8_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef signed short int __int16_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned short int __uint16_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef signed int __int32_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned int __uint32_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef signed long int __int64_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned long int __uint64_t;
/usr/include/x86_64-linux-gnu/bits/types.h:__extension__ typedef signed long long int __int64_t;
/usr/include/x86_64-linux-gnu/bits/types.h:__extension__ typedef unsigned long long int __uint64_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef long int __quad_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef unsigned long int __u_quad_t;
/usr/include/x86_64-linux-gnu/bits/types.h:__extension__ typedef long long int __quad_t;
/usr/include/x86_64-linux-gnu/bits/types.h:__extension__ typedef unsigned long long int __u_quad_t;
/usr/include/x86_64-linux-gnu/bits/types.h:   make the typedefs and the formats match up across all GNU platforms.  If
/usr/include/x86_64-linux-gnu/bits/types.h:/* We want __extension__ before typedef's that use nonstandard base types
/usr/include/x86_64-linux-gnu/bits/types.h:# define __STD_TYPE		__extension__ typedef
/usr/include/x86_64-linux-gnu/bits/types.h:/* No need to mark the typedef with __extension__.   */
/usr/include/x86_64-linux-gnu/bits/types.h:# define __STD_TYPE		typedef
/usr/include/x86_64-linux-gnu/bits/types.h:typedef __off64_t __loff_t;	/* Type of file sizes and offsets (LFS).  */
/usr/include/x86_64-linux-gnu/bits/types.h:typedef __quad_t *__qaddr_t;
/usr/include/x86_64-linux-gnu/bits/types.h:typedef char *__caddr_t;
/usr/include/x86_64-linux-gnu/bits/semaphore.h:typedef union
/usr/include/x86_64-linux-gnu/bits/elfclass.h:typedef uint32_t Elf_Symndx;
/usr/include/x86_64-linux-gnu/asm/siginfo.h:typedef long long __kernel_si_clock_t __attribute__((aligned(4)));
/usr/include/x86_64-linux-gnu/asm/signal.h:typedef unsigned long sigset_t;
/usr/include/x86_64-linux-gnu/asm/signal.h:typedef struct sigaltstack {
/usr/include/x86_64-linux-gnu/asm/posix_types_32.h:typedef unsigned short	__kernel_mode_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_32.h:typedef unsigned short	__kernel_ipc_pid_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_32.h:typedef unsigned short	__kernel_uid_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_32.h:typedef unsigned short	__kernel_gid_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_32.h:typedef unsigned short	__kernel_old_dev_t;
/usr/include/x86_64-linux-gnu/asm/mtrr.h:typedef __u8 mtrr_type;
/usr/include/x86_64-linux-gnu/asm/hyperv.h:typedef struct _HV_REFERENCE_TSC_PAGE {
/usr/include/x86_64-linux-gnu/asm/posix_types_x32.h:typedef long long __kernel_long_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_x32.h:typedef unsigned long long __kernel_ulong_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_64.h:typedef unsigned short __kernel_old_uid_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_64.h:typedef unsigned short __kernel_old_gid_t;
/usr/include/x86_64-linux-gnu/asm/posix_types_64.h:typedef unsigned long	__kernel_old_dev_t;
/usr/include/asm-generic/siginfo.h:typedef union sigval {
/usr/include/asm-generic/siginfo.h:typedef struct siginfo {
/usr/include/asm-generic/siginfo.h:typedef struct sigevent {
/usr/include/asm-generic/int-ll64.h:typedef __signed__ char __s8;
/usr/include/asm-generic/int-ll64.h:typedef unsigned char __u8;
/usr/include/asm-generic/int-ll64.h:typedef __signed__ short __s16;
/usr/include/asm-generic/int-ll64.h:typedef unsigned short __u16;
/usr/include/asm-generic/int-ll64.h:typedef __signed__ int __s32;
/usr/include/asm-generic/int-ll64.h:typedef unsigned int __u32;
/usr/include/asm-generic/int-ll64.h:__extension__ typedef __signed__ long long __s64;
/usr/include/asm-generic/int-ll64.h:__extension__ typedef unsigned long long __u64;
/usr/include/asm-generic/int-ll64.h:typedef __signed__ long long __s64;
/usr/include/asm-generic/int-ll64.h:typedef unsigned long long __u64;
/usr/include/asm-generic/signal.h:typedef struct {
/usr/include/asm-generic/signal.h:typedef unsigned long old_sigset_t;
/usr/include/asm-generic/signal.h:typedef struct sigaltstack {
/usr/include/asm-generic/termbits.h:typedef unsigned char	cc_t;
/usr/include/asm-generic/termbits.h:typedef unsigned int	speed_t;
/usr/include/asm-generic/termbits.h:typedef unsigned int	tcflag_t;
/usr/include/asm-generic/posix_types.h:typedef long		__kernel_long_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned long	__kernel_ulong_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_ulong_t __kernel_ino_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_mode_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_pid_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_ipc_pid_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_uid_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_gid_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t		__kernel_suseconds_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_daddr_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_uid32_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_gid32_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_uid_t	__kernel_old_uid_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_gid_t	__kernel_old_gid_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_old_dev_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned int	__kernel_size_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_ssize_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_ptrdiff_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_ulong_t __kernel_size_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t	__kernel_ssize_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t	__kernel_ptrdiff_t;
/usr/include/asm-generic/posix_types.h:typedef struct {
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t	__kernel_off_t;
/usr/include/asm-generic/posix_types.h:typedef long long	__kernel_loff_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t	__kernel_time_t;
/usr/include/asm-generic/posix_types.h:typedef __kernel_long_t	__kernel_clock_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_timer_t;
/usr/include/asm-generic/posix_types.h:typedef int		__kernel_clockid_t;
/usr/include/asm-generic/posix_types.h:typedef char *		__kernel_caddr_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned short	__kernel_uid16_t;
/usr/include/asm-generic/posix_types.h:typedef unsigned short	__kernel_gid16_t;
/usr/include/asm-generic/signal-defs.h:typedef void __signalfn_t(int);
/usr/include/asm-generic/signal-defs.h:typedef __signalfn_t *__sighandler_t;
/usr/include/asm-generic/signal-defs.h:typedef void __restorefn_t(void);
/usr/include/asm-generic/signal-defs.h:typedef __restorefn_t *__sigrestore_t;
/usr/include/asm-generic/int-l64.h:typedef __signed__ char __s8;
/usr/include/asm-generic/int-l64.h:typedef unsigned char __u8;
/usr/include/asm-generic/int-l64.h:typedef __signed__ short __s16;
/usr/include/asm-generic/int-l64.h:typedef unsigned short __u16;
/usr/include/asm-generic/int-l64.h:typedef __signed__ int __s32;
/usr/include/asm-generic/int-l64.h:typedef unsigned int __u32;
/usr/include/asm-generic/int-l64.h:typedef __signed__ long __s64;
/usr/include/asm-generic/int-l64.h:typedef unsigned long __u64;
/usr/include/linux/aio_abi.h:typedef __kernel_ulong_t aio_context_t;
/usr/include/linux/irda.h:typedef enum {
/usr/include/linux/atmmpc.h:typedef struct in_ctrl_info {
/usr/include/linux/atmmpc.h:typedef struct eg_ctrl_info {
/usr/include/linux/can.h:typedef __u32 canid_t;
/usr/include/linux/can.h:typedef __u32 can_err_mask_t;
/usr/include/linux/cciss_defs.h:typedef union _SCSI3Addr_struct {
/usr/include/linux/cciss_defs.h:typedef struct _PhysDevAddr_struct {
/usr/include/linux/cciss_defs.h:typedef struct _LogDevAddr_struct {
/usr/include/linux/cciss_defs.h:typedef union _LUNAddr_struct {
/usr/include/linux/cciss_defs.h:typedef struct _RequestBlock_struct {
/usr/include/linux/cciss_defs.h:typedef union _MoreErrInfo_struct{
/usr/include/linux/cciss_defs.h:typedef struct _ErrorInfo_struct {
/usr/include/linux/auto_fs.h:typedef unsigned long autofs_wqt_t;
/usr/include/linux/auto_fs.h:typedef unsigned int autofs_wqt_t;
/usr/include/linux/hdreg.h:typedef unsigned char task_ioreg_t;
/usr/include/linux/hdreg.h:typedef unsigned long sata_ioreg_t;
/usr/include/linux/hdreg.h:typedef union ide_reg_valid_s {
/usr/include/linux/hdreg.h:typedef struct ide_task_request_s {
/usr/include/linux/hdreg.h:typedef struct ide_ioctl_request_s {
/usr/include/linux/hdreg.h:typedef struct hd_drive_task_hdr {
/usr/include/linux/hdreg.h:typedef struct hd_drive_hob_hdr {
/usr/include/linux/capi.h:typedef struct capi_register_params {	/* CAPI_REGISTER */
/usr/include/linux/capi.h:typedef struct capi_version {
/usr/include/linux/capi.h:typedef struct capi_profile {
/usr/include/linux/capi.h:typedef struct capi_manufacturer_cmd {
/usr/include/linux/capi.h:typedef union capi_ioctl_struct {
/usr/include/linux/isdn.h:typedef struct {
/usr/include/linux/isdn.h:typedef struct {
/usr/include/linux/isdn.h:typedef struct {
/usr/include/linux/toshiba.h:typedef struct {
/usr/include/linux/auto_fs4.h:typedef struct autofs_v5_packet autofs_packet_missing_indirect_t;
/usr/include/linux/auto_fs4.h:typedef struct autofs_v5_packet autofs_packet_expire_indirect_t;
/usr/include/linux/auto_fs4.h:typedef struct autofs_v5_packet autofs_packet_missing_direct_t;
/usr/include/linux/auto_fs4.h:typedef struct autofs_v5_packet autofs_packet_expire_direct_t;
/usr/include/linux/parport.h:typedef enum {
/usr/include/linux/uuid.h:typedef struct {
/usr/include/linux/uuid.h:typedef struct {
/usr/include/linux/if_eql.h:typedef struct master_config {
/usr/include/linux/if_eql.h:typedef struct slave_config {
/usr/include/linux/if_eql.h:typedef struct slaving_request {
/usr/include/linux/raid/md_p.h:typedef struct mdp_device_descriptor_s {
/usr/include/linux/raid/md_p.h:typedef struct mdp_superblock_s {
/usr/include/linux/raid/md_u.h:typedef struct mdu_version_s {
/usr/include/linux/raid/md_u.h:typedef struct mdu_array_info_s {
/usr/include/linux/raid/md_u.h:typedef struct mdu_disk_info_s {
/usr/include/linux/raid/md_u.h:typedef struct mdu_start_info_s {
/usr/include/linux/raid/md_u.h:typedef struct mdu_bitmap_file_s
/usr/include/linux/raid/md_u.h:typedef struct mdu_param_s
/usr/include/linux/mroute.h:typedef unsigned long vifbitmap_t;	/* User mode code depends on this lot */
/usr/include/linux/mroute.h:typedef unsigned short vifi_t;
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/hdlc/ioctl.h:typedef struct {
/usr/include/linux/b1lli.h:typedef struct avmb1_t4file {
/usr/include/linux/b1lli.h:typedef struct avmb1_loaddef {
/usr/include/linux/b1lli.h:typedef struct avmb1_loadandconfigdef {
/usr/include/linux/b1lli.h:typedef struct avmb1_resetdef {
/usr/include/linux/b1lli.h:typedef struct avmb1_getdef {
/usr/include/linux/b1lli.h:typedef struct avmb1_carddef {
/usr/include/linux/b1lli.h:typedef struct avmb1_extcarddef {
/usr/include/linux/elfcore.h:typedef elf_greg_t greg_t;
/usr/include/linux/elfcore.h:typedef elf_gregset_t gregset_t;
/usr/include/linux/elfcore.h:typedef elf_fpregset_t fpregset_t;
/usr/include/linux/elfcore.h:typedef elf_fpxregset_t fpxregset_t;
/usr/include/linux/elfcore.h: * and the typedef forms have been avoided.  This is mostly like
/usr/include/linux/elfcore.h:typedef struct elf_prstatus prstatus_t;
/usr/include/linux/elfcore.h:typedef struct elf_prpsinfo prpsinfo_t;
/usr/include/linux/ppp_defs.h:typedef __u32		ext_accm[8];
/usr/include/linux/jffs2.h:typedef struct {
/usr/include/linux/jffs2.h:typedef struct {
/usr/include/linux/jffs2.h:typedef struct {
/usr/include/linux/capability.h:typedef struct __user_cap_header_struct {
/usr/include/linux/capability.h:typedef struct __user_cap_data_struct {
/usr/include/linux/atmapi.h:typedef struct { unsigned char _[8]; } __ATM_API_ALIGN atm_kptr_t;
/usr/include/linux/coda.h:typedef unsigned long u_long;
/usr/include/linux/coda.h:typedef unsigned int u_int;
/usr/include/linux/coda.h:typedef unsigned short u_short;
/usr/include/linux/coda.h:typedef u_long ino_t;
/usr/include/linux/coda.h:typedef u_long dev_t;
/usr/include/linux/coda.h:typedef void * caddr_t;
/usr/include/linux/coda.h:typedef unsigned __int64 u_quad_t;
/usr/include/linux/coda.h:typedef unsigned long long u_quad_t;
/usr/include/linux/coda.h:typedef unsigned long long u_quad_t;
/usr/include/linux/coda.h:typedef unsigned long long u_quad_t;
/usr/include/linux/coda.h:typedef signed char	      int8_t;
/usr/include/linux/coda.h:typedef unsigned char	    u_int8_t;
/usr/include/linux/coda.h:typedef short		     int16_t;
/usr/include/linux/coda.h:typedef unsigned short	   u_int16_t;
/usr/include/linux/coda.h:typedef int		     int32_t;
/usr/include/linux/coda.h:typedef unsigned int	   u_int32_t;
/usr/include/linux/coda.h:typedef u_int32_t vuid_t;
/usr/include/linux/coda.h:typedef u_int32_t vgid_t;
/usr/include/linux/atm_nicstar.h:typedef struct buf_nr
/usr/include/linux/atm_nicstar.h:typedef struct pool_levels
/usr/include/linux/netfilter/ipset/ip_set.h:typedef __u16 ip_set_id_t;
/usr/include/linux/coff.h:typedef struct 
/usr/include/linux/apm_bios.h:typedef unsigned short	apm_event_t;
/usr/include/linux/apm_bios.h:typedef unsigned short	apm_eventinfo_t;
/usr/include/linux/qnxtypes.h:typedef __le16 qnx4_nxtnt_t;
/usr/include/linux/qnxtypes.h:typedef __u8  qnx4_ftype_t;
/usr/include/linux/qnxtypes.h:typedef struct {
/usr/include/linux/qnxtypes.h:typedef __le16 qnx4_mode_t;
/usr/include/linux/qnxtypes.h:typedef __le16 qnx4_muid_t;
/usr/include/linux/qnxtypes.h:typedef __le16 qnx4_mgid_t;
/usr/include/linux/qnxtypes.h:typedef __le32 qnx4_off_t;
/usr/include/linux/qnxtypes.h:typedef __le16 qnx4_nlink_t;
/usr/include/linux/acct.h:typedef __u16	comp_t;
/usr/include/linux/acct.h:typedef __u32	comp2_t;
/usr/include/linux/agpgart.h:typedef struct _agp_info {
/usr/include/linux/agpgart.h:typedef struct _agp_setup {
/usr/include/linux/agpgart.h:typedef struct _agp_segment {
/usr/include/linux/agpgart.h:typedef struct _agp_region {
/usr/include/linux/agpgart.h:typedef struct _agp_allocate {
/usr/include/linux/agpgart.h:typedef struct _agp_bind {
/usr/include/linux/agpgart.h:typedef struct _agp_unbind {
/usr/include/linux/dqblk_xfs.h:typedef struct fs_disk_quota {
/usr/include/linux/dqblk_xfs.h:typedef struct fs_qfilestat {
/usr/include/linux/dqblk_xfs.h:typedef struct fs_quota_stat {
/usr/include/linux/socket.h:typedef unsigned short __kernel_sa_family_t;
/usr/include/linux/posix_types.h:typedef struct {
/usr/include/linux/posix_types.h:typedef void (*__kernel_sighandler_t)(int);
/usr/include/linux/posix_types.h:typedef int __kernel_key_t;
/usr/include/linux/posix_types.h:typedef int __kernel_mqd_t;
/usr/include/linux/kd.h:typedef char scrnmap_t;
/usr/include/linux/virtio_types.h:typedef __u16 __bitwise__ __virtio16;
/usr/include/linux/virtio_types.h:typedef __u32 __bitwise__ __virtio32;
/usr/include/linux/virtio_types.h:typedef __u64 __bitwise__ __virtio64;
/usr/include/linux/cm4000_cs.h:typedef struct atreq {
/usr/include/linux/cm4000_cs.h:typedef struct ptsreq {
/usr/include/linux/net.h:typedef enum {
/usr/include/linux/atmlec.h:typedef enum {
/usr/include/linux/zorro.h:typedef __u32 zorro_id;
/usr/include/linux/kernelcapi.h:typedef struct kcapi_flagdef {
/usr/include/linux/kernelcapi.h:typedef struct kcapi_carddef {
/usr/include/linux/ax25.h:typedef struct {
/usr/include/linux/synclink.h:typedef struct _MGSL_PARAMS
/usr/include/linux/sctp.h:typedef __s32 sctp_assoc_t;
/usr/include/linux/sctp.h:typedef union {
/usr/include/linux/sctp.h:typedef enum sctp_cmsg_type {
/usr/include/linux/sctp.h:typedef enum sctp_sn_error {
/usr/include/linux/sctp.h:typedef struct {
/usr/include/linux/soundcard.h:typedef struct synth_control
/usr/include/linux/soundcard.h:typedef struct remove_sample
/usr/include/linux/soundcard.h:typedef struct seq_event_rec {
/usr/include/linux/soundcard.h:typedef unsigned char sbi_instr_data[32];
/usr/include/linux/soundcard.h:typedef struct {
/usr/include/linux/soundcard.h:typedef struct audio_buf_info {
/usr/include/linux/soundcard.h:typedef struct count_info {
/usr/include/linux/soundcard.h:typedef struct buffmem_desc {
/usr/include/linux/soundcard.h:typedef struct copr_buffer {
/usr/include/linux/soundcard.h:typedef struct copr_debug_buf {
/usr/include/linux/soundcard.h:typedef struct copr_msg {
/usr/include/linux/soundcard.h:typedef struct mixer_info
/usr/include/linux/soundcard.h:typedef struct _old_mixer_info /* Obsolete */
/usr/include/linux/soundcard.h:typedef unsigned char mixer_record[128];
/usr/include/linux/soundcard.h:typedef struct mixer_vol_table {
/usr/include/linux/dlm.h:typedef void dlm_lockspace_t;
/usr/include/linux/elf.h:typedef __u32	Elf32_Addr;
/usr/include/linux/elf.h:typedef __u16	Elf32_Half;
/usr/include/linux/elf.h:typedef __u32	Elf32_Off;
/usr/include/linux/elf.h:typedef __s32	Elf32_Sword;
/usr/include/linux/elf.h:typedef __u32	Elf32_Word;
/usr/include/linux/elf.h:typedef __u64	Elf64_Addr;
/usr/include/linux/elf.h:typedef __u16	Elf64_Half;
/usr/include/linux/elf.h:typedef __s16	Elf64_SHalf;
/usr/include/linux/elf.h:typedef __u64	Elf64_Off;
/usr/include/linux/elf.h:typedef __s32	Elf64_Sword;
/usr/include/linux/elf.h:typedef __u32	Elf64_Word;
/usr/include/linux/elf.h:typedef __u64	Elf64_Xword;
/usr/include/linux/elf.h:typedef __s64	Elf64_Sxword;
/usr/include/linux/elf.h:typedef struct dynamic{
/usr/include/linux/elf.h:typedef struct {
/usr/include/linux/elf.h:typedef struct elf32_rel {
/usr/include/linux/elf.h:typedef struct elf64_rel {
/usr/include/linux/elf.h:typedef struct elf32_rela{
/usr/include/linux/elf.h:typedef struct elf64_rela {
/usr/include/linux/elf.h:typedef struct elf32_sym{
/usr/include/linux/elf.h:typedef struct elf64_sym {
/usr/include/linux/elf.h:typedef struct elf32_hdr{
/usr/include/linux/elf.h:typedef struct elf64_hdr {
/usr/include/linux/elf.h:typedef struct elf32_phdr{
/usr/include/linux/elf.h:typedef struct elf64_phdr {
/usr/include/linux/elf.h:typedef struct elf32_shdr {
/usr/include/linux/elf.h:typedef struct elf64_shdr {
/usr/include/linux/elf.h:typedef struct elf32_note {
/usr/include/linux/elf.h:typedef struct elf64_note {
/usr/include/linux/cdrom.h:typedef union {
/usr/include/linux/cdrom.h:typedef __u8 dvd_key[5];		/* 40-bit value, MSB is first elem. */
/usr/include/linux/cdrom.h:typedef __u8 dvd_challenge[10];	/* 80-bit value, MSB is first elem. */
/usr/include/linux/cdrom.h:typedef union {
/usr/include/linux/cdrom.h:typedef struct {
/usr/include/linux/cdrom.h:typedef struct {
/usr/include/linux/xfrm.h:typedef union {
/usr/include/linux/telephony.h:typedef enum {
/usr/include/linux/telephony.h:typedef enum {
/usr/include/linux/telephony.h:typedef struct {
/usr/include/linux/telephony.h:typedef enum {
/usr/include/linux/android/binder.h:typedef __u32 binder_size_t;
/usr/include/linux/android/binder.h:typedef __u32 binder_uintptr_t;
/usr/include/linux/android/binder.h:typedef __u64 binder_size_t;
/usr/include/linux/android/binder.h:typedef __u64 binder_uintptr_t;
/usr/include/linux/fd.h:typedef char floppy_drive_name[16];
/usr/include/linux/rose.h:typedef struct {
/usr/include/linux/types.h:typedef __u16 __bitwise __le16;
/usr/include/linux/types.h:typedef __u16 __bitwise __be16;
/usr/include/linux/types.h:typedef __u32 __bitwise __le32;
/usr/include/linux/types.h:typedef __u32 __bitwise __be32;
/usr/include/linux/types.h:typedef __u64 __bitwise __le64;
/usr/include/linux/types.h:typedef __u64 __bitwise __be64;
/usr/include/linux/types.h:typedef __u16 __bitwise __sum16;
/usr/include/linux/types.h:typedef __u32 __bitwise __wsum;
/usr/include/linux/if_bonding.h:typedef struct ifbond {
/usr/include/linux/if_bonding.h:typedef struct ifslave {
/usr/include/linux/dvb/video.h:typedef enum {
/usr/include/linux/dvb/video.h:typedef enum {
/usr/include/linux/dvb/video.h:typedef enum {
/usr/include/linux/dvb/video.h:typedef struct {
/usr/include/linux/dvb/video.h:typedef enum {
/usr/include/linux/dvb/video.h:typedef enum {
/usr/include/linux/dvb/video.h:typedef
/usr/include/linux/dvb/video.h:typedef struct video_spu {
/usr/include/linux/dvb/video.h:typedef struct video_spu_palette {      /* SPU Palette information */
/usr/include/linux/dvb/video.h:typedef struct video_navi_pack {
/usr/include/linux/dvb/video.h:typedef __u16 video_attributes_t;
/usr/include/linux/dvb/frontend.h:typedef enum fe_type {
/usr/include/linux/dvb/frontend.h:typedef enum fe_caps {
/usr/include/linux/dvb/frontend.h:typedef enum fe_sec_voltage {
/usr/include/linux/dvb/frontend.h:typedef enum fe_sec_tone_mode {
/usr/include/linux/dvb/frontend.h:typedef enum fe_sec_mini_cmd {
/usr/include/linux/dvb/frontend.h:typedef enum fe_status {
/usr/include/linux/dvb/frontend.h:typedef enum fe_spectral_inversion {
/usr/include/linux/dvb/frontend.h:typedef enum fe_code_rate {
/usr/include/linux/dvb/frontend.h:typedef enum fe_modulation {
/usr/include/linux/dvb/frontend.h:typedef enum fe_transmit_mode {
/usr/include/linux/dvb/frontend.h:typedef enum fe_bandwidth {
/usr/include/linux/dvb/frontend.h:typedef enum fe_guard_interval {
/usr/include/linux/dvb/frontend.h:typedef enum fe_hierarchy {
/usr/include/linux/dvb/frontend.h:typedef enum fe_pilot {
/usr/include/linux/dvb/frontend.h:typedef enum fe_rolloff {
/usr/include/linux/dvb/frontend.h:typedef enum fe_delivery_system {
/usr/include/linux/dvb/audio.h:typedef enum {
/usr/include/linux/dvb/audio.h:typedef enum {
/usr/include/linux/dvb/audio.h:typedef enum {
/usr/include/linux/dvb/audio.h:typedef struct audio_mixer {
/usr/include/linux/dvb/audio.h:typedef struct audio_status {
/usr/include/linux/dvb/audio.h:typedef
/usr/include/linux/dvb/audio.h:typedef __u16 audio_attributes_t;
/usr/include/linux/dvb/dmx.h:typedef enum
/usr/include/linux/dvb/dmx.h:typedef enum
/usr/include/linux/dvb/dmx.h:typedef enum dmx_ts_pes
/usr/include/linux/dvb/dmx.h:typedef struct dmx_filter
/usr/include/linux/dvb/dmx.h:typedef struct dmx_caps {
/usr/include/linux/dvb/dmx.h:typedef enum {
/usr/include/linux/dvb/osd.h:typedef enum {
/usr/include/linux/dvb/osd.h:typedef struct osd_cmd_s {
/usr/include/linux/dvb/osd.h:typedef enum {
/usr/include/linux/dvb/osd.h:typedef struct osd_cap_s {
/usr/include/linux/dvb/ca.h:typedef struct ca_slot_info {
/usr/include/linux/dvb/ca.h:typedef struct ca_descr_info {
/usr/include/linux/dvb/ca.h:typedef struct ca_caps {
/usr/include/linux/dvb/ca.h:typedef struct ca_msg {
/usr/include/linux/dvb/ca.h:typedef struct ca_descr {
/usr/include/linux/dvb/ca.h:typedef struct ca_pid {
/usr/include/linux/virtio_net.h:typedef __u8 virtio_net_ctrl_ack;
/usr/include/linux/if_pppox.h:typedef __be16 sid_t;
/usr/include/linux/ixjuser.h:typedef enum {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef enum {
/usr/include/linux/ixjuser.h:typedef enum {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef enum {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef enum {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/ixjuser.h:typedef struct {
/usr/include/linux/atm.h:typedef unsigned short atm_backend_t;
/usr/include/linux/cciss_ioctl.h:typedef struct _cciss_pci_info_struct
/usr/include/linux/cciss_ioctl.h:typedef struct _cciss_coalint_struct
/usr/include/linux/cciss_ioctl.h:typedef char NodeName_type[16];
/usr/include/linux/cciss_ioctl.h:typedef __u32 Heartbeat_type;
/usr/include/linux/cciss_ioctl.h:typedef __u32 BusTypes_type;
/usr/include/linux/cciss_ioctl.h:typedef char FirmwareVer_type[4];
/usr/include/linux/cciss_ioctl.h:typedef __u32 DriverVer_type;
/usr/include/linux/cciss_ioctl.h:typedef struct _IOCTL_Command_struct {
/usr/include/linux/cciss_ioctl.h:typedef struct _BIG_IOCTL_Command_struct {
/usr/include/linux/cciss_ioctl.h:typedef struct _LogvolInfo_struct{
/usr/include/linux/scc.h:typedef unsigned long io_port;	/* type definition for an 'io port address' */
/usr/include/linux/i2o-dev.h:typedef struct i2o_sg_io_hdr {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_pci_bus {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_local_bus {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_isa_bus {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_eisa_bus_info {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_mca_bus {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_other_bus {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_hrt_entry {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_hrt {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_lct_entry {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_lct {
/usr/include/linux/i2o-dev.h:typedef struct _i2o_status_block {
/usr/include/linux/mroute6.h:typedef unsigned long mifbitmap_t;	/* User mode code depends on this lot */
/usr/include/linux/mroute6.h:typedef unsigned short mifi_t;
/usr/include/linux/mroute6.h:typedef	__u32		if_mask;
/usr/include/linux/mroute6.h:typedef struct if_set {
/usr/include/linux/aufs_type.h:typedef int8_t aufs_bindex_t;
/usr/include/linux/aufs_type.h:typedef int16_t aufs_bindex_t;
/usr/include/linux/aufs_type.h:typedef struct {
/usr/include/linux/rds.h:typedef uint64_t	rds_rdma_cookie_t;
/usr/include/linux/videodev2.h:typedef __u64 v4l2_std_id;
/usr/include/linux/wireless.h:#include <linux/types.h>		/* for __u* and __s* typedefs */
/usr/include/setjmp.h:typedef struct __jmp_buf_tag jmp_buf[1];
/usr/include/setjmp.h:typedef struct __jmp_buf_tag sigjmp_buf[1];
/usr/include/spawn.h:typedef struct
/usr/include/spawn.h:typedef struct
/usr/include/scsi/sg.h:typedef struct sg_iovec
/usr/include/scsi/sg.h:typedef struct sg_io_hdr
/usr/include/scsi/sg.h:typedef struct sg_req_info {
/usr/include/scsi/sg.h:typedef struct sg_io_hdr Sg_io_hdr;
/usr/include/scsi/sg.h:typedef struct sg_io_vec Sg_io_vec;
/usr/include/scsi/sg.h:typedef struct sg_scsi_id Sg_scsi_id;
/usr/include/scsi/sg.h:typedef struct sg_req_info Sg_req_info;
/usr/include/rdma/ib_user_mad.h: * typedef.
/usr/include/rdma/ib_user_mad.h:typedef unsigned long __attribute__((aligned(4))) packed_ulong;
/usr/include/ftw.h:typedef int (*__ftw_func_t) (const char *__filename,
/usr/include/ftw.h:typedef int (*__ftw64_func_t) (const char *__filename,
/usr/include/ftw.h:typedef int (*__nftw_func_t) (const char *__filename,
/usr/include/ftw.h:typedef int (*__nftw64_func_t) (const char *__filename,
/usr/include/dbus-1.0/dbus/dbus-python.h:typedef void (*_dbus_py_func_ptr)(void);
/usr/include/dbus-1.0/dbus/dbus-python.h:typedef dbus_bool_t (*_dbus_py_conn_setup_func)(DBusConnection *, void *);
/usr/include/dbus-1.0/dbus/dbus-python.h:typedef dbus_bool_t (*_dbus_py_srv_setup_func)(DBusServer *, void *);
/usr/include/dbus-1.0/dbus/dbus-python.h:typedef void (*_dbus_py_free_func)(void *);
/usr/include/netipx/ipx.h:typedef struct ipx_route_definition
/usr/include/netipx/ipx.h:typedef struct ipx_interface_definition
/usr/include/netipx/ipx.h:typedef struct ipx_config_data
/usr/include/sound/asequencer.h:typedef unsigned char snd_seq_event_type_t;
/usr/include/sound/asequencer.h:typedef unsigned int snd_seq_tick_time_t;	/* midi ticks */
/usr/include/sound/asequencer.h:typedef int __bitwise snd_seq_client_type_t;
/usr/include/sound/hdspm.h:/* typedefs for compatibility to user-space */
/usr/include/sound/hdspm.h:typedef struct hdspm_peak_rms hdspm_peak_rms_t;
/usr/include/sound/hdspm.h:typedef struct hdspm_config_info hdspm_config_info_t;
/usr/include/sound/hdspm.h:typedef struct hdspm_version hdspm_version_t;
/usr/include/sound/hdspm.h:typedef struct hdspm_channelfader snd_hdspm_channelfader_t;
/usr/include/sound/hdspm.h:typedef struct hdspm_mixer hdspm_mixer_t;
/usr/include/sound/emu10k1.h:/* typedefs for compatibility to user-space */
/usr/include/sound/emu10k1.h:typedef struct snd_emu10k1_fx8010_info emu10k1_fx8010_info_t;
/usr/include/sound/emu10k1.h:typedef struct snd_emu10k1_fx8010_control_gpr emu10k1_fx8010_control_gpr_t;
/usr/include/sound/emu10k1.h:typedef struct snd_emu10k1_fx8010_code emu10k1_fx8010_code_t;
/usr/include/sound/emu10k1.h:typedef struct snd_emu10k1_fx8010_tram emu10k1_fx8010_tram_t;
/usr/include/sound/emu10k1.h:typedef struct snd_emu10k1_fx8010_pcm_rec emu10k1_fx8010_pcm_t;
/usr/include/sound/asound.h:typedef unsigned long snd_pcm_uframes_t;
/usr/include/sound/asound.h:typedef signed long snd_pcm_sframes_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_pcm_access_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_pcm_format_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_pcm_subformat_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_pcm_state_t;
/usr/include/sound/asound.h:typedef int snd_pcm_hw_param_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_ctl_elem_type_t;
/usr/include/sound/asound.h:typedef int __bitwise snd_ctl_elem_iface_t;
/usr/include/sound/hdsp.h:/* typedefs for compatibility to user-space */
/usr/include/sound/hdsp.h:typedef enum HDSP_IO_Type HDSP_IO_Type;
/usr/include/sound/hdsp.h:typedef struct hdsp_peak_rms hdsp_peak_rms_t;
/usr/include/sound/hdsp.h:typedef struct hdsp_config_info hdsp_config_info_t;
/usr/include/sound/hdsp.h:typedef struct hdsp_firmware hdsp_firmware_t;
/usr/include/sound/hdsp.h:typedef struct hdsp_version hdsp_version_t;
/usr/include/sound/hdsp.h:typedef struct hdsp_mixer hdsp_mixer_t;
/usr/include/sound/hdsp.h:typedef struct hdsp_9632_aeb hdsp_9632_aeb_t;
/usr/include/xlocale.h:typedef struct __locale_struct
/usr/include/xlocale.h:typedef __locale_t locale_t;
/usr/include/signal.h:typedef __sig_atomic_t sig_atomic_t;
/usr/include/signal.h:typedef __sigset_t sigset_t;
/usr/include/signal.h:typedef __pid_t pid_t;
/usr/include/signal.h:typedef __uid_t uid_t;
/usr/include/signal.h:typedef void (*__sighandler_t) (int);
/usr/include/signal.h:typedef __sighandler_t sighandler_t;
/usr/include/signal.h:typedef __sighandler_t sig_t;
/usr/include/nl_types.h:typedef void *nl_catd;
/usr/include/nl_types.h:typedef int nl_item;
/usr/include/dlg_colors.h:typedef struct {
/usr/include/netinet/in.h:typedef uint32_t in_addr_t;
/usr/include/netinet/in.h:typedef uint16_t in_port_t;
/usr/include/netinet/tcp.h:typedef	u_int32_t tcp_seq;
/usr/include/netinet/in_systm.h:typedef u_int16_t n_short;      /* short as received from the net */
/usr/include/netinet/in_systm.h:typedef u_int32_t n_long;       /* long as received from the net  */
/usr/include/netinet/in_systm.h:typedef u_int32_t n_time;       /* ms since 00:00 GMT, byte rev   */
/usr/include/stropts.h:typedef __gid_t gid_t;
/usr/include/stropts.h:typedef __uid_t uid_t;
/usr/include/stropts.h:typedef __t_scalar_t t_scalar_t;
/usr/include/stropts.h:typedef __t_uscalar_t t_uscalar_t;
/usr/include/printf.h:typedef int printf_function (FILE *__stream,
/usr/include/printf.h:typedef int printf_arginfo_size_function (const struct printf_info *__info,
/usr/include/printf.h:typedef int printf_arginfo_function (const struct printf_info *__info,
/usr/include/printf.h:typedef void printf_va_arg_function (void *__mem, va_list *__ap);
/usr/include/wchar.h:typedef unsigned int wint_t;
/usr/include/wchar.h:typedef __WINT_TYPE__ wint_t;
/usr/include/wchar.h:typedef struct
/usr/include/wchar.h:typedef __mbstate_t mbstate_t;
/usr/include/glob.h:typedef __SIZE_TYPE__ __size_t;
/usr/include/glob.h:typedef __SIZE_TYPE__ size_t;
/usr/include/glob.h:typedef struct
/usr/include/glob.h:typedef struct
/usr/include/errno.h:typedef int error_t;
/usr/include/_G_config.h:typedef struct
/usr/include/_G_config.h:typedef struct
/usr/include/_G_config.h:typedef union
/usr/include/unistd.h:typedef __ssize_t ssize_t;
/usr/include/unistd.h:typedef __gid_t gid_t;
/usr/include/unistd.h:typedef __uid_t uid_t;
/usr/include/unistd.h:typedef __off_t off_t;
/usr/include/unistd.h:typedef __off64_t off_t;
/usr/include/unistd.h:typedef __off64_t off64_t;
/usr/include/unistd.h:typedef __useconds_t useconds_t;
/usr/include/unistd.h:typedef __pid_t pid_t;
/usr/include/unistd.h:typedef __intptr_t intptr_t;
/usr/include/unistd.h:typedef __socklen_t socklen_t;
/usr/include/time.h:typedef __clock_t clock_t;
/usr/include/time.h:typedef __time_t time_t;
/usr/include/time.h:typedef __clockid_t clockid_t;
/usr/include/time.h:typedef __timer_t timer_t;
/usr/include/time.h:typedef __pid_t pid_t;
/usr/include/netax25/ax25.h:typedef struct
/usr/include/fcntl.h:typedef __mode_t mode_t;
/usr/include/fcntl.h:typedef __off_t off_t;
/usr/include/fcntl.h:typedef __off64_t off_t;
/usr/include/fcntl.h:typedef __off64_t off64_t;
/usr/include/fcntl.h:typedef __pid_t pid_t;
/usr/include/c++/4.9/type_traits:  typedef __UINT_LEAST16_TYPE__ uint_least16_t;
/usr/include/c++/4.9/type_traits:  typedef __UINT_LEAST32_TYPE__ uint_least32_t;
/usr/include/c++/4.9/type_traits:      typedef _Tp                           value_type;
/usr/include/c++/4.9/type_traits:      typedef integral_constant<_Tp, __v>   type;
/usr/include/c++/4.9/type_traits:  typedef integral_constant<bool, true>     true_type;
/usr/include/c++/4.9/type_traits:  typedef integral_constant<bool, false>    false_type;
/usr/include/c++/4.9/type_traits:    { typedef _Tp type; };
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_From, _To>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp, _Arg>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<_From
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<_To
/usr/include/c++/4.9/type_traits:      typedef __and_<__not_<is_same<__src_t, __dst_t>>,
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<
/usr/include/c++/4.9/type_traits:      typedef __and_<__not_<is_function<__src_t>>, 
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp, _Args...>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp, _Up>(0)) type;
/usr/include/c++/4.9/type_traits:    { typedef typename is_void<_To>::type type; };
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_From, _To>(0)) type;
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:      typedef typename
/usr/include/c++/4.9/type_traits:    { typedef _Tp const     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp volatile     type; };
/usr/include/c++/4.9/type_traits:      typedef typename
/usr/include/c++/4.9/type_traits:    { typedef _Tp   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp&   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp&&   type; };
/usr/include/c++/4.9/type_traits:    { typedef _Unqualified __type; };
/usr/include/c++/4.9/type_traits:    { typedef volatile _Unqualified __type; };
/usr/include/c++/4.9/type_traits:    { typedef const _Unqualified __type; };
/usr/include/c++/4.9/type_traits:    { typedef const volatile _Unqualified __type; };
/usr/include/c++/4.9/type_traits:      typedef __cv_selector<_Unqualified, _IsConst, _IsVol> __match;
/usr/include/c++/4.9/type_traits:      typedef typename __match::__type __type; 
/usr/include/c++/4.9/type_traits:    { typedef _Tp __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned char __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned char __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned short __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned int __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned long __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned long long __type; };
/usr/include/c++/4.9/type_traits:    { typedef unsigned __int128 __type; };
/usr/include/c++/4.9/type_traits:      typedef __make_unsigned<typename remove_cv<_Tp>::type> __unsignedt;
/usr/include/c++/4.9/type_traits:      typedef typename __unsignedt::__type __unsigned_type;
/usr/include/c++/4.9/type_traits:      typedef __match_cv_qualifiers<_Tp, __unsigned_type> __cv_unsigned;
/usr/include/c++/4.9/type_traits:      typedef typename __cv_unsigned::__type __type;
/usr/include/c++/4.9/type_traits:      typedef unsigned char __smallest;
/usr/include/c++/4.9/type_traits:      typedef conditional<__b2, unsigned int, unsigned long> __cond2;
/usr/include/c++/4.9/type_traits:      typedef typename __cond2::type __cond2_type;
/usr/include/c++/4.9/type_traits:      typedef conditional<__b1, unsigned short, __cond2_type> __cond1;
/usr/include/c++/4.9/type_traits:      typedef typename __cond1::type __cond1_type;
/usr/include/c++/4.9/type_traits:      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
/usr/include/c++/4.9/type_traits:    { typedef typename __make_unsigned_selector<_Tp>::__type type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed char __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed char __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed short __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed int __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed long __type; };
/usr/include/c++/4.9/type_traits:    { typedef signed long long __type; };
/usr/include/c++/4.9/type_traits:    { typedef __int128 __type; };
/usr/include/c++/4.9/type_traits:      typedef __make_signed<typename remove_cv<_Tp>::type> __signedt;
/usr/include/c++/4.9/type_traits:      typedef typename __signedt::__type __signed_type;
/usr/include/c++/4.9/type_traits:      typedef __match_cv_qualifiers<_Tp, __signed_type> __cv_signed;
/usr/include/c++/4.9/type_traits:      typedef typename __cv_signed::__type __type;
/usr/include/c++/4.9/type_traits:      typedef signed char __smallest;
/usr/include/c++/4.9/type_traits:      typedef conditional<__b2, signed int, signed long> __cond2;
/usr/include/c++/4.9/type_traits:      typedef typename __cond2::type __cond2_type;
/usr/include/c++/4.9/type_traits:      typedef conditional<__b1, signed short, __cond2_type> __cond1;
/usr/include/c++/4.9/type_traits:      typedef typename __cond1::type __cond1_type;
/usr/include/c++/4.9/type_traits:      typedef typename conditional<__b0, __smallest, __cond1_type>::type __type;
/usr/include/c++/4.9/type_traits:    { typedef typename __make_signed_selector<_Tp>::__type type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef typename remove_all_extents<_Tp>::type     type; };
/usr/include/c++/4.9/type_traits:    { typedef typename remove_all_extents<_Tp>::type     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Up     type; };
/usr/include/c++/4.9/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/type_traits:    { typedef typename remove_reference<_Tp>::type*     type; };
/usr/include/c++/4.9/type_traits:   *  whose size is no greater than _Len (3.9). The member typedef
/usr/include/c++/4.9/type_traits:    { typedef typename remove_cv<_Up>::type __type; };
/usr/include/c++/4.9/type_traits:    { typedef typename remove_extent<_Up>::type* __type; };
/usr/include/c++/4.9/type_traits:    { typedef typename add_pointer<_Up>::type __type; };
/usr/include/c++/4.9/type_traits:      typedef typename remove_reference<_Tp>::type __remove_type;
/usr/include/c++/4.9/type_traits:      typedef typename __decay_selector<__remove_type>::__type type;
/usr/include/c++/4.9/type_traits:      typedef _Tp __type;
/usr/include/c++/4.9/type_traits:      typedef _Tp& __type;
/usr/include/c++/4.9/type_traits:      typedef typename __strip_reference_wrapper<
/usr/include/c++/4.9/type_traits:  /// Define a member typedef @c type only if a boolean constant is true.
/usr/include/c++/4.9/type_traits:    { typedef _Tp type; };
/usr/include/c++/4.9/type_traits:  /// Define a member typedef @c type to one of two argument types.
/usr/include/c++/4.9/type_traits:    { typedef _Iftrue type; };
/usr/include/c++/4.9/type_traits:    { typedef _Iffalse type; };
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_Tp, _Up>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_Tp>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef common_type<typename _CTp::type, _Args...> type;
/usr/include/c++/4.9/type_traits:    { typedef __failure_type type; };
/usr/include/c++/4.9/type_traits:    { typedef typename decay<_Tp>::type type; };
/usr/include/c++/4.9/type_traits:      typedef __underlying_type(_Tp) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_MemPtr, _Arg, _Args...>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_MemPtr, _Arg>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<
/usr/include/c++/4.9/type_traits:      typedef _Res _Class::* _MemPtr;
/usr/include/c++/4.9/type_traits:      typedef typename conditional<__or_<is_same<_Argval, _Class>,
/usr/include/c++/4.9/type_traits:      typedef typename remove_cv<typename remove_reference<
/usr/include/c++/4.9/type_traits:      typedef _Res _Class::* _MemPtr;
/usr/include/c++/4.9/type_traits:      typedef typename conditional<__or_<is_same<_Argval, _Class>,
/usr/include/c++/4.9/type_traits:      typedef __failure_type type;
/usr/include/c++/4.9/type_traits:      typedef decltype(_S_test<_Functor, _ArgTypes...>(0)) type;
/usr/include/c++/4.9/type_traits:      typedef decltype(__test<_Tp>(0)) type;				\
/usr/include/c++/4.9/iosfwd:   *  classes are given typedef names for both of the builtin character
/usr/include/c++/4.9/iosfwd:   *  widths (wide and narrow).  The typedefs are the same as the
/usr/include/c++/4.9/iosfwd:   *     typedef basic_ifstream<char>  ifstream;
/usr/include/c++/4.9/iosfwd:   *  well as the typedefs.  Trying to forward-declare the typedefs
/usr/include/c++/4.9/iosfwd:  typedef basic_ios<char> 		ios; 
/usr/include/c++/4.9/iosfwd:  typedef basic_streambuf<char> 	streambuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_istream<char> 		istream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ostream<char> 		ostream;
/usr/include/c++/4.9/iosfwd:  typedef basic_iostream<char> 		iostream;
/usr/include/c++/4.9/iosfwd:  typedef basic_stringbuf<char> 	stringbuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_istringstream<char> 	istringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ostringstream<char> 	ostringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_stringstream<char> 	stringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_filebuf<char> 		filebuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_ifstream<char> 		ifstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ofstream<char> 		ofstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_fstream<char> 		fstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ios<wchar_t> 		wios;
/usr/include/c++/4.9/iosfwd:  typedef basic_streambuf<wchar_t> 	wstreambuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_istream<wchar_t> 	wistream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ostream<wchar_t> 	wostream;
/usr/include/c++/4.9/iosfwd:  typedef basic_iostream<wchar_t> 	wiostream;
/usr/include/c++/4.9/iosfwd:  typedef basic_stringbuf<wchar_t> 	wstringbuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_istringstream<wchar_t> 	wistringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ostringstream<wchar_t> 	wostringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_stringstream<wchar_t> 	wstringstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_filebuf<wchar_t> 	wfilebuf;
/usr/include/c++/4.9/iosfwd:  typedef basic_ifstream<wchar_t> 	wifstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_ofstream<wchar_t> 	wofstream;
/usr/include/c++/4.9/iosfwd:  typedef basic_fstream<wchar_t> 	wfstream;
/usr/include/c++/4.9/utility:    { typedef _Tp1 type; };
/usr/include/c++/4.9/utility:    { typedef _Tp2 type; };
/usr/include/c++/4.9/utility:      typedef _Index_tuple<_Indexes..., sizeof...(_Indexes)> __next;
/usr/include/c++/4.9/utility:      typedef typename _Build_index_tuple<_Num - 1>::__type::__next __type;
/usr/include/c++/4.9/utility:      typedef _Index_tuple<> __type;
/usr/include/c++/4.9/utility:      typedef _Tp value_type;
/usr/include/c++/4.9/utility:      typedef integer_sequence<_Tp, static_cast<_Tp>(_Idx)...> __type;
/usr/include/c++/4.9/tuple:    { typedef const _Tp& type; };
/usr/include/c++/4.9/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tuple:    { typedef _Tp&& type; };
/usr/include/c++/4.9/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tuple:      typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
/usr/include/c++/4.9/tuple:      typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;
/usr/include/c++/4.9/tuple:      typedef _Tuple_impl<0, _Elements...> _Inherited;
/usr/include/c++/4.9/tuple:      typedef _Tuple_impl<0, _T1, _T2> _Inherited;
/usr/include/c++/4.9/tuple:      typedef _Head type;
/usr/include/c++/4.9/tuple:      typedef typename
/usr/include/c++/4.9/tuple:      typedef typename
/usr/include/c++/4.9/tuple:      typedef typename
/usr/include/c++/4.9/tuple:      typedef tuple<_TElements...> _Tp;
/usr/include/c++/4.9/tuple:      typedef tuple<_UElements...> _Up;
/usr/include/c++/4.9/tuple:      typedef tuple<_TElements...> _Tp;
/usr/include/c++/4.9/tuple:      typedef tuple<_UElements...> _Up;
/usr/include/c++/4.9/tuple:      typedef tuple<typename __decay_and_strip<_Elements>::__type...>
/usr/include/c++/4.9/tuple:      typedef typename __make_tuple_impl<_Idx + 1, tuple<_Tp...,
/usr/include/c++/4.9/tuple:      typedef tuple<_Tp...> __type;
/usr/include/c++/4.9/tuple:      typedef tuple<> __type;
/usr/include/c++/4.9/tuple:      typedef tuple<_Ts...> __type;
/usr/include/c++/4.9/tuple:      typedef typename __combine_tuples<tuple<_T1s..., _T2s...>,
/usr/include/c++/4.9/tuple:      typedef typename __combine_tuples
/usr/include/c++/4.9/tuple:      typedef std::_Index_tuple<> __type;
/usr/include/c++/4.9/tuple:      typedef typename std::_Build_index_tuple<std::tuple_size<
/usr/include/c++/4.9/tuple:	  typedef typename __make_1st_indices<_Tpls...>::__type __idx;
/usr/include/c++/4.9/tuple:	  typedef __tuple_concater<_Ret, __idx, _Tpls...>      __next;
/usr/include/c++/4.9/tuple:      typedef typename __tuple_cat_result<_Tpls...>::__type __ret;
/usr/include/c++/4.9/tuple:      typedef typename __make_1st_indices<_Tpls...>::__type __idx;
/usr/include/c++/4.9/tuple:      typedef __tuple_concater<__ret, __idx, _Tpls...> __concater;
/usr/include/c++/4.9/istream:      typedef _CharT			 		char_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::int_type 		int_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::pos_type 		pos_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::off_type 		off_type;
/usr/include/c++/4.9/istream:      typedef _Traits			 		traits_type;
/usr/include/c++/4.9/istream:      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
/usr/include/c++/4.9/istream:      typedef basic_ios<_CharT, _Traits>		__ios_type;
/usr/include/c++/4.9/istream:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/istream:      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
/usr/include/c++/4.9/istream:      typedef ctype<_CharT>	      			__ctype_type;
/usr/include/c++/4.9/istream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/istream:      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
/usr/include/c++/4.9/istream:      typedef basic_istream<_CharT, _Traits> 		__istream_type;
/usr/include/c++/4.9/istream:      typedef typename __istream_type::__ctype_type 	__ctype_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::int_type		__int_type;
/usr/include/c++/4.9/istream:      // 271. basic_iostream missing typedefs
/usr/include/c++/4.9/istream:      typedef _CharT			 		char_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::int_type 		int_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::pos_type 		pos_type;
/usr/include/c++/4.9/istream:      typedef typename _Traits::off_type 		off_type;
/usr/include/c++/4.9/istream:      typedef _Traits			 		traits_type;
/usr/include/c++/4.9/istream:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/istream:      typedef basic_ostream<_CharT, _Traits>		__ostream_type;
/usr/include/c++/4.9/new:  typedef void (*new_handler)();
/usr/include/c++/4.9/cwchar:  typedef struct
/usr/include/c++/4.9/initializer_list:      typedef _E 		value_type;
/usr/include/c++/4.9/initializer_list:      typedef const _E& 	reference;
/usr/include/c++/4.9/initializer_list:      typedef const _E& 	const_reference;
/usr/include/c++/4.9/initializer_list:      typedef size_t 		size_type;
/usr/include/c++/4.9/initializer_list:      typedef const _E* 	iterator;
/usr/include/c++/4.9/initializer_list:      typedef const _E* 	const_iterator;
/usr/include/c++/4.9/array:      typedef _Tp _Type[_Nm];
/usr/include/c++/4.9/array:      typedef _Tp 	    			      value_type;
/usr/include/c++/4.9/array:      typedef value_type*			      pointer;
/usr/include/c++/4.9/array:      typedef const value_type*                       const_pointer;
/usr/include/c++/4.9/array:      typedef value_type&                   	      reference;
/usr/include/c++/4.9/array:      typedef const value_type&             	      const_reference;
/usr/include/c++/4.9/array:      typedef value_type*          		      iterator;
/usr/include/c++/4.9/array:      typedef const value_type*			      const_iterator;
/usr/include/c++/4.9/array:      typedef std::size_t                    	      size_type;
/usr/include/c++/4.9/array:      typedef std::ptrdiff_t                   	      difference_type;
/usr/include/c++/4.9/array:      typedef std::reverse_iterator<iterator>	      reverse_iterator;
/usr/include/c++/4.9/array:      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
/usr/include/c++/4.9/array:      typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
/usr/include/c++/4.9/array:      typedef _Tp type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/complex:      /// Value typedef.
/usr/include/c++/4.9/complex:      typedef _Tp value_type;
/usr/include/c++/4.9/complex:      typedef float value_type;
/usr/include/c++/4.9/complex:      typedef __complex__ float _ComplexT;
/usr/include/c++/4.9/complex:      typedef double value_type;
/usr/include/c++/4.9/complex:      typedef __complex__ double _ComplexT;
/usr/include/c++/4.9/complex:      typedef long double value_type;
/usr/include/c++/4.9/complex:      typedef __complex__ long double _ComplexT;
/usr/include/c++/4.9/complex:      typedef std::complex<typename __promote_2<_Tp, _Up>::__type> __type;
/usr/include/c++/4.9/complex:      typedef std::complex<typename __promote_2<_Tp, _Up>::__type> __type;
/usr/include/c++/4.9/complex:      typedef std::complex<typename __promote_2<_Tp, _Up>::__type> __type;
/usr/include/c++/4.9/complex:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/complex:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreeBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreeBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreePointerBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreePointerBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/losertree.h:      typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;
/usr/include/c++/4.9/parallel/sort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/sort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/sort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/workstealing.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/workstealing.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/workstealing.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_RanSeqs>::value_type::first_type
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_RanSeqs>::difference_type
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_It>::difference_type
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_It>::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_RanSeqs>::value_type::first_type
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_RanSeqs>::difference_type
/usr/include/c++/4.9/parallel/multiseq_selection.h:      typedef typename std::iterator_traits<_It>::difference_type
/usr/include/c++/4.9/parallel/numeric:      typedef std::iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::value_type _ValueType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef std::iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::value_type _ValueType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType1::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType2::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType1::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType2::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/numeric:      typedef typename
/usr/include/c++/4.9/parallel/numeric:      typedef typename iterator_traits<_IIter>::value_type _ValueType;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _ITraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _ITraitsType::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_OutputIterator> _OTraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _OTraitsType::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/numeric:          typedef __gnu_parallel::_IteratorPair<_IIter, _OutputIterator,
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _ITraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _ITraitsType::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_OutputIterator> _OTraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _OTraitsType::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_IIter> _ITraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _ITraitsType::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/numeric:      typedef iterator_traits<_OutputIterator> _OTraitsType;
/usr/include/c++/4.9/parallel/numeric:      typedef typename _OTraitsType::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/iterator.h:      typedef std::pair<_Iterator1, _Iterator2> _Base;
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorCategory iterator_category;
/usr/include/c++/4.9/parallel/iterator.h:      typedef void value_type;
/usr/include/c++/4.9/parallel/iterator.h:      typedef std::iterator_traits<_Iterator1> _TraitsType;
/usr/include/c++/4.9/parallel/iterator.h:      typedef typename _TraitsType::difference_type difference_type;
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorPair* pointer;
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorPair& reference;
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorCategory iterator_category;
/usr/include/c++/4.9/parallel/iterator.h:      typedef void value_type;
/usr/include/c++/4.9/parallel/iterator.h:      typedef typename std::iterator_traits<_Iterator1>::difference_type
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorTriple* pointer;
/usr/include/c++/4.9/parallel/iterator.h:      typedef _IteratorTriple& reference;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_Iterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_Iterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _FIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _FIterTraits::iterator_category _FIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _FIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::value_type _IValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _FIterTraits::value_type _FValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/algo.h:      typedef __gnu_parallel::_SequenceIndex _SequenceIndex;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/algo.h:      typedef __gnu_parallel::_SequenceIndex _SequenceIndex;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_RAIter1> _Iterator1Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator1Traits::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_RAIter2> _Iterator2Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator2Traits::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator1> _Iterator1Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator1Traits::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator2> _Iterator2Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator2Traits::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator1> _Iterator1Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator1Traits::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator2> _Iterator2Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator2Traits::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_FIterator>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:          typedef __gnu_parallel::_IteratorPair<_RAIter1,
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter> _IIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits::iterator_category _IIteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:          typedef __gnu_parallel::_IteratorTriple<_RAIter1,
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_FIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _IteratorTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IteratorTraits::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:          typedef typename std::iterator_traits<_RAIter>::
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:    typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:    typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_IIter1>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _IIterTraits1;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _IIterTraits2;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_OutputIterator> _OIterTraits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits1::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _IIterTraits2::iterator_category
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _OIterTraits::iterator_category _OIterCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter1> _Iterator1Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef std::iterator_traits<_IIter2> _Iterator2Traits;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator1Traits::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _Iterator2Traits::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_FIterator>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_FIterator>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_FIterator>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename iterator_traits<_FIterator>::value_type _ValueType;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/algo.h:      typedef iterator_traits<_FIterator> _TraitsType;
/usr/include/c++/4.9/parallel/algo.h:      typedef typename _TraitsType::iterator_category _IteratorCategory;
/usr/include/c++/4.9/parallel/omp_loop.h:      typedef typename std::iterator_traits<_RAIter>::difference_type
/usr/include/c++/4.9/parallel/random_shuffle.h:  typedef unsigned short _BinIndex;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/random_shuffle.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/partition.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/partition.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/partition.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/partition.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/partition.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/partition.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/find.h:      typedef std::iterator_traits<_RAIter1> _TraitsType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/find.h:      typedef std::iterator_traits<_RAIter1> _TraitsType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/find.h:      typedef std::iterator_traits<_RAIter1> _TraitsType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/find.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/search.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/search.h:      typedef std::iterator_traits<__RAIter1> _TraitsType;
/usr/include/c++/4.9/parallel/search.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/unique_copy.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/unique_copy.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/unique_copy.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/unique_copy.h:      typedef typename std::iterator_traits<_IIter>::value_type
/usr/include/c++/4.9/parallel/base.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/base.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/base.h:      typedef _PseudoSequenceIterator<_Tp, uint64_t> iterator;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:	typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:	typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:	typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef _ValueType* _SortingPlacesIterator;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef std::vector<
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/multiway_mergesort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/types.h: *  @brief Basic types and typedefs.
/usr/include/c++/4.9/parallel/types.h:  typedef uint64_t _SequenceIndex;
/usr/include/c++/4.9/parallel/types.h:  typedef uint16_t _ThreadIndex;
/usr/include/c++/4.9/parallel/types.h:  typedef int64_t _CASable;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef std::iterator_traits<_RAIterIterator> _TraitsType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:        typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename std::iterator_traits<_RAIterIterator>
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef typename
/usr/include/c++/4.9/parallel/multiway_merge.h:	typedef std::pair<_RAIter1, _RAIter1> seq_type;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/multiway_merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/merge.h:      typedef _DifferenceTp _DifferenceType;
/usr/include/c++/4.9/parallel/merge.h:      typedef typename std::iterator_traits<_RAIter1>::value_type
/usr/include/c++/4.9/parallel/merge.h:      typedef typename std::iterator_traits<_RAIter2>::value_type
/usr/include/c++/4.9/parallel/merge.h:      typedef typename
/usr/include/c++/4.9/parallel/merge.h:      typedef typename std::iterator_traits<_RAIter1>::
/usr/include/c++/4.9/parallel/merge.h:      typedef typename std::iterator_traits<_RAIter3>::
/usr/include/c++/4.9/parallel/merge.h:      typedef typename std::pair<_RAIter1, _RAIter1>
/usr/include/c++/4.9/parallel/algobase.h:      typedef __gnu_parallel::_EqualTo<
/usr/include/c++/4.9/parallel/algobase.h:      typedef __gnu_parallel::_EqualTo<
/usr/include/c++/4.9/parallel/algobase.h:      typedef __gnu_parallel::_EqualTo<
/usr/include/c++/4.9/parallel/algobase.h:          typedef iterator_traits<_RAIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/algobase.h:          typedef typename _TraitsType1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algobase.h:          typedef iterator_traits<_RAIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/algobase.h:          typedef typename _TraitsType2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algobase.h:          typedef __gnu_parallel::
/usr/include/c++/4.9/parallel/algobase.h:              typedef pair<_RAIter1, _RAIter2> _SpotType;
/usr/include/c++/4.9/parallel/algobase.h:              typedef pair<_RAIter2, _RAIter1> _SpotType;
/usr/include/c++/4.9/parallel/algobase.h:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType1::value_type _ValueType1;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType1::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/algobase.h:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType2::value_type _ValueType2;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType2::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/algobase.h:      typedef __gnu_parallel::_Less<_ValueType1, _ValueType2> _LessType;
/usr/include/c++/4.9/parallel/algobase.h:      typedef iterator_traits<_IIter1> _TraitsType1;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType1::iterator_category _IteratorCategory1;
/usr/include/c++/4.9/parallel/algobase.h:      typedef iterator_traits<_IIter2> _TraitsType2;
/usr/include/c++/4.9/parallel/algobase.h:      typedef typename _TraitsType2::iterator_category _IteratorCategory2;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::pair<_RAIter, _RAIter> _Piece;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::pair<_RAIter, _RAIter> _Piece;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef std::pair<_RAIter, _RAIter> _Piece;
/usr/include/c++/4.9/parallel/balanced_quicksort.h:      typedef _QSBThreadLocal<_RAIter> _TLSType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/partial_sum.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename std::pair<_IIter, _IIter> _IteratorPair;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename std::pair<_IIter, _IIter> _IteratorPair;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename std::pair<_IIter, _IIter> _IteratorPair;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename std::iterator_traits<_IIter>::difference_type
/usr/include/c++/4.9/parallel/set_operations.h:      typedef std::iterator_traits<_IIter> _TraitsType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/set_operations.h:      typedef typename std::pair<_IIter, _IIter> _IteratorPair;
/usr/include/c++/4.9/parallel/omp_loop_static.h:      typedef typename std::iterator_traits<_RAIter>::difference_type
/usr/include/c++/4.9/parallel/par_loop.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/par_loop.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef std::iterator_traits<_RAIter> _TraitsType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::value_type _ValueType;
/usr/include/c++/4.9/parallel/quicksort.h:      typedef typename _TraitsType::difference_type _DifferenceType;
/usr/include/c++/4.9/condition_variable:    typedef chrono::system_clock	__clock_t;
/usr/include/c++/4.9/condition_variable:    typedef __gthread_cond_t		__native_type;
/usr/include/c++/4.9/condition_variable:    typedef __native_type* 		native_handle_type;
/usr/include/c++/4.9/condition_variable:    typedef chrono::system_clock	__clock_t;
/usr/include/c++/4.9/bits/cpp_type_traits.h:    { typedef __false_type __type; };
/usr/include/c++/4.9/bits/cpp_type_traits.h:    { typedef __true_type __type; };
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef typename __truth_type<__value>::__type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __false_type __type;
/usr/include/c++/4.9/bits/cpp_type_traits.h:      typedef __true_type __type;
/usr/include/c++/4.9/bits/postypes.h:   *  was typedef long.
/usr/include/c++/4.9/bits/postypes.h:  typedef long          streamoff;
/usr/include/c++/4.9/bits/postypes.h:  typedef long long     streamoff;
/usr/include/c++/4.9/bits/postypes.h:  typedef int64_t       streamoff;
/usr/include/c++/4.9/bits/postypes.h:  typedef long long     streamoff;
/usr/include/c++/4.9/bits/postypes.h:  typedef ptrdiff_t	streamsize; // Signed integral type
/usr/include/c++/4.9/bits/postypes.h:  // they must both be typedefs for fpos<mbstate_t>
/usr/include/c++/4.9/bits/postypes.h:  typedef fpos<mbstate_t> streampos;
/usr/include/c++/4.9/bits/postypes.h:  typedef fpos<mbstate_t> wstreampos;
/usr/include/c++/4.9/bits/postypes.h:  typedef fpos<mbstate_t> u16streampos;
/usr/include/c++/4.9/bits/postypes.h:  typedef fpos<mbstate_t> u32streampos;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef _Traits					    traits_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _Traits::char_type		    value_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef _Alloc					    allocator_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::size_type	    size_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::difference_type   difference_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::reference	    reference;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::const_reference   const_reference;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::pointer	    pointer;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
/usr/include/c++/4.9/bits/basic_string.h:      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
/usr/include/c++/4.9/bits/basic_string.h:      typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
/usr/include/c++/4.9/bits/basic_string.h:      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
/usr/include/c++/4.9/bits/basic_string.h:      typedef std::reverse_iterator<iterator>		    reverse_iterator;
/usr/include/c++/4.9/bits/basic_string.h:	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
/usr/include/c++/4.9/bits/basic_string.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/basic_string.h:          typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
/usr/include/c++/4.9/bits/basic_string.h:	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
/usr/include/c++/4.9/bits/basic_string.h:      typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
/usr/include/c++/4.9/bits/basic_string.h:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/bits/gslice_array.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/random.h:      { typedef unsigned int type; };
/usr/include/c++/4.9/bits/random.h:      { typedef unsigned long type; };
/usr/include/c++/4.9/bits/random.h:      { typedef unsigned long long type; };
/usr/include/c++/4.9/bits/random.h:      { typedef unsigned __int128 type; };
/usr/include/c++/4.9/bits/random.h:	typedef typename _Select_uint_least_t<std::__lg(__a)
/usr/include/c++/4.9/bits/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/bits/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/bits/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/bits/random.h:      typedef typename _RandomNumberEngine::result_type result_type;
/usr/include/c++/4.9/bits/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/bits/random.h:      typedef typename _RandomNumberEngine::result_type result_type;
/usr/include/c++/4.9/bits/random.h:  typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
/usr/include/c++/4.9/bits/random.h:  typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
/usr/include/c++/4.9/bits/random.h:  typedef mersenne_twister_engine<
/usr/include/c++/4.9/bits/random.h:  typedef mersenne_twister_engine<
/usr/include/c++/4.9/bits/random.h:  typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
/usr/include/c++/4.9/bits/random.h:  typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
/usr/include/c++/4.9/bits/random.h:  typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
/usr/include/c++/4.9/bits/random.h:  typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
/usr/include/c++/4.9/bits/random.h:  typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
/usr/include/c++/4.9/bits/random.h:  typedef minstd_rand0 default_random_engine;
/usr/include/c++/4.9/bits/random.h:    typedef unsigned int result_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef uniform_int_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef uniform_real_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef normal_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef lognormal_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef gamma_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef chi_squared_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:	  typedef typename std::gamma_distribution<result_type>::param_type
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef cauchy_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef fisher_f_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:	  typedef typename std::gamma_distribution<result_type>::param_type
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef student_t_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:	  typedef typename std::gamma_distribution<result_type>::param_type
/usr/include/c++/4.9/bits/random.h:    typedef bool result_type;
/usr/include/c++/4.9/bits/random.h:      typedef bernoulli_distribution distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef binomial_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType  result_type;
/usr/include/c++/4.9/bits/random.h:	typedef geometric_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef negative_binomial_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType  result_type;
/usr/include/c++/4.9/bits/random.h:	typedef poisson_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef exponential_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef weibull_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef extreme_value_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef discrete_distribution<_IntType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef piecewise_constant_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/bits/random.h:	typedef piecewise_linear_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/bits/random.h:    typedef uint_least32_t result_type;
/usr/include/c++/4.9/bits/stl_construct.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_construct.h:      typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_InputIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_InputIterator>::reference _RefType1;
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/stl_uninitialized.h:	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename _Tp::element_type __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _Tp __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename _Tp::difference_type __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef ptrdiff_t __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename _Tp::template rebind<_Up> __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _SomePtr<_Up, _Args...> __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _Tp __type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename __ptrtr_elt_type<_Ptr>::__type   __orig_type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename __ptrtr_not_void<__orig_type>::__type __element_type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _Ptr                                      pointer;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename __ptrtr_elt_type<_Ptr>::__type   element_type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef typename __ptrtr_diff_type<_Ptr>::__type  difference_type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _Tp* pointer;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef _Tp  element_type;
/usr/include/c++/4.9/bits/ptr_traits.h:      typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef typename iterator_traits<_BiIter>::value_type _CharT;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef basic_regex<_CharT, _TraitsT>                 _RegexT;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef std::vector<sub_match<_BiIter>, _Alloc>       _ResultsVec;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef regex_constants::match_flag_type              _FlagT;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef typename _TraitsT::char_class_type            _ClassT;
/usr/include/c++/4.9/bits/regex_executor.h:      typedef _NFA<_TraitsT>                                _NFAT;
/usr/include/c++/4.9/bits/stl_map.h:      typedef _Key                                          key_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef _Tp                                           mapped_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef std::pair<const _Key, _Tp>                    value_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef _Compare                                      key_compare;
/usr/include/c++/4.9/bits/stl_map.h:      typedef _Alloc                                        allocator_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Alloc::value_type                   _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_map.h:      typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
/usr/include/c++/4.9/bits/stl_map.h:      typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Alloc_traits::pointer            pointer;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Alloc_traits::const_pointer      const_pointer;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Alloc_traits::reference          reference;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Alloc_traits::const_reference    const_reference;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::iterator               iterator;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::const_iterator         const_iterator;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::size_type              size_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::difference_type        difference_type;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::reverse_iterator       reverse_iterator;
/usr/include/c++/4.9/bits/stl_map.h:      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_numeric.h:      typedef typename iterator_traits<_InputIterator>::value_type _ValueType;
/usr/include/c++/4.9/bits/stl_numeric.h:      typedef typename iterator_traits<_InputIterator>::value_type _ValueType;
/usr/include/c++/4.9/bits/stl_numeric.h:      typedef typename iterator_traits<_InputIterator>::value_type _ValueType;
/usr/include/c++/4.9/bits/stl_numeric.h:      typedef typename iterator_traits<_InputIterator>::value_type _ValueType;
/usr/include/c++/4.9/bits/stl_tempbuf.h:      typedef _Tp         value_type;
/usr/include/c++/4.9/bits/stl_tempbuf.h:      typedef value_type* pointer;
/usr/include/c++/4.9/bits/stl_tempbuf.h:      typedef pointer     iterator;
/usr/include/c++/4.9/bits/stl_tempbuf.h:      typedef ptrdiff_t   size_type;
/usr/include/c++/4.9/bits/stl_tempbuf.h:      typedef typename std::iterator_traits<_Pointer>::value_type
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Tp result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef bool result_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _FunBase<_Dom, typename _Dom::value_type> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _FunBase<valarray<_Tp>, _Tp> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Arg::value_type _Vt;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename __fun<_Oper, _Vt>::result_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Dom _Arg;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _UnBase<_Oper, _Dom> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef valarray<_Tp> _Arg;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _UnBase<_Oper, valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _FirstArg::value_type _Vt;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename __fun<_Oper, _Vt>::result_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Clos::value_type _Vt;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename __fun<_Oper, _Vt>::result_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Clos::value_type _Vt;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename __fun<_Oper, _Vt>::result_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase<_Oper, _Dom1, _Dom2> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase<_Oper, valarray<_Tp>, valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase<_Oper, valarray<_Tp>, _Dom> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase2<_Oper,_Dom> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type _Tp;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase1<_Oper, _Dom> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase2<_Oper,valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _BinBase1<_Oper, valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Dom::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _SBase<_Dom> _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef  _SBase<_Array<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_before.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_iterator<_Tp>            _Self;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_node<_Tp>                _Node;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Tp                                value_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Tp*                               pointer;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Tp&                               reference;
/usr/include/c++/4.9/bits/forward_list.h:      typedef ptrdiff_t                          difference_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef std::forward_iterator_tag          iterator_category;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_const_iterator<_Tp>      _Self;
/usr/include/c++/4.9/bits/forward_list.h:      typedef const _Fwd_list_node<_Tp>          _Node;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_iterator<_Tp>            iterator;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Tp                                value_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef const _Tp*                         pointer;
/usr/include/c++/4.9/bits/forward_list.h:      typedef const _Tp&                         reference;
/usr/include/c++/4.9/bits/forward_list.h:      typedef ptrdiff_t                          difference_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef std::forward_iterator_tag          iterator_category;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc> _Alloc_traits;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Alloc_traits::template rebind<_Tp>::other
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Alloc_traits::template
/usr/include/c++/4.9/bits/forward_list.h:      typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_iterator<_Tp>                 iterator;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_const_iterator<_Tp>           const_iterator;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_node<_Tp>                     _Node;
/usr/include/c++/4.9/bits/forward_list.h:	      typedef allocator_traits<_Tp_alloc_type> _Alloc_traits;
/usr/include/c++/4.9/bits/forward_list.h:	typedef typename _Node_alloc_traits::pointer _Ptr;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_base<_Tp, _Alloc>                  _Base;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_node<_Tp>                          _Node;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_node_base                          _Node_base;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Base::_Tp_alloc_type               _Tp_alloc_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Base::_Node_alloc_type             _Node_alloc_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Base::_Node_alloc_traits           _Node_alloc_traits;
/usr/include/c++/4.9/bits/forward_list.h:      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>    _Alloc_traits;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Tp                                          value_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Alloc_traits::pointer              pointer;
/usr/include/c++/4.9/bits/forward_list.h:      typedef typename _Alloc_traits::const_pointer        const_pointer;
/usr/include/c++/4.9/bits/forward_list.h:      typedef value_type&				   reference;
/usr/include/c++/4.9/bits/forward_list.h:      typedef const value_type&				   const_reference;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_iterator<_Tp>                      iterator;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Fwd_list_const_iterator<_Tp>                const_iterator;
/usr/include/c++/4.9/bits/forward_list.h:      typedef std::size_t                                  size_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef std::ptrdiff_t                               difference_type;
/usr/include/c++/4.9/bits/forward_list.h:      typedef _Alloc                                       allocator_type;
/usr/include/c++/4.9/bits/forward_list.h:	  typedef is_assignable<_Tp, decltype(*__first)> __assignable;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef typename std::iterator_traits<_Iterator>::iterator_category _Tag;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Value value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Value					value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::ptrdiff_t				difference_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::forward_iterator_tag			iterator_category;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Value					value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::ptrdiff_t				difference_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::forward_iterator_tag			iterator_category;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef const _Value*				pointer;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef const _Value&				reference;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::size_t first_argument_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::size_t second_argument_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::size_t result_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::size_t _State;
/usr/include/c++/4.9/bits/hashtable_policy.h:  // affects which member functions and nested typedefs are defined;
/usr/include/c++/4.9/bits/hashtable_policy.h:   *  of the pair, the hashtable gets a mapped_type typedef.  If it
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef void* 					__hash_code;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Hash_node<_Value, false>			__node_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:  /// Provides typedef and accessor required by C++ 11.
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _H1 					hasher;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::size_t 				__hash_code;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Hash_node<_Value, false>			__node_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:  /// typedef and accessor required by C++ 11.
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _H1 					hasher;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::size_t 				__hash_code;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Hash_node<_Value, true>			__node_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Value					value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef typename std::conditional<__constant_iterators,
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef typename std::conditional<__constant_iterators,
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::ptrdiff_t				difference_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::forward_iterator_tag			iterator_category;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef _Value					value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef const _Value*				pointer;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef const _Value&				reference;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::ptrdiff_t				difference_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef std::forward_iterator_tag			iterator_category;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef _Key					key_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef _Value					value_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef _Equal					key_equal;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::size_t					size_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:    typedef std::ptrdiff_t				difference_type;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef typename __node_alloc_traits::pointer _Ptr;
/usr/include/c++/4.9/bits/hashtable_policy.h:      typedef typename __bucket_alloc_traits::pointer _Ptr;
/usr/include/c++/4.9/bits/codecvt.h:      typedef codecvt_base::result	result;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _InternT			intern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _ExternT			extern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _StateT			state_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef codecvt_base::result	result;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _InternT			intern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _ExternT			extern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef _StateT			state_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef char			intern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef char			extern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef mbstate_t			state_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef wchar_t			intern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef char			extern_type;
/usr/include/c++/4.9/bits/codecvt.h:      typedef mbstate_t			state_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef char_traits<_CharT>			  __traits_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef typename string_type::size_type	          size_type;	
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef money_base::part			  part;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef __moneypunct_cache<_CharT, _Intl>         __cache_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:      typedef typename string::size_type                  size_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef typename string_type::size_type	          size_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef money_base::part                          part;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:	typedef __moneypunct_cache<_CharT, _Intl>         __cache_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:      typedef char_traits<_CharT>		__traits_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:      typedef char_traits<_CharT>		__traits_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:      typedef char_traits<_CharT>		__traits_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.tcc:      typedef char_traits<_CharT>		__traits_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef __uset_hashtable<_Value, _Hash, _Pred, _Alloc>  _Hashtable;
/usr/include/c++/4.9/bits/unordered_set.h:      // typedefs:
/usr/include/c++/4.9/bits/unordered_set.h:      /// Public typedefs.
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::key_type	key_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::value_type	value_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::hasher	hasher;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::key_equal	key_equal;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::allocator_type allocator_type;
/usr/include/c++/4.9/bits/unordered_set.h:      ///  Iterator-related typedefs.
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::pointer		pointer;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_pointer	const_pointer;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::reference		reference;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_reference	const_reference;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::iterator		iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_iterator	const_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::local_iterator	local_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_local_iterator	const_local_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::size_type		size_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::difference_type	difference_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef __umset_hashtable<_Value, _Hash, _Pred, _Alloc>  _Hashtable;
/usr/include/c++/4.9/bits/unordered_set.h:      // typedefs:
/usr/include/c++/4.9/bits/unordered_set.h:      /// Public typedefs.
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::key_type	key_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::value_type	value_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::hasher	hasher;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::key_equal	key_equal;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::allocator_type allocator_type;
/usr/include/c++/4.9/bits/unordered_set.h:      ///  Iterator-related typedefs.
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::pointer		pointer;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_pointer	const_pointer;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::reference		reference;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_reference	const_reference;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::iterator		iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_iterator	const_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::local_iterator	local_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::const_local_iterator	const_local_iterator;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::size_type		size_type;
/usr/include/c++/4.9/bits/unordered_set.h:      typedef typename _Hashtable::difference_type	difference_type;
/usr/include/c++/4.9/bits/stl_stack.h:   *  which is a typedef for the second Sequence parameter, and @c
/usr/include/c++/4.9/bits/stl_stack.h:      typedef typename _Sequence::value_type _Sequence_value_type;
/usr/include/c++/4.9/bits/stl_stack.h:      typedef typename _Sequence::value_type                value_type;
/usr/include/c++/4.9/bits/stl_stack.h:      typedef typename _Sequence::reference                 reference;
/usr/include/c++/4.9/bits/stl_stack.h:      typedef typename _Sequence::const_reference           const_reference;
/usr/include/c++/4.9/bits/stl_stack.h:      typedef typename _Sequence::size_type                 size_type;
/usr/include/c++/4.9/bits/stl_stack.h:      typedef          _Sequence                            container_type;
/usr/include/c++/4.9/bits/functional_hash.h:      typedef _Result     result_type;
/usr/include/c++/4.9/bits/functional_hash.h:      typedef _Arg      argument_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef _Sp_ebo_helper<0, _Deleter>	_Del_base;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef _Sp_ebo_helper<1, _Alloc>	_Alloc_base;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef typename allocator_traits<_Alloc>::template
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef _Sp_ebo_helper<0, _Alloc>	_A_base;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef typename allocator_traits<_Alloc>::template
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef _Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp> _Sp_cd_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef typename allocator_traits<_Alloc>::template
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef _Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp> _Sp_cp_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef typename allocator_traits<_Alloc>::template
/usr/include/c++/4.9/bits/shared_ptr_base.h:      typedef _Tp   element_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	    typedef allocator_traits<_Alloc> _Alloc_traits;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef typename _Alloc::template rebind<_Tp>::other _Alloc2;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	  typedef allocator_traits<_Alloc2> __traits;
/usr/include/c++/4.9/bits/shared_ptr_base.h:      typedef typename std::common_type<_Tp1*, _Tp2*>::type _CT;
/usr/include/c++/4.9/bits/shared_ptr_base.h:	typedef typename _Sp::element_type element_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:      typedef _Tp element_type;
/usr/include/c++/4.9/bits/shared_ptr_base.h:      typedef typename std::remove_const<_Tp>::type _Tp_nc;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef iterator_traits<_Iterator>		__traits_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Iterator					iterator_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::difference_type	difference_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::pointer		pointer;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::reference		reference;
/usr/include/c++/4.9/bits/stl_iterator.h:      /// A nested typedef for the type of whatever container you used.
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Container          container_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      /// A nested typedef for the type of whatever container you used.
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Container          container_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      /// A nested typedef for the type of whatever container you used.
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Container          container_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef iterator_traits<_Iterator>		__traits_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Iterator					iterator_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::iterator_category iterator_category;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::value_type  	value_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::difference_type 	difference_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::reference 	reference;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::pointer   	pointer;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef iterator_traits<_Iterator>		__traits_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Iterator					iterator_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::iterator_category iterator_category;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::value_type  	value_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef typename __traits_type::difference_type	difference_type;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef _Iterator					pointer;
/usr/include/c++/4.9/bits/stl_iterator.h:      typedef value_type&&				reference;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename _RandomNumberEngine::result_type _Eresult_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename std::common_type<_Eresult_type, result_type>::type
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:	typedef typename _UniformRandomNumberGenerator::result_type
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::make_unsigned<result_type>::type __utype;
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::common_type<_Gresult_type, __utype>::type
/usr/include/c++/4.9/bits/random.tcc:	typedef typename _UniformRandomNumberGenerator::result_type
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::make_unsigned<result_type>::type __utype;
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::common_type<_Gresult_type, __utype>::type
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::gamma_distribution<double>::param_type
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:	typedef typename std::gamma_distribution<result_type>::param_type
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/random.tcc:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _GBase<_Dom> _Base;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _GBase<_Array<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _IBase<_Dom> _Base;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Base::value_type value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _IBase<valarray<_Tp> > _Base;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _UnClos<__logical_not, std::_Expr, _Dom> _Closure;
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _UnClos<_Name, std::_Expr, _Dom> _Closure;                  \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom1::value_type _Arg;                          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename __fun<_Name, _Arg>::result_type _Value;          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_Name, _Expr, _Expr, _Dom1, _Dom2> _Closure;     \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Arg;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename __fun<_Name, _Arg>::result_type _Value;          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_Name, _Expr, _Constant, _Dom, _Arg> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Arg;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename __fun<_Name, _Arg>::result_type _Value;          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_Name, _Constant, _Expr, _Arg, _Dom> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Arg;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename __fun<_Name, _Arg>::result_type _Value;          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_Name, _Expr, _ValArray, _Dom, _Arg> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                            \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename __fun<_Name, _Tp>::result_type _Value;           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_Name, _ValArray, _Expr, _Tp, _Dom> _Closure;    \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                             \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _UnClos<_UName, _Expr, _Dom> _Closure;                     \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _UnClos<_UName, _ValArray, _Tp> _Closure;                  \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom1::value_type _Tp;                          \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _Expr, _Expr, _Dom1, _Dom2> _Closure;    \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _Expr, _ValArray, _Dom, _Tp> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _ValArray, _Expr, _Tp, _Dom> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _Expr, _Constant, _Dom, _Tp> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef typename _Dom::value_type _Tp;                           \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _Constant, _Expr, _Tp, _Dom> _Closure;   \
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _ValArray, _ValArray, _Tp, _Tp> _Closure;\
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _ValArray, _Constant, _Tp, _Tp> _Closure;\
/usr/include/c++/4.9/bits/valarray_after.h:      typedef _BinClos<_UFun, _Constant, _ValArray, _Tp, _Tp> _Closure;\
/usr/include/c++/4.9/bits/locale_classes.tcc:      typedef std::collate<_CharT> __collate_type;
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_heap.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Self::difference_type difference_type;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Self::difference_type difference_type;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Self::difference_type difference_type;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
/usr/include/c++/4.9/bits/deque.tcc:      typedef typename _Self::difference_type difference_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef typename __ctype_abstract_base<_CharT>::mask mask;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef char		char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef wchar_t		char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef wctype_t		__wmask_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef typename ctype<_CharT>::mask  mask;
/usr/include/c++/4.9/bits/locale_facets.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef __numpunct_cache<_CharT>  __cache_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _InIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _CharT		char_type;
/usr/include/c++/4.9/bits/locale_facets.h:      typedef _OutIter		iter_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __string_type::size_type	  __size_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __string_type::size_type	  __size_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __istream_type::ios_base         __ios_base;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __istream_type::int_type		__int_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef ctype<_CharT>				__ctype_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __ctype_type::ctype_base         __ctype_base;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __istream_type::ios_base         __ios_base;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __istream_type::int_type		__int_type;
/usr/include/c++/4.9/bits/basic_string.tcc:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_iterator<_Tp>                _Self;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_node<_Tp>                    _Node;
/usr/include/c++/4.9/bits/stl_list.h:      typedef ptrdiff_t                          difference_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef std::bidirectional_iterator_tag    iterator_category;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Tp                                value_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Tp*                               pointer;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Tp&                               reference;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_const_iterator<_Tp>          _Self;
/usr/include/c++/4.9/bits/stl_list.h:      typedef const _List_node<_Tp>              _Node;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_iterator<_Tp>                iterator;
/usr/include/c++/4.9/bits/stl_list.h:      typedef ptrdiff_t                          difference_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef std::bidirectional_iterator_tag    iterator_category;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Tp                                value_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef const _Tp*                         pointer;
/usr/include/c++/4.9/bits/stl_list.h:      typedef const _Tp&                         reference;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Alloc::template rebind<_List_node<_Tp> >::other
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Alloc::value_type                _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_base<_Tp, _Alloc>                    _Base;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Base::_Node_alloc_type		 _Node_alloc_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Tp                                        value_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Tp_alloc_type::pointer           pointer;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Tp_alloc_type::const_pointer     const_pointer;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Tp_alloc_type::reference         reference;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename _Tp_alloc_type::const_reference   const_reference;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_iterator<_Tp>                        iterator;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_const_iterator<_Tp>                  const_iterator;
/usr/include/c++/4.9/bits/stl_list.h:      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_list.h:      typedef std::reverse_iterator<iterator>            reverse_iterator;
/usr/include/c++/4.9/bits/stl_list.h:      typedef size_t                                     size_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef ptrdiff_t                                  difference_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _Alloc                                     allocator_type;
/usr/include/c++/4.9/bits/stl_list.h:      typedef _List_node<_Tp>				 _Node;
/usr/include/c++/4.9/bits/stl_list.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_list.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_list.h:      typedef typename list<_Tp, _Alloc>::const_iterator const_iterator;
/usr/include/c++/4.9/bits/stl_tree.h:    typedef _Rb_tree_node_base* _Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:    typedef const _Rb_tree_node_base* _Const_Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node<_Val>* _Link_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Tp  value_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Tp& reference;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Tp* pointer;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef bidirectional_iterator_tag iterator_category;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef ptrdiff_t                  difference_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_iterator<_Tp>        _Self;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node<_Tp>*           _Link_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const _Tp& reference;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const _Tp* pointer;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_iterator<_Tp> iterator;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef bidirectional_iterator_tag iterator_category;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef ptrdiff_t                  difference_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_const_iterator<_Tp>        _Self;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const _Rb_tree_node<_Tp>*           _Link_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_tree.h:      typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node_base* 		_Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Key 				key_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Val 				value_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef value_type* 			pointer;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const value_type* 		const_pointer;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef value_type& 			reference;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const value_type& 		const_reference;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_node<_Val>* 		_Link_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef size_t 				size_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef ptrdiff_t 			difference_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Alloc 				allocator_type;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_iterator<value_type>       iterator;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef _Rb_tree_const_iterator<value_type> const_iterator;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef pair<_Base_ptr, _Base_ptr> _Res;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef pair<_Base_ptr, _Base_ptr> _Res;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef pair<iterator, bool> _Res;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef pair<_Base_ptr, _Base_ptr> _Res;
/usr/include/c++/4.9/bits/stl_tree.h:      typedef pair<_Base_ptr, _Base_ptr> _Res;
/usr/include/c++/4.9/bits/stl_tree.h:	    typedef pair<iterator, bool> _Res;
/usr/include/c++/4.9/bits/stl_pair.h:      typedef _T1 first_type;    /// @c first_type is the first bound type
/usr/include/c++/4.9/bits/stl_pair.h:      typedef _T2 second_type;   /// @c second_type is the second bound type
/usr/include/c++/4.9/bits/stl_pair.h:      typedef typename __decay_and_strip<_T1>::__type __ds_type1;
/usr/include/c++/4.9/bits/stl_pair.h:      typedef typename __decay_and_strip<_T2>::__type __ds_type2;
/usr/include/c++/4.9/bits/stl_pair.h:      typedef pair<__ds_type1, __ds_type2> 	      __pair_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
/usr/include/c++/4.9/bits/stl_vector.h:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/bits/stl_vector.h:	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
/usr/include/c++/4.9/bits/stl_vector.h:	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Alloc::value_type                _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef _Vector_base<_Tp, _Alloc>			 _Base;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef _Tp					 value_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Base::pointer                    pointer;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Alloc_traits::const_pointer      const_pointer;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Alloc_traits::reference          reference;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef typename _Alloc_traits::const_reference    const_reference;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
/usr/include/c++/4.9/bits/stl_vector.h:      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef std::reverse_iterator<iterator>		 reverse_iterator;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef size_t					 size_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef ptrdiff_t					 difference_type;
/usr/include/c++/4.9/bits/stl_vector.h:      typedef _Alloc                        		 allocator_type;
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/stl_vector.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/basic_ios.h:      typedef _CharT                                 char_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef typename _Traits::int_type             int_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef typename _Traits::pos_type             pos_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef typename _Traits::off_type             off_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef _Traits                                traits_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef ctype<_CharT>                          __ctype_type;
/usr/include/c++/4.9/bits/basic_ios.h:      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
/usr/include/c++/4.9/bits/basic_ios.h:      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
/usr/include/c++/4.9/bits/stl_algobase.h:          typedef typename iterator_traits<_ForwardIterator1>::value_type
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_ForwardIterator1>::value_type
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_ForwardIterator2>::value_type
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_ForwardIterator1>::reference
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_ForwardIterator2>::reference
/usr/include/c++/4.9/bits/stl_algobase.h:	  typedef typename iterator_traits<_II>::difference_type _Distance;
/usr/include/c++/4.9/bits/stl_algobase.h:	  typedef typename iterator_traits<_II>::difference_type _Distance;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II>::iterator_category _Category;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_BI1>::iterator_category _Category;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II1>::value_type _ValueType1;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II2>::value_type _ValueType2;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II1>::iterator_category _Category1;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II2>::iterator_category _Category2;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef std::__lc_rai<_Category1, _Category2> __rai_type;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II1>::value_type _ValueType1;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II2>::value_type _ValueType2;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II1>::value_type _ValueType1;
/usr/include/c++/4.9/bits/stl_algobase.h:      typedef typename iterator_traits<_II2>::value_type _ValueType2;
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef void (_ns::_concept <_type_var>::* _func##_type_var##_concept)(); \
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef _concept_checking##_type_var##_concept< \
/usr/include/c++/4.9/bits/boost_concept_check.h:    _concept_checking_typedef##_type_var##_concept
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef void (_ns::_concept <_type_var1,_type_var2>::* _func##_type_var1##_type_var2##_concept)(); \
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef _concept_checking##_type_var1##_type_var2##_concept< \
/usr/include/c++/4.9/bits/boost_concept_check.h:    _concept_checking_typedef##_type_var1##_type_var2##_concept
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef void (_ns::_concept <_type_var1,_type_var2,_type_var3>::* _func##_type_var1##_type_var2##_type_var3##_concept)(); \
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef _concept_checking##_type_var1##_type_var2##_type_var3##_concept< \
/usr/include/c++/4.9/bits/boost_concept_check.h:  _concept_checking_typedef##_type_var1##_type_var2##_type_var3##_concept
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef void (_ns::_concept <_type_var1,_type_var2,_type_var3,_type_var4>::* _func##_type_var1##_type_var2##_type_var3##_type_var4##_concept)(); \
/usr/include/c++/4.9/bits/boost_concept_check.h:  typedef _concept_checking##_type_var1##_type_var2##_type_var3##_type_var4##_concept< \
/usr/include/c++/4.9/bits/boost_concept_check.h:    _concept_checking_typedef##_type_var1##_type_var2##_type_var3##_type_var4##_concept
/usr/include/c++/4.9/bits/boost_concept_check.h:struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename _Aux_require_same<_Tp1, _Tp2>::_Type _Required;
/usr/include/c++/4.9/bits/boost_concept_check.h://      typedef typename std::iterator_traits<_Tp>::value_type _V;
/usr/include/c++/4.9/bits/boost_concept_check.h:      // require iterator_traits typedef's
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::difference_type _Diff;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::reference _Ref;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::pointer _Pt;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::iterator_category _Cat;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::reference _Ref;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename std::iterator_traits<_Tp>::reference _Ref;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::value_type _Value_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::difference_type _Difference_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::size_type _Size_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::const_reference _Const_reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::const_pointer _Const_pointer;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::const_iterator _Const_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::value_type _Value_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::reference _Reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::iterator _Iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Container::pointer _Pointer;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename _ForwardContainer::const_iterator _Const_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:      typedef typename _ForwardContainer::iterator _Iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _ReversibleContainer::const_iterator _Const_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _ReversibleContainer::const_reverse_iterator
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _ReversibleContainer::iterator _Iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _ReversibleContainer::reverse_iterator _Reverse_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::size_type _Size_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::const_reference _Const_reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::const_iterator _Const_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::const_reverse_iterator
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::size_type _Size_type;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::reference _Reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::iterator _Iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _RandomAccessContainer::reverse_iterator _Reverse_iterator;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Sequence::reference _Reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _Sequence::const_reference _Const_reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _BackInsertionSequence::reference _Reference;
/usr/include/c++/4.9/bits/boost_concept_check.h:    typedef typename _BackInsertionSequence::const_reference _Const_reference;
/usr/include/c++/4.9/bits/istream.tcc:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef typename __istream_type::int_type         __int_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef typename _Traits::int_type		int_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef _CharT					char_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef ctype<_CharT>				__ctype_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef basic_istream<_CharT, _Traits>		__istream_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef typename __istream_type::int_type		__int_type;
/usr/include/c++/4.9/bits/istream.tcc:      typedef ctype<_CharT>				__ctype_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef unsigned long   int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef std::streampos  pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef std::streamoff  off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef std::mbstate_t  state_type;
/usr/include/c++/4.9/bits/char_traits.h:   *  right, but the int_type and state_type typedefs, and the eof()
/usr/include/c++/4.9/bits/char_traits.h:      typedef _CharT                                    char_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef typename _Char_types<_CharT>::int_type    int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef typename _Char_types<_CharT>::pos_type    pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef typename _Char_types<_CharT>::off_type    off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef typename _Char_types<_CharT>::state_type  state_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef char              char_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef int               int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef streampos         pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef streamoff         off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef mbstate_t         state_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef wchar_t           char_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef wint_t            int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef streamoff         off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef wstreampos        pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef mbstate_t         state_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef char16_t          char_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef uint_least16_t    int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef streamoff         off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef u16streampos      pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef mbstate_t         state_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef char32_t          char_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef uint_least32_t    int_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef streamoff         off_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef u32streampos      pos_type;
/usr/include/c++/4.9/bits/char_traits.h:      typedef mbstate_t         state_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef std::random_access_iterator_tag iterator_category;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Tp                             value_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Ptr                            pointer;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Ref                            reference;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef size_t                          size_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef ptrdiff_t                       difference_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Tp**                           _Map_pointer;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_iterator                 _Self;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Alloc                  allocator_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Alloc::template rebind<_Tp*>::other _Map_alloc_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Alloc::template rebind<_Tp>::other  _Tp_alloc_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Alloc::value_type        _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Deque_base<_Tp, _Alloc>           _Base;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Base::_Tp_alloc_type	 _Tp_alloc_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Tp                                        value_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Tp_alloc_type::pointer           pointer;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Tp_alloc_type::const_pointer     const_pointer;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Tp_alloc_type::reference         reference;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Tp_alloc_type::const_reference   const_reference;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Base::iterator                   iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef typename _Base::const_iterator             const_iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef std::reverse_iterator<iterator>            reverse_iterator;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef size_t                             size_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef ptrdiff_t                          difference_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef _Alloc                             allocator_type;
/usr/include/c++/4.9/bits/stl_deque.h:      typedef pointer*                           _Map_pointer;
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/stl_deque.h:	  typedef typename std::iterator_traits<_InputIterator>::
/usr/include/c++/4.9/bits/ios_base.h:    typedef _Ios_Fmtflags fmtflags;
/usr/include/c++/4.9/bits/ios_base.h:    typedef _Ios_Iostate iostate;
/usr/include/c++/4.9/bits/ios_base.h:    typedef _Ios_Openmode openmode;
/usr/include/c++/4.9/bits/ios_base.h:    typedef _Ios_Seekdir seekdir;
/usr/include/c++/4.9/bits/ios_base.h:    typedef int io_state;
/usr/include/c++/4.9/bits/ios_base.h:    typedef int open_mode;
/usr/include/c++/4.9/bits/ios_base.h:    typedef int seek_dir;
/usr/include/c++/4.9/bits/ios_base.h:    typedef std::streampos streampos;
/usr/include/c++/4.9/bits/ios_base.h:    typedef std::streamoff streamoff;
/usr/include/c++/4.9/bits/ios_base.h:    typedef void (*event_callback) (event __e, ios_base& __b, int __i);
/usr/include/c++/4.9/bits/regex_scanner.h:    typedef regex_constants::syntax_option_type _FlagT;
/usr/include/c++/4.9/bits/regex_scanner.h:      typedef const _CharT*                                       _IterT;
/usr/include/c++/4.9/bits/regex_scanner.h:      typedef std::basic_string<_CharT>                           _StringT;
/usr/include/c++/4.9/bits/regex_scanner.h:      typedef regex_constants::syntax_option_type                 _FlagT;
/usr/include/c++/4.9/bits/regex_scanner.h:      typedef const std::ctype<_CharT>                            _CtypeT;
/usr/include/c++/4.9/bits/regex.tcc:      typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.tcc:      typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.tcc:      typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.tcc:      typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.tcc:      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> _IterT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::char_type        _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef const _CharT*                       _IterT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _NFA<_TraitsT>              	  _RegexT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef regex_constants::syntax_option_type _FlagT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _Scanner<_CharT>               _ScannerT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::string_type _StringT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _ScannerT::_TokenT    _TokenT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _StateSeq<_TraitsT>            _StateSeqT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef std::stack<_StateSeqT>         _StackT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef std::ctype<_CharT>             _CtypeT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::char_type	      _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::string_type	      _StringT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename std::conditional<__collate,
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::char_type _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _CharT                       _StrTransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TransT::_CharT                       _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TransT::_CharT                       _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TransT::_CharT                       _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TransT::_CharT                       _CharT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TransT::_StrTransT                   _StrTransT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::string_type                 _StringT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename _TraitsT::char_class_type             _CharClassT;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename is_same<_CharT, char>::type _IsChar;
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename conditional<_IsChar::value,
/usr/include/c++/4.9/bits/regex_compiler.h:      typedef typename make_unsigned<_CharT>::type _UnsignedCharT;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef typename _Alloc::template rebind<_Tp>::other __type;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef _Alloc<_Tp, _Args...> __type;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef typename _Alloc::value_type value_type;
/usr/include/c++/4.9/bits/alloc_traits.h:    typedef decltype(_S_##_NTYPE##_helper((_Alloc*)0)) __##_NTYPE; \
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __pointer pointer;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __const_pointer const_pointer;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __void_pointer void_pointer;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __const_void_pointer const_void_pointer;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __difference_type difference_type;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __size_type size_type;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __propagate_on_container_copy_assignment
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __propagate_on_container_move_assignment
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef __propagate_on_container_swap propagate_on_container_swap;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef allocator_traits<_Alloc> __traits;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef allocator_traits<_Alloc> __traits;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef allocator_traits<_Alloc> __traits;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef typename __traits::propagate_on_container_move_assignment __pocma;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef allocator_traits<_Alloc> __traits;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef typename __traits::propagate_on_container_swap __pocs;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef allocator_traits<_Alloc> _Traits;
/usr/include/c++/4.9/bits/alloc_traits.h:      typedef decltype(_M_select<typename _Alloc::value_type>(0)) type;
/usr/include/c++/4.9/bits/hashtable.h:      typedef _Key						key_type;
/usr/include/c++/4.9/bits/hashtable.h:      typedef _Value						value_type;
/usr/include/c++/4.9/bits/hashtable.h:      typedef _Alloc						allocator_type;
/usr/include/c++/4.9/bits/hashtable.h:      typedef _Equal						key_equal;
/usr/include/c++/4.9/bits/hashtable.h:      typedef typename __value_alloc_traits::pointer		pointer;
/usr/include/c++/4.9/bits/hashtable.h:      typedef typename __value_alloc_traits::const_pointer	const_pointer;
/usr/include/c++/4.9/bits/hashtable.h:      typedef value_type&					reference;
/usr/include/c++/4.9/bits/hashtable.h:      typedef const value_type&					const_reference;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef _Key                                          key_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef _Tp                                           mapped_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef std::pair<const _Key, _Tp>                    value_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef _Compare                                      key_compare;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef _Alloc                                        allocator_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Alloc::value_type                   _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Alloc_traits::pointer            pointer;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Alloc_traits::const_pointer      const_pointer;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Alloc_traits::reference          reference;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Alloc_traits::const_reference    const_reference;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::iterator               iterator;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::const_iterator         const_iterator;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::size_type              size_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::difference_type        difference_type;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::reverse_iterator       reverse_iterator;
/usr/include/c++/4.9/bits/stl_multimap.h:      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_InputIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef iterator_traits<_RandomAccessIterator> _RItTraits;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename _RItTraits::difference_type _DistanceType;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_InputIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_InputIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_ForwardIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_BidirectionalIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename std::make_unsigned<_DistanceType>::type __ud_type;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename std::uniform_int_distribution<__ud_type> __distr_type;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename __distr_type::param_type __p_type;
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::value_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
/usr/include/c++/4.9/bits/stl_algo.h:      typedef _Temporary_buffer<_RandomAccessIterator, _ValueType> _TmpBuf;
/usr/include/c++/4.9/bits/stl_queue.h:   *  which is a typedef for the second Sequence parameter, and @c push and
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::value_type _Sequence_value_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::value_type                value_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::reference                 reference;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::const_reference           const_reference;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::size_type                 size_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef          _Sequence                            container_type;
/usr/include/c++/4.9/bits/stl_queue.h:   *  which is a typedef for the second Sequence parameter, and @c
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::value_type _Sequence_value_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::value_type                value_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::reference                 reference;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::const_reference           const_reference;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef typename _Sequence::size_type                 size_type;
/usr/include/c++/4.9/bits/stl_queue.h:      typedef          _Sequence                            container_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Alloc::value_type                   _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      // typedefs:
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Key     key_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Key     value_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Compare key_compare;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Compare value_compare;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Alloc   allocator_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef _Rb_tree<key_type, value_type, _Identity<value_type>,
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef __gnu_cxx::__alloc_traits<_Key_alloc_type> _Alloc_traits;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Alloc_traits::pointer		    pointer;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Alloc_traits::const_pointer	    const_pointer;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Alloc_traits::reference		    reference;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Alloc_traits::const_reference	    const_reference;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::const_iterator            iterator;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::const_iterator            const_iterator;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::size_type                 size_type;
/usr/include/c++/4.9/bits/stl_multiset.h:      typedef typename _Rep_type::difference_type           difference_type;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Alloc::value_type                   _Alloc_value_type;
/usr/include/c++/4.9/bits/stl_set.h:      // typedefs:
/usr/include/c++/4.9/bits/stl_set.h:      /// Public typedefs.
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Key     key_type;
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Key     value_type;
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Compare key_compare;
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Compare value_compare;
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Alloc   allocator_type;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/bits/stl_set.h:      typedef _Rb_tree<key_type, value_type, _Identity<value_type>,
/usr/include/c++/4.9/bits/stl_set.h:      typedef __gnu_cxx::__alloc_traits<_Key_alloc_type> _Alloc_traits;
/usr/include/c++/4.9/bits/stl_set.h:      ///  Iterator-related typedefs.
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Alloc_traits::pointer		    pointer;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Alloc_traits::const_pointer	    const_pointer;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Alloc_traits::reference		    reference;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Alloc_traits::const_reference	    const_reference;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::const_iterator            iterator;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::const_iterator            const_iterator;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::size_type                 size_type;
/usr/include/c++/4.9/bits/stl_set.h:      typedef typename _Rep_type::difference_type           difference_type;
/usr/include/c++/4.9/bits/stringfwd.h:  typedef basic_string<char>    string;   
/usr/include/c++/4.9/bits/stringfwd.h:  typedef basic_string<wchar_t> wstring;   
/usr/include/c++/4.9/bits/stringfwd.h:  typedef basic_string<char16_t> u16string; 
/usr/include/c++/4.9/bits/stringfwd.h:  typedef basic_string<char32_t> u32string; 
/usr/include/c++/4.9/bits/exception_ptr.h:      typedef void (exception_ptr::*__safe_bool)();
/usr/include/c++/4.9/bits/shared_ptr.h:      typedef typename std::common_type<_Tp1*, _Tp2*>::type _CT;
/usr/include/c++/4.9/bits/shared_ptr.h:      typedef typename std::remove_const<_Tp>::type _Tp_nc;
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef basic_ostream<_CharT, _Traits>       __ostream_type;
/usr/include/c++/4.9/bits/ostream_insert.h:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/bits/stl_bvector.h:  typedef unsigned long _Bit_type;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_reference  reference;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_reference* pointer;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_iterator   iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef bool                 reference;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef bool                 const_reference;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef const bool*          pointer;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_const_iterator  const_iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:      typedef typename _Alloc::template rebind<_Bit_type>::other
/usr/include/c++/4.9/bits/stl_bvector.h:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bvector_base<_Alloc>			 _Base;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef bool                                         value_type;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef size_t                                       size_type;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef ptrdiff_t                                    difference_type;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_reference                               reference;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef bool                                         const_reference;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_reference*                              pointer;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef const bool*                                  const_pointer;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_iterator                                iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Bit_const_iterator                          const_iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef std::reverse_iterator<const_iterator>        const_reverse_iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef std::reverse_iterator<iterator>              reverse_iterator;
/usr/include/c++/4.9/bits/stl_bvector.h:    typedef _Alloc                        		 allocator_type;
/usr/include/c++/4.9/bits/stl_bvector.h:	typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_bvector.h:	typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/stl_bvector.h:	typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/bits/regex.h:      typedef _Ch_type                     	char_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::basic_string<char_type> 	string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::locale                  	locale_type;
/usr/include/c++/4.9/bits/regex.h:	  typedef typename std::ctype<char_type>::mask _BaseType;
/usr/include/c++/4.9/bits/regex.h:      typedef _RegexMask char_class_type;
/usr/include/c++/4.9/bits/regex.h:	typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.h:	  typedef std::collate<char_type> __collate_type;
/usr/include/c++/4.9/bits/regex.h:	  typedef std::ctype<char_type> __ctype_type;
/usr/include/c++/4.9/bits/regex.h:      typedef _Ch_type                            value_type;
/usr/include/c++/4.9/bits/regex.h:      typedef _Rx_traits                          traits_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename traits_type::string_type   string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef regex_constants::syntax_option_type flag_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename traits_type::locale_type   locale_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::shared_ptr<__detail::_NFA<_Rx_traits>> _AutomatonPtr;
/usr/include/c++/4.9/bits/regex.h:  typedef basic_regex<char>    regex;
/usr/include/c++/4.9/bits/regex.h:  typedef basic_regex<wchar_t> wregex;
/usr/include/c++/4.9/bits/regex.h:      typedef iterator_traits<_BiIter>			__iter_traits;
/usr/include/c++/4.9/bits/regex.h:      typedef typename __iter_traits::value_type      	value_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename __iter_traits::difference_type 	difference_type;
/usr/include/c++/4.9/bits/regex.h:      typedef _BiIter                                   iterator;
/usr/include/c++/4.9/bits/regex.h:      typedef std::basic_string<value_type>             string_type;
/usr/include/c++/4.9/bits/regex.h:  typedef sub_match<const char*>             csub_match;
/usr/include/c++/4.9/bits/regex.h:  typedef sub_match<string::const_iterator>  ssub_match;
/usr/include/c++/4.9/bits/regex.h:  typedef sub_match<const wchar_t*>          wcsub_match;
/usr/include/c++/4.9/bits/regex.h:  typedef sub_match<wstring::const_iterator> wssub_match;
/usr/include/c++/4.9/bits/regex.h:      typedef typename sub_match<_Bi_iter>::string_type string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename sub_match<_Bi_iter>::string_type string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename sub_match<_Bi_iter>::string_type string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename sub_match<_Bi_iter>::string_type string_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::vector<sub_match<_Bi_iter>, _Alloc>     _Base_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::iterator_traits<_Bi_iter>   	   	   __iter_traits;
/usr/include/c++/4.9/bits/regex.h:      typedef regex_constants::match_flag_type		   match_flag_type;
/usr/include/c++/4.9/bits/regex.h:      typedef sub_match<_Bi_iter>                          value_type;
/usr/include/c++/4.9/bits/regex.h:      typedef const value_type&                            const_reference;
/usr/include/c++/4.9/bits/regex.h:      typedef const_reference                              reference;
/usr/include/c++/4.9/bits/regex.h:      typedef typename _Base_type::const_iterator          const_iterator;
/usr/include/c++/4.9/bits/regex.h:      typedef const_iterator                               iterator;
/usr/include/c++/4.9/bits/regex.h:      typedef typename __iter_traits::difference_type	   difference_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename allocator_traits<_Alloc>::size_type size_type;
/usr/include/c++/4.9/bits/regex.h:      typedef _Alloc                                       allocator_type;
/usr/include/c++/4.9/bits/regex.h:      typedef typename __iter_traits::value_type 	   char_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::basic_string<char_type>                 string_type;
/usr/include/c++/4.9/bits/regex.h:  typedef match_results<const char*>             cmatch;
/usr/include/c++/4.9/bits/regex.h:  typedef match_results<string::const_iterator>  smatch;
/usr/include/c++/4.9/bits/regex.h:  typedef match_results<const wchar_t*>          wcmatch;
/usr/include/c++/4.9/bits/regex.h:  typedef match_results<wstring::const_iterator> wsmatch;
/usr/include/c++/4.9/bits/regex.h:      typedef basic_regex<_Ch_type, _Rx_traits>  regex_type;
/usr/include/c++/4.9/bits/regex.h:      typedef match_results<_Bi_iter>            value_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::ptrdiff_t                     difference_type;
/usr/include/c++/4.9/bits/regex.h:      typedef const value_type*                  pointer;
/usr/include/c++/4.9/bits/regex.h:      typedef const value_type&                  reference;
/usr/include/c++/4.9/bits/regex.h:      typedef std::forward_iterator_tag          iterator_category;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_iterator<const char*>             cregex_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_iterator<string::const_iterator>  sregex_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_iterator<const wchar_t*>          wcregex_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_iterator<wstring::const_iterator> wsregex_iterator;
/usr/include/c++/4.9/bits/regex.h:      typedef basic_regex<_Ch_type, _Rx_traits> regex_type;
/usr/include/c++/4.9/bits/regex.h:      typedef sub_match<_Bi_iter>               value_type;
/usr/include/c++/4.9/bits/regex.h:      typedef std::ptrdiff_t                    difference_type;
/usr/include/c++/4.9/bits/regex.h:      typedef const value_type*                 pointer;
/usr/include/c++/4.9/bits/regex.h:      typedef const value_type&                 reference;
/usr/include/c++/4.9/bits/regex.h:      typedef std::forward_iterator_tag         iterator_category;
/usr/include/c++/4.9/bits/regex.h:      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> _Position;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_token_iterator<const char*>             cregex_token_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_token_iterator<string::const_iterator>  sregex_token_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_token_iterator<const wchar_t*>          wcregex_token_iterator;
/usr/include/c++/4.9/bits/regex.h:  typedef regex_token_iterator<wstring::const_iterator> wsregex_token_iterator;
/usr/include/c++/4.9/bits/locale_facets.tcc:      typedef char_traits<_CharT>			__traits_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:      typedef __numpunct_cache<_CharT>                  __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:        typedef char_traits<_CharT>			     __traits_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	typedef typename __add_unsigned<_ValueT>::__type __unsigned_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	typedef __numpunct_cache<_CharT>                     __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	  typedef __numpunct_cache<_CharT>  __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:      typedef ios_base::fmtflags        fmtflags;
/usr/include/c++/4.9/bits/locale_facets.tcc:      typedef __gnu_cxx::__conditional_type<(sizeof(void*)
/usr/include/c++/4.9/bits/locale_facets.tcc:	typedef typename __add_unsigned<_ValueT>::__type __unsigned_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	typedef __numpunct_cache<_CharT>	             __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	typedef __numpunct_cache<_CharT>                __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:	  typedef __numpunct_cache<_CharT>              __cache_type;
/usr/include/c++/4.9/bits/locale_facets.tcc:      typedef __gnu_cxx::__conditional_type<(sizeof(const void*)
/usr/include/c++/4.9/bits/mask_array.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef _CharT                         char_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef _Traits                        traits_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef basic_istream<_CharT, _Traits> istream_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      /// Public typedef
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef _CharT                         char_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef _Traits                        traits_type;
/usr/include/c++/4.9/bits/stream_iterator.h:      typedef basic_ostream<_CharT, _Traits> ostream_type;
/usr/include/c++/4.9/bits/regex_automaton.h:  typedef long _StateIdT;
/usr/include/c++/4.9/bits/regex_automaton.h:      typedef _Matcher<typename _TraitsT::char_type> _MatcherT;
/usr/include/c++/4.9/bits/regex_automaton.h:    typedef size_t                              _SizeT;
/usr/include/c++/4.9/bits/regex_automaton.h:    typedef regex_constants::syntax_option_type _FlagT;
/usr/include/c++/4.9/bits/regex_automaton.h:      typedef _State<_TraitsT>				_StateT;
/usr/include/c++/4.9/bits/regex_automaton.h:      typedef _Matcher<typename _TraitsT::char_type>	_MatcherT;
/usr/include/c++/4.9/bits/regex_automaton.h:      typedef _NFA<_TraitsT> _RegexT;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef enum memory_order
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<char>  	       		atomic_char;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<signed char>	     	atomic_schar;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<unsigned char>		atomic_uchar;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<short>			atomic_short;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<unsigned short>	 	atomic_ushort;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int>  	       		atomic_int;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<unsigned int>	     	atomic_uint;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<long>  	       		atomic_long;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<unsigned long>		atomic_ulong;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<long long>  		atomic_llong;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<unsigned long long> 	atomic_ullong;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<wchar_t>  		atomic_wchar_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<char16_t>  		atomic_char16_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<char32_t>  		atomic_char32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<char32_t>  		atomic_char32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_least8_t>  		atomic_int_least8_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_least8_t>	       	atomic_uint_least8_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_least16_t>	       	atomic_int_least16_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_least16_t>	       	atomic_uint_least16_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_least32_t>	       	atomic_int_least32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_least32_t>	       	atomic_uint_least32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_least64_t>	       	atomic_int_least64_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_least64_t>	       	atomic_uint_least64_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_fast8_t>  		atomic_int_fast8_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_fast8_t>	      	atomic_uint_fast8_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_fast16_t>	      	atomic_int_fast16_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_fast16_t>	      	atomic_uint_fast16_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_fast32_t>	      	atomic_int_fast32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_fast32_t>	      	atomic_uint_fast32_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<int_fast64_t>	      	atomic_int_fast64_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uint_fast64_t>	      	atomic_uint_fast64_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<intptr_t>  	       	atomic_intptr_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uintptr_t>  	       	atomic_uintptr_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<size_t>	 	       	atomic_size_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<intmax_t>  	       	atomic_intmax_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<uintmax_t>  	       	atomic_uintmax_t;
/usr/include/c++/4.9/bits/atomic_base.h:  typedef __atomic_base<ptrdiff_t>  	       	atomic_ptrdiff_t;
/usr/include/c++/4.9/bits/atomic_base.h:    typedef bool __atomic_flag_data_type;
/usr/include/c++/4.9/bits/atomic_base.h:    typedef unsigned char __atomic_flag_data_type;
/usr/include/c++/4.9/bits/atomic_base.h:      typedef _ITp 	__int_type;
/usr/include/c++/4.9/bits/atomic_base.h:      typedef _PTp* 	__pointer_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      /// Public typedefs
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef _CharT					char_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef _Traits					traits_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename _Traits::int_type		int_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef basic_istream<_CharT, _Traits>		istream_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      /// Public typedefs
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef _CharT                           char_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef _Traits                          traits_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef basic_streambuf<_CharT, _Traits> streambuf_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef basic_ostream<_CharT, _Traits>   ostream_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef istreambuf_iterator<_CharT>                  __is_iterator_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename __is_iterator_type::traits_type     traits_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename __is_iterator_type::streambuf_type  streambuf_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename traits_type::int_type               int_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef istreambuf_iterator<_CharT>                  __is_iterator_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename __is_iterator_type::traits_type     traits_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename __is_iterator_type::streambuf_type  streambuf_type;
/usr/include/c++/4.9/bits/streambuf_iterator.h:      typedef typename traits_type::int_type               int_type;
/usr/include/c++/4.9/bits/indirect_array.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/allocator.h:      typedef size_t      size_type;
/usr/include/c++/4.9/bits/allocator.h:      typedef ptrdiff_t   difference_type;
/usr/include/c++/4.9/bits/allocator.h:      typedef void*       pointer;
/usr/include/c++/4.9/bits/allocator.h:      typedef const void* const_pointer;
/usr/include/c++/4.9/bits/allocator.h:      typedef void        value_type;
/usr/include/c++/4.9/bits/allocator.h:        { typedef allocator<_Tp1> other; };
/usr/include/c++/4.9/bits/allocator.h:      typedef true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/bits/allocator.h:      typedef size_t     size_type;
/usr/include/c++/4.9/bits/allocator.h:      typedef ptrdiff_t  difference_type;
/usr/include/c++/4.9/bits/allocator.h:      typedef _Tp*       pointer;
/usr/include/c++/4.9/bits/allocator.h:      typedef const _Tp* const_pointer;
/usr/include/c++/4.9/bits/allocator.h:      typedef _Tp&       reference;
/usr/include/c++/4.9/bits/allocator.h:      typedef const _Tp& const_reference;
/usr/include/c++/4.9/bits/allocator.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/bits/allocator.h:        { typedef allocator<_Tp1> other; };
/usr/include/c++/4.9/bits/allocator.h:      typedef true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/bits/list.tcc:      typedef _List_node<_Tp>  _Node;
/usr/include/c++/4.9/bits/slice_array.h:      typedef _Tp value_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			__char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	__string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef __timepunct_cache<_CharT>	__cache_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _InIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	__string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _InIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _OutIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _OutIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _InIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _OutIter			iter_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:   *  @brief  Messages facet base class providing catalog typedef.
/usr/include/c++/4.9/bits/locale_facets_nonio.h:    typedef int catalog;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_facets_nonio.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
/usr/include/c++/4.9/bits/unordered_map.h:      // typedefs:
/usr/include/c++/4.9/bits/unordered_map.h:      /// Public typedefs.
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::key_type	key_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::value_type	value_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::mapped_type	mapped_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::hasher	hasher;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::key_equal	key_equal;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::allocator_type allocator_type;
/usr/include/c++/4.9/bits/unordered_map.h:      ///  Iterator-related typedefs.
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::pointer		pointer;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_pointer	const_pointer;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::reference		reference;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_reference	const_reference;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::iterator		iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_iterator	const_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::local_iterator	local_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_local_iterator	const_local_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::size_type		size_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::difference_type	difference_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef __ummap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
/usr/include/c++/4.9/bits/unordered_map.h:      // typedefs:
/usr/include/c++/4.9/bits/unordered_map.h:      /// Public typedefs.
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::key_type	key_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::value_type	value_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::mapped_type	mapped_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::hasher	hasher;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::key_equal	key_equal;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::allocator_type allocator_type;
/usr/include/c++/4.9/bits/unordered_map.h:      ///  Iterator-related typedefs.
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::pointer		pointer;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_pointer	const_pointer;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::reference		reference;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_reference	const_reference;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::iterator		iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_iterator	const_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::local_iterator	local_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::const_local_iterator	const_local_iterator;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::size_type		size_type;
/usr/include/c++/4.9/bits/unordered_map.h:      typedef typename _Hashtable::difference_type	difference_type;
/usr/include/c++/4.9/bits/unique_ptr.h:	typedef typename remove_reference<_Dp>::type _Del;
/usr/include/c++/4.9/bits/unique_ptr.h:	typedef decltype(__test<_Del>(0)) type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef typename _Pointer::type   pointer;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef _Tp                       element_type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef _Dp                       deleter_type;
/usr/include/c++/4.9/bits/unique_ptr.h:	typedef typename remove_reference<_Dp>::type _Del;
/usr/include/c++/4.9/bits/unique_ptr.h:	typedef decltype(__test<_Del>(0)) type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef typename _Pointer::type	pointer;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef _Tp		 	element_type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef _Dp                       deleter_type;
/usr/include/c++/4.9/bits/unique_ptr.h:      typedef typename
/usr/include/c++/4.9/bits/unique_ptr.h:	typedef unique_ptr<_Tp, _Dp> _UP;
/usr/include/c++/4.9/bits/unique_ptr.h:    { typedef unique_ptr<_Tp> __single_object; };
/usr/include/c++/4.9/bits/unique_ptr.h:    { typedef unique_ptr<_Tp[]> __array; };
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:   *  This class does nothing but define nested typedefs.  %Iterator classes
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:   *  can inherit from this class to save some work.  The typedefs are then
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Category  iterator_category;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Distance  difference_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Pointer   pointer;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Reference reference;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:   *  This class does nothing but define nested typedefs.  The general
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:   *  version simply @a forwards the nested typedefs from the Iterator
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::iterator_category iterator_category;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::value_type        value_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::difference_type   difference_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::pointer           pointer;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::reference         reference;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::iterator_category iterator_category;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::value_type        value_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::difference_type   difference_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::pointer           pointer;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::reference         reference;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef random_access_iterator_tag iterator_category;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Tp                         value_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef ptrdiff_t                   difference_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Tp*                        pointer;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Tp&                        reference;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef random_access_iterator_tag iterator_category;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Tp                         value_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef ptrdiff_t                   difference_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef const _Tp*                  pointer;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef const _Tp&                  reference;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef _Iterator iterator_type;
/usr/include/c++/4.9/bits/stl_iterator_base_types.h:      typedef typename _Iterator::iterator_type iterator_type;
/usr/include/c++/4.9/bits/stl_function.h:   *  and @c binary_function.  These two classes contain nothing but typedefs,
/usr/include/c++/4.9/bits/stl_function.h:      typedef _Arg 	argument_type;   
/usr/include/c++/4.9/bits/stl_function.h:      typedef _Result 	result_type;  
/usr/include/c++/4.9/bits/stl_function.h:      typedef _Arg1 	first_argument_type; 
/usr/include/c++/4.9/bits/stl_function.h:      typedef _Arg2 	second_argument_type;
/usr/include/c++/4.9/bits/stl_function.h:      typedef _Result 	result_type;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:      typedef __is_transparent is_transparent;
/usr/include/c++/4.9/bits/stl_function.h:   *  the objects in the standard library declare nested typedefs describing
/usr/include/c++/4.9/bits/stl_function.h:   *  Sometimes those typedefs are required, not just optional.
/usr/include/c++/4.9/bits/locale_classes.h:    typedef int	category;
/usr/include/c++/4.9/bits/locale_classes.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_classes.h:      typedef _CharT			char_type;
/usr/include/c++/4.9/bits/locale_classes.h:      typedef basic_string<_CharT>	string_type;
/usr/include/c++/4.9/bits/locale_classes.h:      /// Public typedefs
/usr/include/c++/4.9/bits/locale_classes.h:      typedef _CharT               char_type;
/usr/include/c++/4.9/bits/locale_classes.h:      typedef basic_string<_CharT> string_type;
/usr/include/c++/4.9/bits/valarray_array.h:      typedef typename _Ta::value_type _Value_type;
/usr/include/c++/4.9/bits/valarray_array.h:      typedef typename _Ta::value_type _Value_type;
/usr/include/c++/4.9/experimental/string_view:      { typedef _Tp type; };
/usr/include/c++/4.9/experimental/string_view:  // basic_string_view typedef names
/usr/include/c++/4.9/decimal/decimal:    typedef float __decfloat32 __attribute__((mode(SD)));
/usr/include/c++/4.9/decimal/decimal:    typedef float __decfloat64 __attribute__((mode(DD)));
/usr/include/c++/4.9/decimal/decimal:    typedef float __decfloat128 __attribute__((mode(TD)));
/usr/include/c++/4.9/future:	typedef _Res result_type;
/usr/include/c++/4.9/future:        typedef typename allocator_traits<_Alloc>::template
/usr/include/c++/4.9/future:	  typedef allocator_traits<__allocator_type> __traits;
/usr/include/c++/4.9/future:        typedef _Result_alloc<_Res, _Allocator>	__result_type;
/usr/include/c++/4.9/future:	typedef allocator_traits<typename __result_type::__allocator_type>
/usr/include/c++/4.9/future:      typedef _Ptr<_Result_base> _Ptr_type;
/usr/include/c++/4.9/future:      typedef _Res& result_type;
/usr/include/c++/4.9/future:      typedef void result_type;
/usr/include/c++/4.9/future:      typedef shared_ptr<_State_base>		__state_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Result<_Res>&	__result_type;
/usr/include/c++/4.9/future:      typedef __basic_future<_Res> _Base_type;
/usr/include/c++/4.9/future:      typedef typename _Base_type::__state_type __state_type;
/usr/include/c++/4.9/future:      typedef __basic_future<_Res&> _Base_type;
/usr/include/c++/4.9/future:      typedef typename _Base_type::__state_type __state_type;
/usr/include/c++/4.9/future:      typedef __basic_future<void> _Base_type;
/usr/include/c++/4.9/future:      typedef typename _Base_type::__state_type __state_type;
/usr/include/c++/4.9/future:      typedef __basic_future<_Res> _Base_type;
/usr/include/c++/4.9/future:      typedef __basic_future<_Res&>           _Base_type;
/usr/include/c++/4.9/future:      typedef __basic_future<void> _Base_type;
/usr/include/c++/4.9/future:      typedef __future_base::_State_base 	_State;
/usr/include/c++/4.9/future:      typedef __future_base::_Result<_Res>	_Res_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Res_type>	_Ptr_type;
/usr/include/c++/4.9/future:      typedef __future_base::_State_base	_State;
/usr/include/c++/4.9/future:      typedef __future_base::_Result<_Res&>	_Res_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Res_type> 	_Ptr_type;
/usr/include/c++/4.9/future:      typedef __future_base::_State_base	_State;
/usr/include/c++/4.9/future:      typedef __future_base::_Result<void>	_Res_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Res_type> 	_Ptr_type;
/usr/include/c++/4.9/future:      typedef _Res _Res_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;
/usr/include/c++/4.9/future:      typedef typename decay<_Fn>::type _Fn2;
/usr/include/c++/4.9/future:      typedef __future_base::_Task_state<_Fn2, _Alloc, _Signature> _State;
/usr/include/c++/4.9/future:    { typedef void __type; };
/usr/include/c++/4.9/future:      typedef __future_base::_Task_state_base<_Res(_ArgTypes...)> _State_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;
/usr/include/c++/4.9/future:      typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;
/usr/include/c++/4.9/future:      typedef typename remove_reference<_BoundFn>::type __fn_type;
/usr/include/c++/4.9/future:      typedef _Deferred_state<__fn_type> __state_type;
/usr/include/c++/4.9/future:      typedef typename remove_reference<_BoundFn>::type __fn_type;
/usr/include/c++/4.9/future:      typedef _Async_state_impl<__fn_type> __state_type;
/usr/include/c++/4.9/future:      typedef typename result_of<_Fn(_Args...)>::type result_type;
/usr/include/c++/4.9/iomanip:	      typedef istreambuf_iterator<_CharT, _Traits>   _Iter;
/usr/include/c++/4.9/iomanip:	      typedef money_get<_CharT, _Iter>               _MoneyGet;
/usr/include/c++/4.9/iomanip:	      typedef ostreambuf_iterator<_CharT, _Traits>   _Iter;
/usr/include/c++/4.9/iomanip:	      typedef money_put<_CharT, _Iter>               _MoneyPut;
/usr/include/c++/4.9/valarray:	  typedef typename __fun<_Op, _Tp>::result_type __rt;
/usr/include/c++/4.9/valarray:	  typedef _Expr<_UnClos<_Op, _ValArray, _Tp>, __rt> _Rt;
/usr/include/c++/4.9/valarray:      typedef _Tp value_type;
/usr/include/c++/4.9/valarray:      typedef _SClos<_ValArray,_Tp> _Closure;
/usr/include/c++/4.9/valarray:      typedef _GClos<_ValArray,_Tp> _Closure;
/usr/include/c++/4.9/valarray:      typedef _IClos<_ValArray,_Tp> _Closure;
/usr/include/c++/4.9/valarray:      typedef _ValFunClos<_ValArray, _Tp> _Closure;
/usr/include/c++/4.9/valarray:      typedef _RefFunClos<_ValArray, _Tp> _Closure;
/usr/include/c++/4.9/valarray:      typedef _UnClos<_Name, _ValArray, _Tp> _Closure;	                \
/usr/include/c++/4.9/valarray:      typedef typename __fun<_Name, _Tp>::result_type _Rt;              \
/usr/include/c++/4.9/valarray:      typedef _BinClos<_Name, _ValArray, _ValArray, _Tp, _Tp> _Closure; \
/usr/include/c++/4.9/valarray:      typedef typename __fun<_Name, _Tp>::result_type _Rt;              \
/usr/include/c++/4.9/valarray:      typedef _BinClos<_Name, _ValArray, _Constant, _Tp, _Tp> _Closure;	\
/usr/include/c++/4.9/valarray:      typedef typename __fun<_Name, _Tp>::result_type _Rt;              \
/usr/include/c++/4.9/valarray:      typedef _BinClos<_Name, _Constant, _ValArray, _Tp, _Tp> _Closure; \
/usr/include/c++/4.9/valarray:      typedef typename __fun<_Name, _Tp>::result_type _Rt;              \
/usr/include/c++/4.9/ext/rope:      typedef typename _Sequence::value_type value_type;
/usr/include/c++/4.9/ext/rope:    typedef size_t _RC_t;
/usr/include/c++/4.9/ext/rope:        typedef _Rope_RopeConcatenation<_CharT,__a> __C; \
/usr/include/c++/4.9/ext/rope:        typedef _Rope_RopeLeaf<_CharT,__a> __L; \
/usr/include/c++/4.9/ext/rope:        typedef _Rope_RopeFunction<_CharT,__a> __F; \
/usr/include/c++/4.9/ext/rope:        typedef _Rope_RopeSubstring<_CharT,__a> __S; \
/usr/include/c++/4.9/ext/rope:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/ext/rope:        typedef typename \
/usr/include/c++/4.9/ext/rope:      typedef typename _Rope_rep_base<_CharT, _Alloc>::allocator_type
/usr/include/c++/4.9/ext/rope:      typedef typename _Rope_rep_base<_CharT,_Alloc>::allocator_type
/usr/include/c++/4.9/ext/rope:      typedef typename _Rope_rep_base<_CharT, _Alloc>::allocator_type
/usr/include/c++/4.9/ext/rope:    typedef typename _Rope_rep_base<_CharT, _Alloc>::allocator_type
/usr/include/c++/4.9/ext/rope:      typedef typename _Rope_rep_base<_CharT, _Alloc>::allocator_type
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc>* _Self_destruct_ptr;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_self_destruct_ptr<_CharT, _Alloc> _Self_destruct_ptr;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;
/usr/include/c++/4.9/ext/rope:      typedef rope<_CharT, _Alloc> _My_rope;
/usr/include/c++/4.9/ext/rope:      typedef _Alloc _allocator_type; // used in _Rope_rotate, VC++ workaround
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;
/usr/include/c++/4.9/ext/rope:      typedef _CharT reference;   // Really a value.  Returning a reference
/usr/include/c++/4.9/ext/rope:      typedef const _CharT* pointer;
/usr/include/c++/4.9/ext/rope:      typedef typename _Rope_iterator_base<_CharT, _Alloc>::_RopeRep _RopeRep;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_char_ref_proxy<_CharT, _Alloc>  reference;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_char_ref_proxy<_CharT, _Alloc>* pointer;
/usr/include/c++/4.9/ext/rope:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;
/usr/include/c++/4.9/ext/rope:        typedef typename \
/usr/include/c++/4.9/ext/rope:      typedef _CharT value_type;
/usr/include/c++/4.9/ext/rope:      typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/ext/rope:      typedef size_t size_type;
/usr/include/c++/4.9/ext/rope:      typedef _CharT const_reference;
/usr/include/c++/4.9/ext/rope:      typedef const _CharT* const_pointer;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_iterator<_CharT, _Alloc> iterator;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_const_iterator<_CharT, _Alloc> const_iterator;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_char_ref_proxy<_CharT, _Alloc> reference;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_char_ptr_proxy<_CharT, _Alloc> pointer;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_base<_CharT, _Alloc> _Base;
/usr/include/c++/4.9/ext/rope:      typedef typename _Base::allocator_type allocator_type;
/usr/include/c++/4.9/ext/rope:      typedef __GC_CONST _CharT* _Cstrptr;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc> _RopeRep;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeConcatenation<_CharT, _Alloc> _RopeConcatenation;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeLeaf<_CharT, _Alloc> _RopeLeaf;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeFunction<_CharT, _Alloc> _RopeFunction;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeSubstring<_CharT, _Alloc> _RopeSubstring;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_RopeRep<_CharT, _Alloc>* _Self_destruct_ptr;
/usr/include/c++/4.9/ext/rope:      typedef _Rope_self_destruct_ptr<_CharT, _Alloc> _Self_destruct_ptr;
/usr/include/c++/4.9/ext/rope:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/ext/rope:      typedef std::reverse_iterator<iterator> reverse_iterator;
/usr/include/c++/4.9/ext/rope:      typedef rope<_CharT, _Alloc> rope_type;
/usr/include/c++/4.9/ext/rope:      typedef rope<_CharT, _Alloc> rope_type;
/usr/include/c++/4.9/ext/rope:      typedef rope<_CharT, _Alloc> rope_type;
/usr/include/c++/4.9/ext/rope:  typedef rope<char> crope;
/usr/include/c++/4.9/ext/rope:  typedef rope<wchar_t> wrope;
/usr/include/c++/4.9/ext/type_traits.h:    { typedef _Tp __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef _Iftrue __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef _Iffalse __type; };
/usr/include/c++/4.9/ext/type_traits.h:      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
/usr/include/c++/4.9/ext/type_traits.h:      typedef typename __if_type::__type __type; 
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned char __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned char __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned short __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned int __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned long __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef unsigned long long __type; };
/usr/include/c++/4.9/ext/type_traits.h:      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
/usr/include/c++/4.9/ext/type_traits.h:      typedef typename __if_type::__type __type; 
/usr/include/c++/4.9/ext/type_traits.h:    { typedef signed char __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef signed char __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef short __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef int __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef long __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef long long __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef double __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef long double __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef double __type; };
/usr/include/c++/4.9/ext/type_traits.h:    { typedef float __type; };
/usr/include/c++/4.9/ext/type_traits.h:      typedef __typeof__(_Tp2() + _Up2()) __type;
/usr/include/c++/4.9/ext/type_traits.h:      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;
/usr/include/c++/4.9/ext/type_traits.h:      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __versa_string<char>                              __vstring;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __vstring                                         __sso_string;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef 
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __versa_string<wchar_t>                           __wvstring;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __wvstring                                        __wsso_string;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __versa_string<char16_t>                          __u16vstring;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __u16vstring                                      __u16sso_string;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef 
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __versa_string<char32_t>                          __u32vstring;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef __u32vstring                                      __u32sso_string;
/usr/include/c++/4.9/ext/vstring_fwd.h:  typedef 
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef std::size_t     size_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef std::ptrdiff_t  difference_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Pointer_adapter<_Relative_pointer_impl<_Tp> >       pointer;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Pointer_adapter<_Relative_pointer_impl<const _Tp> > 
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Tp&       reference;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef const _Tp& const_reference;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:        { typedef _ExtPtr_allocator<_Up> other; };
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef std::size_t      size_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef std::ptrdiff_t   difference_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef void             value_type;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Pointer_adapter<_Relative_pointer_impl<void> >       pointer;
/usr/include/c++/4.9/ext/extptr_allocator.h:      typedef _Pointer_adapter<_Relative_pointer_impl<const void> >
/usr/include/c++/4.9/ext/extptr_allocator.h:        { typedef _ExtPtr_allocator<_Up> other; };
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef size_t     size_type;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef ptrdiff_t  difference_type;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef _Tp*       pointer;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef const _Tp* const_pointer;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef _Tp&       reference;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef const _Tp& const_reference;
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/ext/pool_allocator.h:        { typedef __pool_alloc<_Tp1> other; };
/usr/include/c++/4.9/ext/pool_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef _Traits					    traits_type;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef typename _Traits::char_type		    value_type;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef _Alloc					    allocator_type;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef __vstring_utility<_CharT, _Traits, _Alloc>    _Util_Base;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef typename _Util_Base::_CharT_alloc_type        _CharT_alloc_type;
/usr/include/c++/4.9/ext/rc_string_base.h:      typedef typename _CharT_alloc_type::size_type	    size_type;
/usr/include/c++/4.9/ext/rc_string_base.h:	typedef typename _Alloc::template rebind<_Rep>::other _Rep_alloc_type;
/usr/include/c++/4.9/ext/rc_string_base.h:	  typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
/usr/include/c++/4.9/ext/rc_string_base.h:	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef _CharT				        char_type;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef _Traits				        traits_type;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef typename traits_type::int_type		int_type;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef typename traits_type::pos_type		pos_type;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef typename traits_type::off_type		off_type;
/usr/include/c++/4.9/ext/stdio_filebuf.h:      typedef std::size_t                               size_t;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef __versa_string<_CharT, _Traits, _Alloc, _Base> __string_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __string_type::size_type	  __size_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef __versa_string<_CharT, _Traits, _Alloc, _Base> __string_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __string_type::size_type	  __size_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef basic_istream<_CharT, _Traits>            __istream_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __istream_type::ios_base         __ios_base;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef __gnu_cxx::__versa_string<_CharT, _Traits, _Alloc, _Base>
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __istream_type::int_type		__int_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef ctype<_CharT>				__ctype_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __ctype_type::ctype_base         __ctype_base;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef basic_istream<_CharT, _Traits>	        __istream_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __istream_type::ios_base         __ios_base;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef __gnu_cxx::__versa_string<_CharT, _Traits, _Alloc, _Base>
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __istream_type::int_type		__int_type;
/usr/include/c++/4.9/ext/vstring.tcc:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef _Value				value_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef _Int				int_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef _St				state_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef character<_Value, _Int, _St>	char_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef __gnu_cxx::character<_Value, _Int, _St>	char_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef typename char_type::int_type		int_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef typename char_type::state_type		state_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef fpos<state_type>				pos_type;
/usr/include/c++/4.9/ext/pod_char_traits.h:      typedef streamoff					off_type;
/usr/include/c++/4.9/ext/concurrence.h:    typedef __mutex __mutex_type;
/usr/include/c++/4.9/ext/rb_tree:      typedef _Rb_tree<_Key, _Value, _KeyOfValue, _Compare, _Alloc> _Base;
/usr/include/c++/4.9/ext/rb_tree:      typedef typename _Base::allocator_type allocator_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::pair<size_t, size_t>		data_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::map<void*, data_type> 		map_alloc_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef map_alloc_type::value_type 		entry_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef map_alloc_type::const_iterator 		const_iterator;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef map_alloc_type::const_reference 		const_reference;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::map<void*, size_t>		map_construct_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef annotate_base base_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::uniform_real_distribution<double> 	distribution_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::mt19937 				engine_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::tr1::uniform_real<double> 		distribution_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef std::tr1::mt19937 				engine_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef std::tr1::variate_generator<engine_type, distribution_type> gen_t;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef _Cond  				condition_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef throw_value_base<_Cond> throw_value;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef throw_value_base<limit_condition> base_type;
/usr/include/c++/4.9/ext/throw_allocator.h:    typedef throw_value_base<random_condition> base_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef size_t 				size_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef ptrdiff_t 			difference_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef _Tp 				value_type;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef value_type* 			pointer;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef const value_type* 		const_pointer;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef value_type& 			reference;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef const value_type& 		const_reference;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/throw_allocator.h:      typedef _Cond				condition_type;
/usr/include/c++/4.9/ext/throw_allocator.h:	{ typedef throw_allocator_limit<_Tp1> other; };
/usr/include/c++/4.9/ext/throw_allocator.h:	{ typedef throw_allocator_random<_Tp1> other; };
/usr/include/c++/4.9/ext/slist:    typedef size_t                    size_type;
/usr/include/c++/4.9/ext/slist:    typedef ptrdiff_t                 difference_type;
/usr/include/c++/4.9/ext/slist:    typedef std::forward_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator<_Tp, _Tp&, _Tp*>             iterator;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator<_Tp, _Ref, _Ptr>             _Self;
/usr/include/c++/4.9/ext/slist:      typedef _Tp              value_type;
/usr/include/c++/4.9/ext/slist:      typedef _Ptr             pointer;
/usr/include/c++/4.9/ext/slist:      typedef _Ref             reference;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_node<_Tp> _Node;
/usr/include/c++/4.9/ext/slist:      typedef typename _Alloc::template rebind<_Slist_node<_Tp> >::other
/usr/include/c++/4.9/ext/slist:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_base<_Tp,_Alloc> _Base;
/usr/include/c++/4.9/ext/slist:      typedef _Tp               value_type;
/usr/include/c++/4.9/ext/slist:      typedef value_type*       pointer;
/usr/include/c++/4.9/ext/slist:      typedef const value_type* const_pointer;
/usr/include/c++/4.9/ext/slist:      typedef value_type&       reference;
/usr/include/c++/4.9/ext/slist:      typedef const value_type& const_reference;
/usr/include/c++/4.9/ext/slist:      typedef size_t            size_type;
/usr/include/c++/4.9/ext/slist:      typedef ptrdiff_t         difference_type;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator<_Tp, _Tp&, _Tp*>             iterator;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
/usr/include/c++/4.9/ext/slist:      typedef typename _Base::allocator_type allocator_type;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_node<_Tp>      _Node;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_node_base      _Node_base;
/usr/include/c++/4.9/ext/slist:      typedef _Slist_iterator_base  _Iterator_base;
/usr/include/c++/4.9/ext/slist:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/ext/slist:	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
/usr/include/c++/4.9/ext/slist:      typedef typename slist<_Tp,_Alloc>::const_iterator const_iterator;
/usr/include/c++/4.9/ext/slist:      typedef __gnu_cxx::slist<_Tp, _Alloc> _Container;
/usr/include/c++/4.9/ext/slist:      typedef _Container          container_type;
/usr/include/c++/4.9/ext/slist:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/slist:      typedef void                value_type;
/usr/include/c++/4.9/ext/slist:      typedef void                difference_type;
/usr/include/c++/4.9/ext/slist:      typedef void                pointer;
/usr/include/c++/4.9/ext/slist:      typedef void                reference;
/usr/include/c++/4.9/ext/typelist.h:      typedef Root 	root;
/usr/include/c++/4.9/ext/typelist.h:      typedef Hd 	head;
/usr/include/c++/4.9/ext/typelist.h:      typedef Typelist 	tail;
/usr/include/c++/4.9/ext/typelist.h:      typedef append_<Tl, Typelist_Chain> 			append_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef chain<Hd, typename append_type::type> 		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef Typelist_Chain 			      		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef Typelist_Chain 					type;
/usr/include/c++/4.9/ext/typelist.h:      typedef null_type 					type;
/usr/include/c++/4.9/ext/typelist.h:      typedef chain<Hd, null_type> 				type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename append_typelist_<Tl>::type 		rest_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename append<Hd, node<rest_type> >::type::root	type;
/usr/include/c++/4.9/ext/typelist.h:      typedef null_type 					type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename chain_filter_<Tl, Pred>::type 		rest_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef chain<Hd, rest_type> 				chain_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename __conditional_type<include_hd, chain_type, rest_type>::__type type;
/usr/include/c++/4.9/ext/typelist.h:      typedef Hd 						type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename chain_at_index_<Tl, i - 1>::type 	type;
/usr/include/c++/4.9/ext/typelist.h:      typedef null_type 					type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename chain_transform_<Tl, Transform>::type 	rest_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Transform<Hd>::type 			transform_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef chain<transform_type, rest_type> 			type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Hd_Tl::root 				type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename chain_flatten_<Tl_Typelist>::type 	rest_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef append<Hd_Typelist, node<rest_type> >		append_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename append_type::type::root 			type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename TypelistT::root rootT;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename TypelistV::root rootV;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist0::root 				root0_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist1::root 				root1_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef detail::append_<root0_type, root1_type> 		append_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<typename append_type::type> 			type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist_Typelist::root 		      	root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef detail::append_typelist_<root_type> 		append_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<typename append_type::type> 			type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist::root 				root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist::root 				root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef detail::chain_filter_<root_type, Pred> 		filter_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<typename filter_type::type> 	       		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist::root 				root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef detail::chain_at_index_<root_type, i> 		index_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename index_type::type 			type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist::root 				root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef detail::chain_transform_<root_type, Transform> 	transform_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<typename transform_type::type> 		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename Typelist_Typelist::root 		      	root_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename detail::chain_flatten_<root_type>::type 	flatten_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<flatten_type> 				type;
/usr/include/c++/4.9/ext/typelist.h:      typedef typename at_index<Typelist, 0>::type 		first_type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<chain<first_type, null_type> > 		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN1(T1)> 		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN2(T1,T2)> 		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN3(T1,T2,T3)>		type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN4(T1,T2,T3,T4)>	type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN5(T1,T2,T3,T4,T5)>	type;
/usr/include/c++/4.9/ext/typelist.h:      typedef node<_GLIBCXX_TYPELIST_CHAIN6(T1,T2,T3,T4,T5,T6)>	type;
/usr/include/c++/4.9/ext/cast.h:   * 1) has a typedef element_type which names tehe type it points to.
/usr/include/c++/4.9/ext/cast.h:    { typedef typename _ToType::element_type*  type; };
/usr/include/c++/4.9/ext/cast.h:    { typedef _ToType*  type; };
/usr/include/c++/4.9/ext/cast.h:   * element_type typedef which names the type it points to.
/usr/include/c++/4.9/ext/random.tcc:      typedef __gnu_cxx::simd_fast_mersenne_twister_engine<_UIntType,
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits> __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits> __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/ext/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/ext/vstring.h:      typedef _Base<_CharT, _Traits, _Alloc>                __vstring_base;    
/usr/include/c++/4.9/ext/vstring.h:      typedef typename __vstring_base::_CharT_alloc_type    _CharT_alloc_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef _Traits					    traits_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef typename _Traits::char_type		    value_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef _Alloc					    allocator_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef typename _CharT_alloc_type::size_type	    size_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef typename _CharT_alloc_type::difference_type   difference_type;
/usr/include/c++/4.9/ext/vstring.h:      typedef value_type&               	            reference;
/usr/include/c++/4.9/ext/vstring.h:      typedef const value_type&                             const_reference;
/usr/include/c++/4.9/ext/vstring.h:      typedef typename _CharT_alloc_type::pointer	    pointer;
/usr/include/c++/4.9/ext/vstring.h:      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
/usr/include/c++/4.9/ext/vstring.h:      typedef __gnu_cxx::__normal_iterator<pointer, __versa_string>  iterator;
/usr/include/c++/4.9/ext/vstring.h:      typedef __gnu_cxx::__normal_iterator<const_pointer, __versa_string>
/usr/include/c++/4.9/ext/vstring.h:      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
/usr/include/c++/4.9/ext/vstring.h:      typedef std::reverse_iterator<iterator>		    reverse_iterator;
/usr/include/c++/4.9/ext/vstring.h:	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/ext/hash_map:      typedef hashtable<pair<const _Key, _Tp>,_Key, _HashFn,
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/ext/hash_map:      typedef _Tp data_type;
/usr/include/c++/4.9/ext/hash_map:      typedef _Tp mapped_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::pointer pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_pointer const_pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::reference reference;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_reference const_reference;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::iterator iterator;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/ext/hash_map:      typedef hashtable<pair<const _Key, _Tp>, _Key, _HashFn,
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/ext/hash_map:      typedef _Tp data_type;
/usr/include/c++/4.9/ext/hash_map:      typedef _Tp mapped_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::pointer pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_pointer const_pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::reference reference;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_reference const_reference;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::iterator iterator;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/ext/hash_map:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/ext/hash_map:      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn, _EqKey, _Alloc>
/usr/include/c++/4.9/ext/hash_map:      typedef _Container          container_type;
/usr/include/c++/4.9/ext/hash_map:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/hash_map:      typedef void                value_type;
/usr/include/c++/4.9/ext/hash_map:      typedef void                difference_type;
/usr/include/c++/4.9/ext/hash_map:      typedef void                pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef void                reference;
/usr/include/c++/4.9/ext/hash_map:      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn, _EqKey, _Alloc>
/usr/include/c++/4.9/ext/hash_map:      typedef _Container          container_type;
/usr/include/c++/4.9/ext/hash_map:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/hash_map:      typedef void                value_type;
/usr/include/c++/4.9/ext/hash_map:      typedef void                difference_type;
/usr/include/c++/4.9/ext/hash_map:      typedef void                pointer;
/usr/include/c++/4.9/ext/hash_map:      typedef void                reference;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef size_t     size_type;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef ptrdiff_t  difference_type;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef _Tp*       pointer;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef const _Tp* const_pointer;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef _Tp&       reference;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef const _Tp& const_reference;
/usr/include/c++/4.9/ext/new_allocator.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/ext/new_allocator.h:        { typedef new_allocator<_Tp1> other; };
/usr/include/c++/4.9/ext/new_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/sso_string_base.h:      typedef _Traits					    traits_type;
/usr/include/c++/4.9/ext/sso_string_base.h:      typedef typename _Traits::char_type		    value_type;
/usr/include/c++/4.9/ext/sso_string_base.h:      typedef __vstring_utility<_CharT, _Traits, _Alloc>    _Util_Base;
/usr/include/c++/4.9/ext/sso_string_base.h:      typedef typename _Util_Base::_CharT_alloc_type        _CharT_alloc_type;
/usr/include/c++/4.9/ext/sso_string_base.h:      typedef typename _CharT_alloc_type::size_type	    size_type;
/usr/include/c++/4.9/ext/sso_string_base.h:          typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
/usr/include/c++/4.9/ext/sso_string_base.h:	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
/usr/include/c++/4.9/ext/enc_filebuf.h:      typedef encoding_char_traits<_CharT>     	traits_type;
/usr/include/c++/4.9/ext/enc_filebuf.h:      typedef typename traits_type::state_type	state_type;
/usr/include/c++/4.9/ext/enc_filebuf.h:      typedef typename traits_type::pos_type	pos_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef _Traits					    traits_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _Traits::char_type		    value_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _CharT_alloc_type::size_type	    size_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _CharT_alloc_type::difference_type   difference_type;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _CharT_alloc_type::pointer	    pointer;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
/usr/include/c++/4.9/ext/vstring_util.h:      typedef __gnu_cxx::
/usr/include/c++/4.9/ext/vstring_util.h:      typedef __gnu_cxx::
/usr/include/c++/4.9/ext/vstring_util.h:      typedef __gnu_cxx::
/usr/include/c++/4.9/ext/vstring_util.h:      typedef __gnu_cxx::
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:     typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:     typedef null_type 					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:     typedef typename _Alloc::template rebind<metadata_type> __rebind_m;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:     typedef typename __rebind_m::other::reference 	metadata_reference;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef typename allocator_type::size_type       	size_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef detail::lu_counter_metadata<size_type> 	metadata_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef detail::lu_counter_policy_base<size_type> 	base_type;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef typename _Alloc::template rebind<metadata_type> __rebind_m;
/usr/include/c++/4.9/ext/pb_ds/list_update_policy.hpp:      typedef typename __rebind_m::other::reference 	metadata_reference;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef typename PB_DS_HASH_BASE 		base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef PB_DS_CC_HASH_BASE 			base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef cc_hash_tag	       			container_category;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Hash_Fn 				hash_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Eq_Fn 				eq_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Resize_Policy 			resize_policy;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Comb_Hash_Fn 			comb_hash_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef PB_DS_GP_HASH_BASE 			base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef gp_hash_tag	       			container_category;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Hash_Fn 				hash_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Eq_Fn 				eq_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Comb_Probe_Fn			comb_probe_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Probe_Fn 				probe_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Resize_Policy 			resize_policy;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef typename PB_DS_BRANCH_BASE 	       	base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Node_Update 			node_update;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef PB_DS_TREE_BASE 			base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Cmp_Fn 				cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef PB_DS_TRIE_BASE			base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef _ATraits 				access_traits;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef typename PB_DS_LU_BASE 		base_type;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef list_update_tag	       		container_category;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Eq_Fn 				eq_fn;
/usr/include/c++/4.9/ext/pb_ds/assoc_container.hpp:    typedef Update_Policy 			update_policy;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef _Tv 					value_type;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef Tag 					container_category;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename allocator_type::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename allocator_type::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename detail::container_base_dispatch<_Tv, Cmp_Fn, _Alloc,
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename _Alloc::template rebind<_Tv>   	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename __rebind_v::other			__rebind_va;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename __rebind_va::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename __rebind_va::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename __rebind_va::pointer 	   	pointer;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename __rebind_va::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename base_type::point_iterator 		point_iterator;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename base_type::point_const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/priority_queue.hpp:    typedef typename base_type::const_iterator 		const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename _Alloc::size_type			  size_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef String 					  key_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename _Alloc::template rebind<key_type>	  __rebind_k;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename __rebind_k::other::const_reference   key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename detail::__conditional_type<Reverse, \
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename std::iterator_traits<const_iterator>::value_type e_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::key_const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef _ATraits 				access_traits;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename access_traits::const_iterator 	a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef _Alloc 	       				allocator_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename allocator_type::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef null_type 					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef Node_Itr 					node_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef Node_CItr 					node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename node_iterator::value_type 		iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename node_const_iterator::value_type 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef _ATraits 				access_traits;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename access_traits::const_iterator 	a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename allocator_type::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::key_const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef size_type 					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef Node_CItr 					node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef Node_Itr 					node_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename node_const_iterator::value_type 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename node_iterator::value_type 		iterator;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename base_type::const_pointer 		const_pointer;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename _Alloc::template rebind<metadata_type> __rebind_m;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename __rebind_m::other 			__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename __rebind_ma::const_reference      metadata_const_reference;
/usr/include/c++/4.9/ext/pb_ds/trie_policy.hpp:    typedef typename __rebind_ma::reference 		metadata_reference;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef detail::mask_based_range_hashing<Size_Type> mask_based_base;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef detail::mod_based_range_hashing<size_type> mod_based_base;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef PB_DS_SIZE_BASE_C_DEC size_base;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Trigger_Policy 	trigger_policy;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Policy 	size_policy;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Trigger_Policy trigger_policy_base;
/usr/include/c++/4.9/ext/pb_ds/hash_policy.hpp:    typedef Size_Policy size_policy_base;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef PB_DS_BRANCH_POLICY_BASE 		       	base_type;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename allocator_type::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename base_type::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename base_type::key_const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef size_type 					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef Node_CItr 	       			node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef Node_Itr 					node_iterator;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename node_const_iterator::value_type 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename node_iterator::value_type 		iterator;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename base_type::const_pointer 		const_pointer;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename _Alloc::template rebind<metadata_type>::other __rebind_m;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename __rebind_m::const_reference       metadata_const_reference;
/usr/include/c++/4.9/ext/pb_ds/tree_policy.hpp:    typedef typename __rebind_m::reference 		metadata_reference;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:  typedef void trivial_iterator_difference_type;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef cc_hash_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef gp_hash_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef basic_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef rb_tree_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef range_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef splay_tree_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef range_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef ov_tree_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef basic_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef pat_trie_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef range_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef list_update_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef pairing_heap_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef thin_heap_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef binomial_heap_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef rc_binomial_heap_tag 			container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef point_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef binary_heap_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef basic_invalidation_guarantee 		invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef Cntnr 				       container_type;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef typename Cntnr::container_category         container_category;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef container_traits_base<container_category>  base_type;
/usr/include/c++/4.9/ext/pb_ds/tag_and_trait.hpp:    typedef typename base_type::invalidation_guarantee invalidation_guarantee;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef node_const_iterator node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp:  typedef std::map<key_type, mapped_type, Cmp_Fn,
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp:  typedef std::set<key_type, Cmp_Fn,
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC this_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef Metadata_Type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef PB_DS_OV_TREE_NODE_ITERATOR_C_DEC this_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef typename base_type::pointer pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef typename base_type::const_pointer const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef PB_DS_OV_TREE_TRAITS_BASE	       		traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef Node_And_It_Traits			traits_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename remove_const<typename traits_base::value_type>::type non_const_value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename _Alloc::template rebind<non_const_value_type>::other value_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename value_allocator::pointer 	value_vector;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef PB_DS_TREE_TRACE_BASE_C_DEC 		trace_base;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::pointer 		mapped_pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::const_pointer 	mapped_const_pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_type::metadata_type 	metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename _Alloc::template rebind<metadata_type>::other metadata_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename metadata_allocator::pointer 	metadata_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename metadata_allocator::const_reference metadata_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename metadata_allocator::reference 	metadata_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_type::null_node_update_pointer
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef ov_tree_tag 				 container_category;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::key_pointer 	key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::key_const_pointer 	key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::key_reference 	key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::mapped_type 	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::mapped_pointer 	mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::mapped_reference 	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::value_type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_base::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef const_pointer 				point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef pointer 					point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef point_const_iterator 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef point_iterator 				iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef point_const_iterator 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_type::node_update 	node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_type::node_iterator 	node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp:      typedef typename traits_type::node_const_iterator	node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef Eq_Fn 					   eq_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef typename key_allocator::const_reference 	   key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef typename _Alloc::size_type 		   size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef Eq_Fn 					   eq_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp:      typedef typename key_allocator::const_reference 	   key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp:    typedef some_metadata_type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp:	typedef Size_Type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp:	typedef Size_Type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef types_traits<Key, Mapped, _Alloc, false> type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef Node node;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef types_traits<Key, null_type, _Alloc, false> type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef Node node;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef point_const_iterator point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef const_reverse_iterator reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef node_const_iterator node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/traits.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef std::bidirectional_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef Pointer 					pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef Const_Pointer 				const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef Reference 				reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef Const_Reference 				const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:      typedef PB_DS_TREE_CONST_IT_C_DEC base_it_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef Node_And_It_Traits 			traits_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef PB_DS_BIN_TREE_TRAITS_BASE 	       	traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename node_allocator::value_type 	node;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename node_allocator::pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::null_node_update_pointer
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef cond_dealtor<node, _Alloc> 		cond_dealtor_t;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::key_pointer 	key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::key_const_pointer 	key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::key_reference 	key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::mapped_type 	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::mapped_pointer 	mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::mapped_reference 	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::value_type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_base::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::point_const_iterator point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef point_const_iterator 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef point_iterator 				iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::reverse_iterator 	reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::node_const_iterator node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::node_iterator 	node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef typename traits_type::node_update 	node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp:      typedef std::pair<const_pointer, const_pointer> node_consistent_t;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Const_Iterator value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Const_Iterator reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Const_Iterator const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef typename Node::metadata_type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Iterator value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Iterator reference;
/usr/include/c++/4.9/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp:      typedef Iterator const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef PB_DS_P_HEAP_BASE				base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename base_type::node_pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_a;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename __rebind_a::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename __rebind_a::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename __rebind_a::reference		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename __rebind_a::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename base_type::point_const_iterator	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename base_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename base_type::const_iterator 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp:      typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef value_type_ value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef pointer_ pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef const_pointer_ const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef reference_ reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:  typedef const_reference_ const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef std::forward_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef typename _Alloc::difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef value_type_ value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef pointer_ pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef const_pointer_ const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef reference_ reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef const_reference_ const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/iterator.hpp:  typedef const_iterator_ base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef value_type_ value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef pointer_ pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef const_pointer_ const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef reference_ reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp:  typedef const_reference_ const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef std::forward_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef typename _Alloc::difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef value_type_ value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef pointer_ pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef const_pointer_ const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef reference_ reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef const_reference_ const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:  typedef point_const_iterator_ base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef PB_DS_B_HEAP_BASE	  			base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::node 			node;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::node_pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::node_const_pointer 	node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename __rebind_v::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename __rebind_v::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename __rebind_v::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename __rebind_v::const_reference   	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::point_const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::const_iterator 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp:      typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef binomial_heap_base<Value_Type, Cmp_Fn, _Alloc> 	base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::node_pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::node_const_pointer 	node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::point_const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::const_iterator 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::cmp_fn 		cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp:      typedef typename base_type::allocator_type 	allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp:  typedef typename entry_pred<value_type, Pred, _Alloc, simple_value>::type
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef typename _Alloc::template rebind<Entry>::other::pointer entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef Value_Type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef typename _Alloc::template rebind<value_type>::other::pointer
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename PB_DS_ENTRY_CMP_DEC 		entry_cmp;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef PB_DS_RESIZE_POLICY_DEC 			resize_policy;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef cond_dealtor<value_type, _Alloc> 		cond_dealtor_t;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef integral_constant<int, simple_value> 	no_throw_copies_t;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename _Alloc::template rebind<value_type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename __rebind_v::other 		value_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename value_allocator::pointer		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename value_allocator::const_pointer	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename value_allocator::reference	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename value_allocator::const_reference	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename __conditional_type<simple_value,
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename _Alloc::template rebind<entry>::other
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef typename entry_allocator::pointer 	entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef binary_heap_point_const_iterator_<value_type, entry,
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef point_const_iterator 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef binary_heap_const_iterator_<value_type, entry,
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp:      typedef const_iterator 				iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/resize_policy.hpp:      typedef _Tp	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_pred.hpp:	typedef Pred 						type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_pred.hpp:	typedef typename _Alloc::template rebind<_VTp>		__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_pred.hpp:	typedef typename __rebind_v::other::const_pointer	entry;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp:  typedef
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef PB_DS_BIN_HEAP_CIT_BASE 		       	base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::entry_pointer 	entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef std::forward_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::value_type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/const_iterator.hpp:      typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp:	typedef Cmp_Fn 						type;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp:	typedef typename _Alloc::template rebind<_VTp>		__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp:	typedef typename __rebind_v::other::const_pointer	entry;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp:      typedef Size_Type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp:      typedef Size_Type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Hash_Fn hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Comb_Hash_Fn comb_hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::template rebind< Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename key_allocator::const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef std::pair<size_type, size_type> comp_hash;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Hash_Fn hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Comb_Hash_Fn comb_hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename key_allocator::const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Comb_Hash_Fn comb_hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp:      typedef Comb_Hash_Fn comb_hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp:    typedef std::size_t 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Comb_Probe_Fn comb_probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Hash_Fn hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Probe_Fn probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename key_allocator::const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef std::pair<size_type, size_type> comp_hash;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Comb_Probe_Fn comb_probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Hash_Fn hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Probe_Fn probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename key_allocator::const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef Comb_Probe_Fn comb_probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename _Alloc::template rebind<Key>::other key_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp:      typedef typename key_allocator::const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef PB_DS_GP_HASH_TRAITS_BASE	       	traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::value_type 	value_type_;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::pointer 	pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::const_pointer const_pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::reference 	reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::const_reference const_reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::comp_hash	comp_hash;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename _Alloc::template rebind<entry>::other entry_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename entry_allocator::pointer entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename entry_allocator::const_pointer const_entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename entry_allocator::reference entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename entry_allocator::const_reference const_entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename entry_allocator::pointer entry_array;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef PB_DS_RANGED_PROBE_FN_C_DEC 	ranged_probe_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef PB_DS_HASH_EQ_FN_C_DEC 		hash_eq_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Resize_Policy 			resize_base;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef _Alloc 				allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename _Alloc::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Hash_Fn 				hash_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Eq_Fn 				eq_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Probe_Fn 				probe_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Comb_Probe_Fn 			comb_probe_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef Resize_Policy 			resize_policy;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::key_type 	key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::key_pointer key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::key_const_pointer key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::key_reference key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::mapped_type mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::mapped_pointer mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::mapped_reference mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::value_type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::pointer pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::const_pointer const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::reference reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef typename traits_base::const_reference const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef point_iterator_ 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef point_const_iterator_ 		point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef point_const_iterator_ 		point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef const_iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp:      typedef const_iterator_ 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef std::tr1::hash<Key> 				type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef std::equal_to<Key> 				type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef direct_mask_range_hashing<> 			type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef typename Comb_Hash_Fn::size_type 			size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef direct_mask_range_hashing<size_type> 		default_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef is_same<default_fn, Comb_Hash_Fn> 		same_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef hash_exponential_size_policy<size_type> 		iftrue;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef hash_prime_size_policy 				iffalse;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef typename cond_type::__type 		       size_policy_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef hash_load_check_resize_trigger<false, size_type> 	trigger;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef hash_standard_resize_policy<size_policy_type, trigger, 
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef lu_move_to_front_policy<> 			type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef typename Comb_Probe_Fn::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef direct_mask_range_hashing<size_type> 		default_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef is_same<default_fn, Comb_Probe_Fn> 		same_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef linear_probe_fn<size_type> 			iftrue;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef quadratic_probe_fn<size_type> 			iffalse;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:      typedef typename cond_type::__type 			type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:	typedef __dtrie_string					string_type;
/usr/include/c++/4.9/ext/pb_ds/detail/standard_policies.hpp:	typedef trie_string_access_traits<string_type> 		type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef integral_constant<int, __simple> 	       	indicator;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef integral_constant<int, is_simple<Key>::value> 	indicator;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef _Tv 	value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef _Th 	hash_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<Mapped>	__rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_m::other			__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef std::pair<const Key, Mapped>			__value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<__value_type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:       	typedef typename __rebind_v::other			__rebind_va;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::value_type       	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::pointer 		mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::reference	       	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_reference 	mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::value_type 	value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::reference 	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef stored_data<value_type, null_type>	stored_data_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<Mapped>	__rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_m::other			__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef std::pair<const Key, Mapped>			__value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<__value_type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:       	typedef typename __rebind_v::other			__rebind_va;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::value_type       	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::pointer 		mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::reference	       	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_reference 	mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::value_type 	value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::reference 	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef stored_data<value_type, size_type>	stored_data_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef Key 					value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<null_type>  	__rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_m::other			__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<value_type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:       	typedef typename __rebind_v::other			__rebind_va;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::value_type       	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::pointer 		mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::reference	       	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_reference 	mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::reference 	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef stored_data<value_type, null_type>	stored_data_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef Key 					value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<null_type>  	__rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_m::other			__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<value_type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:       	typedef typename __rebind_v::other			__rebind_va;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::value_type       	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::pointer 		mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::reference	       	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_ma::const_reference 	mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::reference 	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_va::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef stored_data<value_type, size_type>	stored_data_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef type_base<Key, Mapped, _Alloc, Store_Hash> type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef no_throw_copies<Key, Mapped>		__nothrowcopy;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::template rebind<Key>::other __rebind_a;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_a::value_type 	key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_a::pointer 		key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_a::const_pointer 	key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_a::reference 		key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __rebind_a::const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef std::pair<size_type, size_type> 	comp_hash;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef integral_constant<int, Store_Hash> 	store_extra;
/usr/include/c++/4.9/ext/pb_ds/detail/types_traits.hpp:	typedef typename __nothrowcopy::indicator 	no_throw_indicator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef PB_DS_CC_HASH_TRAITS_BASE	       	traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::comp_hash 	comp_hash;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::value_type 	value_type_;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::pointer 	pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::const_pointer const_pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::reference 	reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::const_reference const_reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef cond_dealtor<entry, _Alloc> 	cond_dealtor_t;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename _Alloc::template rebind<entry>::other entry_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename entry_allocator::pointer entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename entry_allocator::const_pointer const_entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename entry_allocator::reference entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename entry_allocator::const_reference const_entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename _Alloc::template rebind<entry_pointer>::other entry_pointer_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename entry_pointer_allocator::pointer entry_pointer_array;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef PB_DS_RANGED_HASH_FN_C_DEC ranged_hash_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef PB_DS_HASH_EQ_FN_C_DEC hash_eq_fn_base;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef Resize_Policy resize_base;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef _Alloc 				allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename _Alloc::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef Hash_Fn 				hash_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef Eq_Fn 				eq_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef Comb_Hash_Fn 			comb_hash_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef Resize_Policy 			resize_policy;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::key_type key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::key_pointer key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::key_const_pointer key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::key_reference key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::mapped_type mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::mapped_pointer mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::mapped_reference mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::value_type 	value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::pointer 	pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::const_pointer const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::reference 	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef typename traits_base::const_reference const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef point_iterator_ 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef point_const_iterator_ 		point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef point_const_iterator_ 		point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef const_iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp:      typedef const_iterator_ 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp:      typedef typename HT_Map::entry 		entry;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp:      typedef typename HT_Map::entry_allocator 	entry_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp:      typedef typename HT_Map::key_type 	key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/type_utils.hpp:    // because of this use the following typedefs instead of importing
/usr/include/c++/4.9/ext/pb_ds/detail/type_utils.hpp:    typedef std::tr1::integral_constant<int, 1> true_type;
/usr/include/c++/4.9/ext/pb_ds/detail/type_utils.hpp:    typedef std::tr1::integral_constant<int, 0> false_type;
/usr/include/c++/4.9/ext/pb_ds/detail/type_utils.hpp:    typedef __gnu_pbds::detail::__static_assert_dumclass<sizeof(__gnu_pbds::detail::__static_assert<bool(E)>)> UNIQUE##__static_assert_type
/usr/include/c++/4.9/ext/pb_ds/detail/type_utils.hpp:      typedef Type type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_a;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef left_child_next_sibling_heap PB_DS_BASE_T_P base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::node 			node;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::node_pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::node_const_pointer 	node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename __rebind_a::pointer		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename __rebind_a::const_pointer	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename __rebind_a::reference		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename __rebind_a::const_reference     	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::point_const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp:      typedef typename base_type::const_iterator 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef Const_Key_Reference 			key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef std::_GLIBCXX_STD_C::list<Key> 		key_repository;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef typename key_repository::size_type       	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef typename key_repository::iterator	       	iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef typename key_repository::const_iterator  	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/debug_map_base.hpp:      typedef const_iterator iterator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef PB_DS_LU_TRAITS_BASE 	       	traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename _Alloc::template rebind<entry>::other entry_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename entry_allocator::pointer entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename entry_allocator::const_pointer const_entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename entry_allocator::reference entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename entry_allocator::const_reference const_entry_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename _Alloc::template rebind<entry_pointer>::other entry_pointer_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename entry_pointer_allocator::pointer entry_pointer_array;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::value_type value_type_;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::pointer pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::const_pointer const_pointer_;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::reference reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::const_reference const_reference_;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef cond_dealtor<entry, _Alloc> cond_dealtor_t;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename _Alloc::size_type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename _Alloc::difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef Eq_Fn eq_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef Update_Policy update_policy;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename Update_Policy::metadata_type update_metadata;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::key_type key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::key_pointer key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::key_const_pointer key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::key_reference key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::mapped_type mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::mapped_pointer mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::mapped_reference mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::value_type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::pointer pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::const_pointer const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::reference reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef typename traits_base::const_reference const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef point_iterator_ 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef point_const_iterator_ 		point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef point_const_iterator_ 		point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef const_iterator_ 			iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/list_update_map_/lu_map_.hpp:      typedef const_iterator_ 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename Node_Itr::value_type 		it_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename std::iterator_traits<it_type>::value_type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename value_type::first_type 	key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename remove_const<value_type>::type	rcvalue_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename remove_const<key_type>::type	rckey_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename _Alloc::template rebind<rcvalue_type>::other rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename _Alloc::template rebind<rckey_type>::other   rebind_k;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::const_pointer	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_k::const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename Node_CItr::value_type 		   it_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:       	typedef typename std::iterator_traits<it_type>::value_type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename remove_const<value_type>::type		   rcvalue_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef typename _Alloc::template rebind<rcvalue_type>::other rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::const_pointer	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef value_type 				key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/branch_policy.hpp:	typedef	typename rebind_v::const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp:	typedef types_traits<Key, Data, _Alloc, false>	__traits_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp:	typedef typename __traits_type::pointer        	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp:	typedef const_iterator 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp:	typedef const_iterator 				const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp:	typedef const_reference 	       		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp:    typedef std::size_t size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp:      typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp:      typedef Size_Type size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:	typedef typename Node_Update::metadata_type 	type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:	typedef null_type 				type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp:      typedef typename tree_metadata_helper<__node_u, null_update>::type type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp:    typedef std::size_t metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp:	  typedef inode_pointer inode_ptr;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef pat_trie_base				    	base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef types_traits<Key, Mapped, _Alloc, false> 		type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef typename trie_node_metadata_dispatch<Key, Mapped, _ATraits, Node_Update, _Alloc>::type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Metadata<metadata_type, _Alloc>      	metadata;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef _ATraits 		       			       	access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef __gnu_pbds::detail::synth_access_traits<type_traits, false, access_traits>   synth_access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Node_base<synth_access_traits, metadata>     	node;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Head<synth_access_traits, metadata>	       	head;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Leaf<synth_access_traits, metadata>	       	leaf;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Inode<synth_access_traits, metadata> 		inode;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Iter<node, leaf, head, inode, true>	       	iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_CIter<node, leaf, head, inode, true> 	 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Iter<node, leaf, head, inode, false> 		reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_CIter<node, leaf, head, inode, false>	 	const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Node_citer<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Node_iter<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef Node_Update<node_const_iterator, node_iterator, _ATraits, _Alloc> 		node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef null_node_update<node_const_iterator, node_iterator, _ATraits, _Alloc>* 		null_node_update_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef pat_trie_base					base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef types_traits<Key, null_type, _Alloc, false> 	type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef typename trie_node_metadata_dispatch<Key, null_type, _ATraits, Node_Update, _Alloc>::type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Metadata<metadata_type, _Alloc>				metadata;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef _ATraits 				     					access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef __gnu_pbds::detail::synth_access_traits<type_traits, true, access_traits> synth_access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Node_base<synth_access_traits, metadata>     	node;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Head<synth_access_traits, metadata> 	       	head;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Leaf<synth_access_traits, metadata> 	       	leaf;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Inode<synth_access_traits, metadata> 	       	inode;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_CIter<node, leaf, head, inode, true> 		const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef const_iterator 					       	iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_CIter<node, leaf, head, inode, false>	       	const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef const_reverse_iterator 			       		reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef base_type::_Node_citer<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef node_const_iterator 								node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef Node_Update<node_const_iterator, node_iterator, _ATraits, _Alloc> 		node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/traits.hpp:      typedef null_node_update<node_const_iterator, node_const_iterator, _ATraits, _Alloc>* 	null_node_update_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef Metadata     					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef _Alloc     					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef typename _Alloc::template rebind<Metadata>	__rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef typename __rebind_m::other::const_reference  const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef null_type 					metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef _Alloc     					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename Metadata::allocator_type		_Alloc;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef _Alloc						allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef _ATraits					access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _ATraits::type_traits			type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _Alloc::template rebind<_Node_base>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename __rebind_n::other::pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _Alloc::template rebind<_ATraits>    __rebind_at;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename __rebind_at::other::const_pointer    a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _ATraits::const_iterator	      a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef std::pair<a_const_iterator, a_const_iterator> node_debug_info;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Node_base<_ATraits, Metadata> 			base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::type_traits			type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_pointer			node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_debug_info      	       node_debug_info;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::a_const_pointer 	       a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Node_base<_ATraits, Metadata> 	   	    	base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::type_traits			type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::value_type			value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::reference			reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::const_reference    		const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_debug_info      		node_debug_info;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::a_const_pointer      		a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Node_base<_ATraits, Metadata> 			base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::type_traits			type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::access_traits	       		access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::value_type 			value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::allocator_type		_Alloc;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Alloc						allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::size_type 			size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::a_const_pointer      	       a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::a_const_iterator     	      a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_pointer			node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<base_type>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_n::other::const_pointer      node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Leaf<_ATraits, Metadata>	 			leaf;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<leaf>::other 	__rebind_l;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::pointer 			leaf_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::const_pointer 	    leaf_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<_Inode>::other 	__rebind_in;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_in::pointer 			inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_in::const_pointer 	    inode_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<node_pointer>::other __rebind_np;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_np::pointer 		node_pointer_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_np::reference 		node_pointer_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef std::forward_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer_pointer 			pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer_reference 			reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef std::forward_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer_pointer 			pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	typedef node_pointer_reference 			reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_debug_info 	       node_debug_info;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Node::allocator_type		allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Node::type_traits		type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef std::bidirectional_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename allocator_type::difference_type	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::value_type		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef allocator_type				_Alloc;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Node>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_n::other::pointer	node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Leaf>	__rebind_l;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::other::pointer	leaf_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::other::const_pointer	leaf_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Head>	__rebind_h;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_h::other::pointer	head_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Inode> __rebind_in;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_in::other::pointer 	inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Inode::iterator			inode_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _CIter<Node, Leaf, Head, Inode, Is_Forward_Iterator>
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::allocator_type	allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::type_traits		type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::value_type		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename type_traits::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::node_pointer		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::leaf_pointer		leaf_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::leaf_const_pointer	leaf_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::head_pointer		head_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::inode_pointer 	inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Node>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_n::other::pointer	node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Leaf>	__rebind_l;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::other::pointer	leaf_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_l::other::const_pointer	leaf_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Inode> 	__rebind_in;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_in::other::pointer 	inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_in::other::const_pointer inode_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Node::a_const_pointer		a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Node::a_const_iterator		a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef trivial_iterator_tag 			iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef trivial_iterator_difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _CIterator 		       		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef value_type 				reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef value_type 				const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename Node::metadata_type 		metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<metadata_type> __rebind_m;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_m::other 		__rebind_ma;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_ma::const_reference    metadata_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef _Node_citer<Node, Leaf, Head, Inode,
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename _Alloc::template rebind<Node>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename __rebind_n::other::pointer	node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::inode_pointer 	inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::a_const_pointer 	a_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef Iterator 					iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef typename base_type::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef Iterator 					value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef value_type 				reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef value_type 				const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef node_pointer_pointer pointer_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:      typedef node_pointer_pointer pointer_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp:	  typedef typename type_traits::key_const_reference kcr;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp:      typedef _ATraits 					base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp:      typedef typename base_type::const_iterator	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp:      typedef Type_Traits 				type_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp:      typedef typename type_traits::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp:      typedef typename type_traits::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef pat_trie_base				base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef PB_DS_PAT_TRIE_TRAITS_BASE 	       	traits_base;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef Node_And_It_Traits			traits_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::synth_access_traits synth_access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename synth_access_traits::const_iterator a_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::node 		node;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::template rebind<node>	__rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_n::other::const_pointer node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_n::other::pointer 	node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::head 		head;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::template rebind<head>	__rebind_h;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_h::other 		head_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename head_allocator::pointer 		head_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::leaf 		leaf;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::template rebind<leaf>	__rebind_l;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_l::other 		leaf_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename leaf_allocator::pointer 		leaf_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename leaf_allocator::const_pointer 	leaf_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::inode 		inode;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename inode::iterator 			inode_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::template rebind<inode> 	__rebind_in;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_in::other 		__rebind_ina;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_in::other      	       	inode_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_ina::pointer 		inode_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename __rebind_ina::const_pointer 	inode_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:	typedef inode_pointer 			       	__inp;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:	typedef typename _Alloc::template rebind<__inp>::other 	__rebind_inp;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:	typedef std::_GLIBCXX_STD_C::list<__inp, __rebind_inp> 	bag_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:	typedef std::list<__inp, __rebind_inp> 			bag_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::null_node_update_pointer null_node_update_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef pat_trie_tag 				container_category;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::key_pointer 	key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::key_const_pointer 	key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::key_reference 	key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::key_const_reference key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::mapped_type 	mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::mapped_pointer 	mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::mapped_reference 	mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::value_type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_base::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::access_traits 	access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::iterator 		point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef point_const_iterator 			const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef point_iterator 				iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::reverse_iterator 	reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::node_const_iterator node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::node_iterator 	node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp:      typedef typename traits_type::node_update 	node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef binomial_heap_base<Value_Type, Cmp_Fn, _Alloc>
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::node_pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::node_const_pointer 	node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef PB_DS_RC_C_DEC 				rc_t;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::point_const_iterator 	point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::point_iterator 	point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::const_iterator 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::iterator 		iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::cmp_fn 		cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp:      typedef typename base_type::allocator_type 	allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef _Alloc 					 allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename allocator_type::size_type 	 size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef _Node 					 node;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename _Alloc::template rebind<node>	 __rebind_n;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename __rebind_n::other::pointer      	 node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename _Alloc::template rebind<node_pointer>  __rebind_np;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename __rebind_np::other::pointer 	 entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef typename __rebind_np::other::const_pointer entry_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef node_pointer 				 entry;
/usr/include/c++/4.9/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp:      typedef entry_const_pointer 			 const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/cond_dealtor.hpp:	typedef typename _Alloc::template rebind<Entry>	__rebind_e;
/usr/include/c++/4.9/ext/pb_ds/detail/cond_dealtor.hpp:	typedef typename __rebind_e::other 		entry_allocator;
/usr/include/c++/4.9/ext/pb_ds/detail/cond_dealtor.hpp:	typedef typename entry_allocator::pointer 	entry_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef PB_DS_S_TREE_BASE 		       	 base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef base_type debug_base;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::node_pointer 		 node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef splay_tree_tag 				 container_category;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef _Alloc 					 allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename _Alloc::size_type 		 size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename _Alloc::difference_type 		 difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef Cmp_Fn 					 cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::key_type 		 key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::key_pointer 		 key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::key_const_pointer 	 key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::key_reference 	 key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::key_const_reference 	 key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::mapped_type 	 	 mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::mapped_pointer 	 mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::mapped_reference 	 mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::value_type 		 value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::pointer 		 pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::const_pointer 	 const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::reference 	 	 reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::const_reference 	 const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::point_iterator 	 point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::const_iterator 	 point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::iterator 		 iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::const_iterator 	 const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::reverse_iterator 	 reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp:      typedef typename base_type::node_update 		 node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef Value_Type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef Metadata metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef Value_Type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef null_type metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/splay_tree_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef typename _Alloc::template rebind<Node>::other::pointer node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef trivial_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef trivial_iterator_difference_type difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef typename Node::value_type value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename node_allocator::value_type     	node;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename node_allocator::pointer 		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename node_allocator::const_pointer	node_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef Node_Metadata node_metadata;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef std::pair< node_pointer, node_pointer> 	node_pointer_pair;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef cond_dealtor< node, _Alloc> 		cond_dealtor_t;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef integral_constant<int, simple_value> 	no_throw_copies_t;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename _Alloc::template rebind<Value_Type>	__rebind_v;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename _Alloc::size_type 		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename _Alloc::difference_type 	difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef Value_Type 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename __rebind_v::other::pointer 	pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename __rebind_v::other::const_pointer const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename __rebind_v::other::reference	reference;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef typename __rebind_v::other::const_reference const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef left_child_next_sibling_heap_node_point_const_iterator_<node, _Alloc>
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef point_const_iterator 			point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef left_child_next_sibling_heap_const_iterator_<node, _Alloc>
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef const_iterator 				iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef Cmp_Fn 					cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef PB_DS_BASIC_HEAP_CIT_BASE 	      	base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::node_pointer		node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef std::forward_iterator_tag 		iterator_category;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename _Alloc::difference_type 		difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::value_type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::pointer 		pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::const_pointer 	const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::reference 		reference;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp:      typedef typename base_type::const_reference 	const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef left_child_next_sibling_heap_node_<_Value, _Metadata, _Alloc> this_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef _Value 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef typename _Alloc::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef _Metadata 			metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef typename _Alloc::template rebind<this_type>::other::pointer node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef left_child_next_sibling_heap_node_<_Value, null_type, _Alloc> this_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef _Value 				value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef typename _Alloc::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp:      typedef typename _Alloc::template rebind<this_type>::other::pointer node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef PB_DS_RB_TREE_BASE 		       	 base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::node_pointer 		 node_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef rb_tree_tag 				 container_category;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef Cmp_Fn 					 cmp_fn;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef _Alloc 					 allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename _Alloc::size_type 		 size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename _Alloc::difference_type 		 difference_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::key_type 		 key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::key_pointer 		 key_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::key_const_pointer 	 key_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::key_reference 	 key_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::key_const_reference 	 key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::mapped_type 		 mapped_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::mapped_pointer 	 mapped_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::mapped_reference 	 mapped_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::mapped_const_reference mapped_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::value_type 		 value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::pointer 		 pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::const_pointer 	 const_pointer;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::reference 		 reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::const_reference 	 const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::point_iterator 	 point_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::const_iterator 	 point_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::iterator 		 iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::const_iterator 	 const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::reverse_iterator 	 reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp:      typedef typename base_type::node_update 		 node_update;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef Value_Type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef Metadata 			metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef Value_Type 		value_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef null_type 	metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/rb_tree_map_/node.hpp:      typedef
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef branch_policy<Node_CItr, Node_Itr, _Alloc> base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef _ATraits 				access_traits;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef _Alloc 					allocator_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename allocator_type::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef null_type 				metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef Node_CItr 				node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef Node_Itr 					node_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename node_const_iterator::value_type 	const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename node_iterator::value_type 	iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename base_type::key_type 		key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename base_type::key_const_reference 	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef typename access_traits::const_iterator 	e_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp:      typedef std::pair<e_const_iterator, e_const_iterator> prefix_range_t;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:	typedef typename Node_Update::metadata_type 	type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:	typedef null_type 				type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp:      typedef typename trie_metadata_helper<__node_u, null_update>::type type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp:    typedef std::size_t 		metadata_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef std::size_t 		       		size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef std::string 			       	key_type;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef typename _Alloc::template rebind<key_type>	__rebind_k;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef typename __rebind_k::other::const_reference	key_const_reference;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef std::string::const_iterator 		const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp:    typedef char 				       	e_type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_trace_base.hpp:      typedef PB_DS_TRACE_BASE 			base_type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_trace_base.hpp:      typedef Node_CItr 		node_const_iterator;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_trace_base.hpp:      typedef typename _Alloc::size_type 	size_type;
/usr/include/c++/4.9/ext/pb_ds/detail/tree_trace_base.hpp:      typedef type_to_type<typename node_const_iterator::metadata_type>
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef lu_map<Key, Mapped, at0t, _Alloc, at1t>	type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef lu_set<Key, null_type, at0t, _Alloc, at1t> type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef pat_trie_map<Key, Mapped, at1t, _Alloc> 		type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef pat_trie_set<Key, null_type, at1t, _Alloc> type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef rb_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef rb_tree_set<Key, null_type, at0t, at1t, _Alloc> type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef splay_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef splay_tree_set<Key, null_type, at0t, at1t, _Alloc> type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef ov_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef ov_tree_set<Key, null_type, at0t, at1t, _Alloc> type;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at2::type			    	at2t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at3::type				at3t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at4::type			    	at4t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef cc_ht_map<Key, Mapped, at0t, at1t, _Alloc, 
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at2::type			    	at2t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at3::type				at3t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at4::type			    	at4t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef cc_ht_set<Key, null_type, at0t, at1t, _Alloc,
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at2::type			    	at2t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at3::type				at3t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at4::type			    	at4t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 5> 	at5;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at5::type			    	at5t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef gp_ht_map<Key, Mapped, at0t, at1t, _Alloc, 
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at0::type			    	at0t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at1::type			    	at1t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at2::type			    	at2t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at3::type				at3t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at4::type			    	at4t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 5> 	at5;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef typename at5::type			    	at5t;
/usr/include/c++/4.9/ext/pb_ds/detail/container_base_dispatch.hpp:      typedef gp_ht_set<Key, null_type, at0t, at1t, _Alloc,
/usr/include/c++/4.9/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:	typedef pairing_heap<_VTp, Cmp_Fn, _Alloc> 		type;
/usr/include/c++/4.9/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:	typedef binomial_heap<_VTp, Cmp_Fn, _Alloc> 		type;
/usr/include/c++/4.9/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:	typedef rc_binomial_heap<_VTp, Cmp_Fn, _Alloc>	       	type;
/usr/include/c++/4.9/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:	typedef binary_heap<_VTp, Cmp_Fn, _Alloc> 		type;
/usr/include/c++/4.9/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:	typedef thin_heap<_VTp, Cmp_Fn, _Alloc> 		type;
/usr/include/c++/4.9/ext/mt_allocator.h:  typedef void (*__destroy_handler)(void*);
/usr/include/c++/4.9/ext/mt_allocator.h:    typedef unsigned short int _Binmap_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _PoolTp<_Thread> 		pool_type;
/usr/include/c++/4.9/ext/mt_allocator.h:        { typedef __common_pool_policy<_PoolTp1, _Thread1> other; };
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp 			value_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _PoolTp<_Thread> 		pool_type;
/usr/include/c++/4.9/ext/mt_allocator.h:	typedef typename pool_type::_Block_record _Block_record;
/usr/include/c++/4.9/ext/mt_allocator.h:	typedef typename __pool_base::_Tune _Tune;
/usr/include/c++/4.9/ext/mt_allocator.h:        { typedef __per_type_pool_policy<_Tp1, _PoolTp1, _Thread1> other; };
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef size_t                    size_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef ptrdiff_t                 difference_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp*                      pointer;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef const _Tp*                const_pointer;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp&                      reference;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef const _Tp&                const_reference;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp                       value_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef size_t                    	size_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef ptrdiff_t                 	difference_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp*                      	pointer;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef const _Tp*                	const_pointer;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp&                      	reference;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef const _Tp&                	const_reference;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Tp                       	value_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef _Poolp      			__policy_type;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef typename _Poolp::pool_type	__pool_type;
/usr/include/c++/4.9/ext/mt_allocator.h:	  typedef typename _Poolp1::template _M_rebind<_Tp1>::other pol_type;
/usr/include/c++/4.9/ext/mt_allocator.h:	  typedef __mt_alloc<_Tp1, pol_type> other;
/usr/include/c++/4.9/ext/mt_allocator.h:      typedef typename __pool_type::_Bin_record _Bin_record;
/usr/include/c++/4.9/ext/mt_allocator.h:	  typedef typename __pool_type::_Block_record _Block_record;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef _Alloc allocator_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef std::allocator_traits<_Alloc>           _Base_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Base_type::value_type         value_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Base_type::pointer            pointer;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Base_type::const_pointer      const_pointer;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Base_type::size_type          size_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Base_type::difference_type    difference_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef value_type&                             reference;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef const value_type&                       const_reference;
/usr/include/c++/4.9/ext/alloc_traits.h:      { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::pointer                pointer;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::const_pointer          const_pointer;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::value_type             value_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::reference              reference;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::const_reference        const_reference;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::size_type              size_type;
/usr/include/c++/4.9/ext/alloc_traits.h:    typedef typename _Alloc::difference_type        difference_type;
/usr/include/c++/4.9/ext/alloc_traits.h:      { typedef typename _Alloc::template rebind<_Tp>::other other; };
/usr/include/c++/4.9/ext/pointer.h: * the allocator::pointer and allocator::const_pointer typedefs.
/usr/include/c++/4.9/ext/pointer.h:   *    3) An element_type typedef to define the type this points to.
/usr/include/c++/4.9/ext/pointer.h:      typedef _Tp element_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef _Tp element_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef __gnu_cxx::__conditional_type<
/usr/include/c++/4.9/ext/pointer.h:      typedef unsigned long _UIntPtrType;
/usr/include/c++/4.9/ext/pointer.h:      typedef const _Tp element_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef __gnu_cxx::__conditional_type<
/usr/include/c++/4.9/ext/pointer.h:      typedef unsigned long _UIntPtrType;
/usr/include/c++/4.9/ext/pointer.h:    { typedef _Tp& reference; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef _Invalid_type& reference; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef const _Invalid_type& reference; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef volatile _Invalid_type&  reference; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef const volatile _Invalid_type&  reference; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef _Tp type; };
/usr/include/c++/4.9/ext/pointer.h:    { typedef _Tp type; };
/usr/include/c++/4.9/ext/pointer.h:   * the containers when specified as the pointer typedef of the
/usr/include/c++/4.9/ext/pointer.h:   * writers to 'assume' Allocator::pointer is a typedef for a normal
/usr/include/c++/4.9/ext/pointer.h:   * Allocator::pointer typedef appropriately for pointer types.  2)
/usr/include/c++/4.9/ext/pointer.h:      typedef typename _Storage_policy::element_type element_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef std::random_access_iterator_tag                iterator_category;
/usr/include/c++/4.9/ext/pointer.h:      typedef typename _Unqualified_type<element_type>::type value_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef std::ptrdiff_t                                 difference_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef _Pointer_adapter                               pointer;
/usr/include/c++/4.9/ext/pointer.h:      typedef typename _Reference_type<element_type>::reference  reference;
/usr/include/c++/4.9/ext/pointer.h:      typedef element_type*(_Pointer_adapter::*__unspecified_bool_type)() const;
/usr/include/c++/4.9/ext/pointer.h:      typedef __gnu_cxx::_Pointer_adapter<_Storage_policy>         pointer;
/usr/include/c++/4.9/ext/pointer.h:      typedef typename pointer::element_type            element_type;
/usr/include/c++/4.9/ext/pointer.h:      typedef typename pointer::difference_type         difference_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp* pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp& reference;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef const _Tp& const_reference;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef size_t size_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef pointer iterator;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _Tp::value_type value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _Tp::difference_type difference_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename __mv_iter_traits<_ForwardIterator>::difference_type
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename std::pair<_Tp, _Tp> _Block_pair;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _Functor::argument_type argument_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _Functor::result_type result_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename std::pair<_Tp, _Tp> _Block_pair;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename __detail::__mini_vector<_Block_pair> _BPVector;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _BPVector::difference_type _Counter_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _BPVector::size_type _Index_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef _Tp pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:    typedef size_t* 				value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:    typedef __detail::__mini_vector<value_type> vector_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:    typedef vector_type::iterator 		iterator;
/usr/include/c++/4.9/ext/bitmap_allocator.h:    typedef __mutex				__mutex_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef void*       pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef const void* const_pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef void  value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	  typedef bitmap_allocator<_Tp1> other;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef size_t    		size_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef ptrdiff_t 		difference_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef _Tp*        		pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef const _Tp*  		const_pointer;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef _Tp&        		reference;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef const _Tp&  		const_reference;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef _Tp         		value_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef free_list::__mutex_type 	__mutex_type;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	  typedef bitmap_allocator<_Tp1> other;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef typename std::pair<_Alloc_block*, _Alloc_block*> _Block_pair;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef typename __detail::__mini_vector<_Block_pair> _BPVector;
/usr/include/c++/4.9/ext/bitmap_allocator.h:      typedef typename _BPVector::iterator _BPiter;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename __detail::_Ffit_finder<_Alloc_block*> _FFF;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	    typedef typename __detail::_Ffit_finder<_Alloc_block*> _FFF;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _BPVector::iterator _Iterator;
/usr/include/c++/4.9/ext/bitmap_allocator.h:	typedef typename _BPVector::difference_type _Difference_type;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef size_t     size_type;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef ptrdiff_t  difference_type;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef _Tp*       pointer;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef const _Tp* const_pointer;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef _Tp&       reference;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef const _Tp& const_reference;
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef _Tp        value_type;
/usr/include/c++/4.9/ext/malloc_allocator.h:        { typedef malloc_allocator<_Tp1> other; };
/usr/include/c++/4.9/ext/malloc_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/functional:      typedef _Result result_type;
/usr/include/c++/4.9/ext/functional:      typedef _Argument argument_type;
/usr/include/c++/4.9/ext/functional:      typedef  _Result  result_type;
/usr/include/c++/4.9/ext/functional:      typedef  _Arg1   first_argument_type;
/usr/include/c++/4.9/ext/functional:      typedef  _Arg2   second_argument_type;
/usr/include/c++/4.9/ext/functional:      typedef  _Result result_type;
/usr/include/c++/4.9/ext/hash_set:      typedef hashtable<_Value, _Value, _HashFcn, _Identity<_Value>,
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::pointer pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::const_pointer const_pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::reference reference;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::const_reference const_reference;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::const_iterator iterator;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/ext/hash_set:      typedef hashtable<_Value, _Value, _HashFcn, _Identity<_Value>,
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::pointer pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::const_pointer const_pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::reference reference;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Alloc::const_reference const_reference;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::const_iterator iterator;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/ext/hash_set:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/ext/hash_set:      typedef __gnu_cxx::hash_set<_Value, _HashFcn, _EqualKey, _Alloc>
/usr/include/c++/4.9/ext/hash_set:      typedef _Container          container_type;
/usr/include/c++/4.9/ext/hash_set:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/hash_set:      typedef void                value_type;
/usr/include/c++/4.9/ext/hash_set:      typedef void                difference_type;
/usr/include/c++/4.9/ext/hash_set:      typedef void                pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef void                reference;
/usr/include/c++/4.9/ext/hash_set:      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn, _EqualKey, _Alloc>
/usr/include/c++/4.9/ext/hash_set:      typedef _Container          container_type;
/usr/include/c++/4.9/ext/hash_set:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/ext/hash_set:      typedef void                value_type;
/usr/include/c++/4.9/ext/hash_set:      typedef void                difference_type;
/usr/include/c++/4.9/ext/hash_set:      typedef void                pointer;
/usr/include/c++/4.9/ext/hash_set:      typedef void                reference;
/usr/include/c++/4.9/ext/ropeimpl.h:      typedef basic_ostream<_CharT,_Traits> _Insert_ostream;
/usr/include/c++/4.9/ext/ropeimpl.h:      typedef typename _Rope_iterator::value_type _CharT;
/usr/include/c++/4.9/ext/ropeimpl.h:      typedef typename _Rope_iterator::_allocator_type _Alloc;
/usr/include/c++/4.9/ext/stdio_sync_filebuf.h:      typedef _CharT					char_type;
/usr/include/c++/4.9/ext/stdio_sync_filebuf.h:      typedef _Traits					traits_type;
/usr/include/c++/4.9/ext/stdio_sync_filebuf.h:      typedef typename traits_type::int_type		int_type;
/usr/include/c++/4.9/ext/stdio_sync_filebuf.h:      typedef typename traits_type::pos_type		pos_type;
/usr/include/c++/4.9/ext/stdio_sync_filebuf.h:      typedef typename traits_type::off_type		off_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef size_t     	size_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef ptrdiff_t  	difference_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp*       	pointer;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef const _Tp* 	const_pointer;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp&       	reference;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef const _Tp&	const_reference;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp        	value_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef size_t     	size_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef ptrdiff_t  	difference_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp*       	pointer;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef const _Tp* 	const_pointer;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp&       	reference;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef const _Tp& 	const_reference;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Tp        	value_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef _Array		array_type;
/usr/include/c++/4.9/ext/array_allocator.h:      typedef std::true_type propagate_on_container_move_assignment;
/usr/include/c++/4.9/ext/array_allocator.h:	  typedef array_allocator<_Tp1, _Array1> other _GLIBCXX_DEPRECATED;
/usr/include/c++/4.9/ext/codecvt_specializations.h:    typedef iconv_t	descriptor_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:    // 21.1.2 traits typedefs
/usr/include/c++/4.9/ext/codecvt_specializations.h:    // typedef STATE_T state_type
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef encoding_state				state_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef typename std::fpos<state_type>		pos_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef codecvt_base::result			result;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef _InternT 					intern_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef _ExternT 					extern_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef __gnu_cxx::encoding_state 		state_type;
/usr/include/c++/4.9/ext/codecvt_specializations.h:      typedef state_type::descriptor_type 		descriptor_type;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef __alloc_traits<_Alloc> _Traits;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::size_type       	size_type;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::difference_type	difference_type;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::pointer       	pointer;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::const_pointer    const_pointer;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::reference       	reference;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::const_reference  const_reference;
/usr/include/c++/4.9/ext/debug_allocator.h:      typedef typename _Traits::value_type       value_type;
/usr/include/c++/4.9/ext/debug_allocator.h:	  typedef typename _Traits::template rebind<_Up>::other __other;
/usr/include/c++/4.9/ext/debug_allocator.h:	  typedef debug_allocator<__other> other;
/usr/include/c++/4.9/ext/debug_allocator.h:	  typedef void* __type;
/usr/include/c++/4.9/ext/random:      typedef _UIntType result_type;
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 607, 2,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 607, 2,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 1279, 7,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 1279, 7,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 2281, 12,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 2281, 12,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 4253, 17,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 4253, 17,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 11213, 68,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 11213, 68,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 19937, 122,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 19937, 122,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 44497, 330,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 44497, 330,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 86243, 366,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 86243, 366,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 132049, 110,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 132049, 110,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint32_t, 216091, 627,
/usr/include/c++/4.9/ext/random:  typedef simd_fast_mersenne_twister_engine<uint64_t, 216091, 627,
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef beta_distribution<_RealType> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef std::array<_RealType, _Dimen> result_type;
/usr/include/c++/4.9/ext/random:	typedef normal_mv_distribution<_Dimen, _RealType> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef rice_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef nakagami_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef pareto_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef k_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef arcsine_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:	typedef hoyt_distribution<result_type> distribution_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:      typedef _RealType result_type;
/usr/include/c++/4.9/ext/random:      typedef _UIntType  result_type;
/usr/include/c++/4.9/ext/random:	typedef hypergeometric_distribution<_UIntType> distribution_type;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:      typedef _Base_bitset<_GLIBCXX_BITSET_WORDS(_Nb)> _Base;
/usr/include/c++/4.9/bitset:      typedef unsigned long _WordT;
/usr/include/c++/4.9/bitset:	typedef _Sanitize<_Nb % _GLIBCXX_BITSET_BITS_PER_WORD> __sanitize_type;
/usr/include/c++/4.9/bitset:      typedef typename _Traits::char_type          char_type;
/usr/include/c++/4.9/bitset:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/bitset:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/chrono:      typedef __static_gcd<_Period1::num, _Period2::num> __gcd_num;
/usr/include/c++/4.9/chrono:      typedef __static_gcd<_Period1::den, _Period2::den> __gcd_den;
/usr/include/c++/4.9/chrono:      typedef typename _CT::type __cr;
/usr/include/c++/4.9/chrono:      typedef ratio<__gcd_num::value,
/usr/include/c++/4.9/chrono:      typedef __success_type<chrono::duration<__cr, __r>> type;
/usr/include/c++/4.9/chrono:    { typedef __failure_type type; };
/usr/include/c++/4.9/chrono:      typedef __success_type<chrono::time_point<_Clock, typename _CT::type>>
/usr/include/c++/4.9/chrono:    { typedef __failure_type type; };
/usr/include/c++/4.9/chrono:	    typedef typename _ToDur::rep			__to_rep;
/usr/include/c++/4.9/chrono:	    typedef typename _ToDur::rep			__to_rep;
/usr/include/c++/4.9/chrono:	    typedef typename _ToDur::rep			__to_rep;
/usr/include/c++/4.9/chrono:	    typedef typename _ToDur::rep			__to_rep;
/usr/include/c++/4.9/chrono:	typedef typename _ToDur::period				__to_period;
/usr/include/c++/4.9/chrono:	typedef typename _ToDur::rep				__to_rep;
/usr/include/c++/4.9/chrono:	typedef ratio_divide<_Period, __to_period> 		__cf;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__to_rep, _Rep, intmax_t>::type
/usr/include/c++/4.9/chrono:	typedef  __duration_cast_impl<_ToDur, __cf, __cr,
/usr/include/c++/4.9/chrono:	typedef _Rep						rep;
/usr/include/c++/4.9/chrono:	typedef _Period 					period;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__cd;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__cd;
/usr/include/c++/4.9/chrono:      { typedef typename common_type<_Rep1, _Rep2>::type type; };
/usr/include/c++/4.9/chrono:	typedef duration<typename common_type<_Rep1, _Rep2>::type, _Period>
/usr/include/c++/4.9/chrono:	typedef duration<typename common_type<_Rep1, _Rep2>::type, _Period>
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__cd;
/usr/include/c++/4.9/chrono:	typedef duration<typename common_type<_Rep1, _Rep2>::type, _Period>
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__cd;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__ct;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,__dur2>::type	__ct;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t, nano> 	    nanoseconds;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t, micro> 	    microseconds;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t, milli> 	    milliseconds;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t> 		    seconds;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t, ratio< 60>>   minutes;
/usr/include/c++/4.9/chrono:    typedef duration<int64_t, ratio<3600>>  hours;
/usr/include/c++/4.9/chrono:	typedef _Clock			  			clock;
/usr/include/c++/4.9/chrono:	typedef _Dur		  				duration;
/usr/include/c++/4.9/chrono:	typedef typename duration::rep	  			rep;
/usr/include/c++/4.9/chrono:	typedef typename duration::period			period;
/usr/include/c++/4.9/chrono:	typedef time_point<_Clock, _ToDur> 			__time_point;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<_Dur1,__dur2>::type	__ct;
/usr/include/c++/4.9/chrono:	typedef time_point<_Clock, __ct> 			__time_point;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep1, _Period1>			__dur1;
/usr/include/c++/4.9/chrono:	typedef typename common_type<__dur1,_Dur2>::type	__ct;
/usr/include/c++/4.9/chrono:	typedef time_point<_Clock, __ct> 			__time_point;
/usr/include/c++/4.9/chrono:	typedef duration<_Rep2, _Period2>			__dur2;
/usr/include/c++/4.9/chrono:	typedef typename common_type<_Dur1,__dur2>::type	__ct;
/usr/include/c++/4.9/chrono:	typedef time_point<_Clock, __ct> 			__time_point;
/usr/include/c++/4.9/chrono:      typedef chrono::nanoseconds     				duration;
/usr/include/c++/4.9/chrono:      typedef duration::rep    					rep;
/usr/include/c++/4.9/chrono:      typedef duration::period 					period;
/usr/include/c++/4.9/chrono:      typedef chrono::time_point<system_clock, duration> 	time_point;
/usr/include/c++/4.9/chrono:	typedef chrono::time_point<system_clock, seconds>	__from;
/usr/include/c++/4.9/chrono:      typedef chrono::nanoseconds 				duration;
/usr/include/c++/4.9/chrono:      typedef duration::rep	  				rep;
/usr/include/c++/4.9/chrono:      typedef duration::period	  				period;
/usr/include/c++/4.9/chrono:      typedef chrono::time_point<steady_clock, duration> 	time_point;
/usr/include/c++/4.9/tr2/type_traits:      typedef std::true_type					empty;
/usr/include/c++/4.9/tr2/type_traits:      typedef std::false_type					empty;
/usr/include/c++/4.9/tr2/type_traits:	typedef _First						type;
/usr/include/c++/4.9/tr2/type_traits:	typedef __reflection_typelist<_Rest...>			type;
/usr/include/c++/4.9/tr2/type_traits:      typedef __reflection_typelist<__bases(_Tp)...>		type;
/usr/include/c++/4.9/tr2/type_traits:      typedef __reflection_typelist<__direct_bases(_Tp)...>	type;
/usr/include/c++/4.9/tr2/dynamic_bitset.tcc:      typedef typename _Traits::char_type          char_type;
/usr/include/c++/4.9/tr2/dynamic_bitset.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr2/dynamic_bitset.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr2/bool_set.tcc:	  typedef __numpunct_cache<_CharT>  __cache_type;
/usr/include/c++/4.9/tr2/bool_set.tcc:	  typedef __numpunct_cache<_CharT> __cache_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:  typedef T type;
/usr/include/c++/4.9/tr2/dynamic_bitset:  typedef unsigned char type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef _WordT block_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef size_t size_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef __dynamic_bitset_base<_WordT, _Alloc> _Base;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef _WordT block_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef _Alloc allocator_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef size_t size_type;
/usr/include/c++/4.9/tr2/dynamic_bitset:      typedef bool const_reference;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 10>::__value, 1> kibi;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 20>::__value, 1> mebi;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 30>::__value, 1> gibi;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 40>::__value, 1> tebi;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 50>::__value, 1> pebi;
/usr/include/c++/4.9/tr2/ratio:  typedef ratio<__safe_lshift<1, 60>::__value, 1> exbi;
/usr/include/c++/4.9/tr2/ratio:  //typedef ratio<__safe_lshift<1, 70>::__value, 1> zebi;
/usr/include/c++/4.9/tr2/ratio:  //typedef ratio<__safe_lshift<1, 80>::__value, 1> yobi;
/usr/include/c++/4.9/exception:  typedef void (*terminate_handler) ();
/usr/include/c++/4.9/exception:  typedef void (*unexpected_handler) ();
/usr/include/c++/4.9/thread:    typedef __gthread_t			native_handle_type;
/usr/include/c++/4.9/thread:    typedef shared_ptr<_Impl_base>	__shared_base_type;
/usr/include/c++/4.9/functional:    { typedef typename _Functor::result_type result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:    { typedef _Res result_type; };
/usr/include/c++/4.9/functional:      typedef typename _Tp::argument_type argument_type;
/usr/include/c++/4.9/functional:      typedef typename _Tp::first_argument_type first_argument_type;
/usr/include/c++/4.9/functional:      typedef typename _Tp::second_argument_type second_argument_type;
/usr/include/c++/4.9/functional:      typedef typename _Tp::argument_type argument_type;
/usr/include/c++/4.9/functional:      typedef typename _Tp::first_argument_type first_argument_type;
/usr/include/c++/4.9/functional:      typedef typename _Tp::second_argument_type second_argument_type;
/usr/include/c++/4.9/functional:      typedef _Tp type;
/usr/include/c++/4.9/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...);
/usr/include/c++/4.9/functional:      typedef _Res result_type;
/usr/include/c++/4.9/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) const;
/usr/include/c++/4.9/functional:      typedef _Res result_type;
/usr/include/c++/4.9/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) volatile;
/usr/include/c++/4.9/functional:      typedef _Res result_type;
/usr/include/c++/4.9/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) const volatile;
/usr/include/c++/4.9/functional:      typedef _Res result_type;
/usr/include/c++/4.9/functional:      typedef const _Tp& type;
/usr/include/c++/4.9/functional:      typedef _Tp& type;
/usr/include/c++/4.9/functional:      typedef _No_tuple_element type;
/usr/include/c++/4.9/functional:      typedef _Tp& result_type;
/usr/include/c++/4.9/functional:	  typedef typename _Build_index_tuple<sizeof...(_Args)>::__type
/usr/include/c++/4.9/functional:	  typedef typename _Safe_tuple_element<(is_placeholder<_Arg>::value
/usr/include/c++/4.9/functional:	  typedef typename add_rvalue_reference<__base_type>::type type;
/usr/include/c++/4.9/functional:	  typedef typename add_lvalue_reference<_CVArg>::type type;
/usr/include/c++/4.9/functional:      typedef _Tp type;
/usr/include/c++/4.9/functional:      typedef _Mem_fn<_Tp _Class::*> type;
/usr/include/c++/4.9/functional:      typedef void type;
/usr/include/c++/4.9/functional:      typedef _Bind __self_type;
/usr/include/c++/4.9/functional:      typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type
/usr/include/c++/4.9/functional:      typedef _Bind_result __self_type;
/usr/include/c++/4.9/functional:      typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type
/usr/include/c++/4.9/functional:      typedef _Result result_type;
/usr/include/c++/4.9/functional:      typedef _Maybe_wrap_member_pointer<typename decay<_Func>::type>
/usr/include/c++/4.9/functional:      typedef typename __maybe_type::type __func_type;
/usr/include/c++/4.9/functional:      typedef _Bind<__func_type(typename decay<_BoundArgs>::type...)> type;
/usr/include/c++/4.9/functional:      typedef _Bind_helper<false, _Func, _BoundArgs...> __helper_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::__maybe_type __maybe_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::type __result_type;
/usr/include/c++/4.9/functional:      typedef _Maybe_wrap_member_pointer<typename decay<_Func>::type>
/usr/include/c++/4.9/functional:      typedef typename __maybe_type::type __functor_type;
/usr/include/c++/4.9/functional:      typedef _Bind_result<_Result,
/usr/include/c++/4.9/functional:      typedef _Bindres_helper<_Result, _Func, _BoundArgs...> __helper_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::__maybe_type __maybe_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::type __result_type;
/usr/include/c++/4.9/functional:      typedef typename result_of<_Callable(_Args...)>::type result_type;
/usr/include/c++/4.9/functional:        typedef typename _Build_index_tuple<sizeof...(_Args)>::__type _Indices;
/usr/include/c++/4.9/functional:      typedef _Maybe_wrap_member_pointer<typename decay<_Func>::type>
/usr/include/c++/4.9/functional:      typedef typename __maybe_type::type __func_type;
/usr/include/c++/4.9/functional:      typedef _Bind_simple<__func_type(typename decay<_BoundArgs>::type...)>
/usr/include/c++/4.9/functional:      typedef _Bind_simple_helper<_Callable, _Args...> __helper_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::__maybe_type __maybe_type;
/usr/include/c++/4.9/functional:      typedef typename __helper_type::__type __result_type;
/usr/include/c++/4.9/functional:	typedef integral_constant<bool, __stored_locally> _Local_storage;
/usr/include/c++/4.9/functional:	typedef _Function_base::_Base_manager<_Functor*> _Base;
/usr/include/c++/4.9/functional:    typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
/usr/include/c++/4.9/functional:      typedef _Function_base::_Base_manager<_Functor> _Base;
/usr/include/c++/4.9/functional:      typedef _Function_base::_Base_manager<_Functor> _Base;
/usr/include/c++/4.9/functional:      typedef _Function_base::_Ref_manager<_Functor> _Base;
/usr/include/c++/4.9/functional:      typedef _Function_base::_Ref_manager<_Functor> _Base;
/usr/include/c++/4.9/functional:      typedef _Function_handler<void(_ArgTypes...), _Member _Class::*>
/usr/include/c++/4.9/functional:      typedef _Member _Class::* _Functor;
/usr/include/c++/4.9/functional:      typedef _Simple_type_wrapper<_Functor> _Wrapper;
/usr/include/c++/4.9/functional:      typedef _Function_base::_Base_manager<_Wrapper> _Base;
/usr/include/c++/4.9/functional:      typedef _Res _Signature_type(_ArgTypes...);
/usr/include/c++/4.9/functional:      typedef _Res result_type;
/usr/include/c++/4.9/functional:      typedef _Res (*_Invoker_type)(const _Any_data&, _ArgTypes...);
/usr/include/c++/4.9/functional:	typedef _Function_handler<_Signature_type, _Functor> _My_handler;
/usr/include/c++/4.9/ostream:      typedef _CharT			 		char_type;
/usr/include/c++/4.9/ostream:      typedef typename _Traits::int_type 		int_type;
/usr/include/c++/4.9/ostream:      typedef typename _Traits::pos_type 		pos_type;
/usr/include/c++/4.9/ostream:      typedef typename _Traits::off_type 		off_type;
/usr/include/c++/4.9/ostream:      typedef _Traits			 		traits_type;
/usr/include/c++/4.9/ostream:      typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
/usr/include/c++/4.9/ostream:      typedef basic_ios<_CharT, _Traits>		__ios_type;
/usr/include/c++/4.9/ostream:      typedef basic_ostream<_CharT, _Traits>		__ostream_type;
/usr/include/c++/4.9/ostream:      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
/usr/include/c++/4.9/ostream:      typedef ctype<_CharT>	      			__ctype_type;
/usr/include/c++/4.9/scoped_allocator:      typedef scoped_allocator_adaptor<_Outer> __type;
/usr/include/c++/4.9/scoped_allocator:      typedef scoped_allocator_adaptor<_InnerHead, _InnerTail...> __type;
/usr/include/c++/4.9/scoped_allocator:      typedef allocator_traits<_OuterAlloc> __traits;
/usr/include/c++/4.9/scoped_allocator:      typedef __inner_type_impl<_OuterAlloc, _InnerAllocs...> __inner_type;
/usr/include/c++/4.9/scoped_allocator:	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;
/usr/include/c++/4.9/scoped_allocator:      typedef __uses_alloc1<typename __inner_type::__type> __uses_alloc1_;
/usr/include/c++/4.9/scoped_allocator:      typedef __uses_alloc2<typename __inner_type::__type> __uses_alloc2_;
/usr/include/c++/4.9/scoped_allocator:	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;
/usr/include/c++/4.9/scoped_allocator:	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;
/usr/include/c++/4.9/scoped_allocator:          typedef allocator_traits<_Alloc> __a_traits;
/usr/include/c++/4.9/scoped_allocator:      typedef _OuterAlloc                       outer_allocator_type;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __inner_type::__type     inner_allocator_type;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::value_type             value_type;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::size_type              size_type;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::difference_type        difference_type;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::pointer                pointer;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::const_pointer          const_pointer;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::void_pointer           void_pointer;
/usr/include/c++/4.9/scoped_allocator:      typedef typename __traits::const_void_pointer     const_void_pointer;
/usr/include/c++/4.9/scoped_allocator:      typedef typename conditional<
/usr/include/c++/4.9/scoped_allocator:      typedef typename conditional<
/usr/include/c++/4.9/scoped_allocator:      typedef typename conditional<
/usr/include/c++/4.9/scoped_allocator:          typedef scoped_allocator_adaptor<
/usr/include/c++/4.9/scoped_allocator:	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;
/usr/include/c++/4.9/scoped_allocator:	  typedef __outermost_alloc_traits<scoped_allocator_adaptor> _O_traits;
/usr/include/c++/4.9/scoped_allocator:        typedef typename _Build_index_tuple<sizeof...(_InnerAllocs)>::__type
/usr/include/c++/4.9/scoped_allocator:	  typedef std::tuple<allocator_arg_t, inner_allocator_type&> _Tuple;
/usr/include/c++/4.9/scoped_allocator:	  typedef std::tuple<inner_allocator_type&> _Tuple;
/usr/include/c++/4.9/tr1/type_traits:    typedef char __one;
/usr/include/c++/4.9/tr1/type_traits:    typedef struct { char __arr[2]; } __two;
/usr/include/c++/4.9/tr1/type_traits:      typedef _Tp                           value_type;
/usr/include/c++/4.9/tr1/type_traits:      typedef integral_constant<_Tp, __v>   type;
/usr/include/c++/4.9/tr1/type_traits:  /// typedef for true_type
/usr/include/c++/4.9/tr1/type_traits:  typedef integral_constant<bool, true>     true_type;
/usr/include/c++/4.9/tr1/type_traits:  /// typedef for false_type
/usr/include/c++/4.9/tr1/type_traits:  typedef integral_constant<bool, false>    false_type;
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:      typedef typename
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp const     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp volatile     type; };
/usr/include/c++/4.9/tr1/type_traits:      typedef typename
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef typename remove_all_extents<_Tp>::type     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef typename remove_all_extents<_Tp>::type     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Up     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef typename remove_reference<_Tp>::type*     type; };
/usr/include/c++/4.9/tr1/type_traits:      typedef typename remove_cv<_Base>::type    _NoCv_Base;
/usr/include/c++/4.9/tr1/type_traits:      typedef typename remove_cv<_Derived>::type _NoCv_Derived;
/usr/include/c++/4.9/tr1/type_traits:      typedef typename remove_reference<_Tp>::type __rr_Tp;
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp&    type; };
/usr/include/c++/4.9/tr1/type_traits:    { typedef _Tp     type; };
/usr/include/c++/4.9/tr1/random.h:    typedef __gnu_cxx::__conditional_type<(sizeof(unsigned) == 4),
/usr/include/c++/4.9/tr1/random.h:	typedef typename remove_reference<_Engine>::type _BEngine;
/usr/include/c++/4.9/tr1/random.h:	typedef typename _BEngine::result_type           _Engine_result_type;
/usr/include/c++/4.9/tr1/random.h:	typedef typename _Distribution::input_type       result_type;
/usr/include/c++/4.9/tr1/random.h:	typedef typename _Engine::result_type      _Engine_result_type;
/usr/include/c++/4.9/tr1/random.h:	typedef typename _Distribution::input_type result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _Engine                                engine_type;
/usr/include/c++/4.9/tr1/random.h:      typedef __detail::_Adaptor<_Engine, _Dist>     engine_value_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _Dist                                  distribution_type;
/usr/include/c++/4.9/tr1/random.h:      typedef typename _Dist::result_type            result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef typename __gnu_cxx::__enable_if<
/usr/include/c++/4.9/tr1/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/tr1/random.h:  typedef linear_congruential<unsigned long, 16807, 0, 2147483647> minstd_rand0;
/usr/include/c++/4.9/tr1/random.h:  typedef linear_congruential<unsigned long, 48271, 0, 2147483647> minstd_rand;
/usr/include/c++/4.9/tr1/random.h:      typedef _UIntType result_type;
/usr/include/c++/4.9/tr1/random.h:  typedef mersenne_twister<
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef typename __gnu_cxx::__add_unsigned<_IntType>::__type _UIntType;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef __detail::_UInt32Type _UInt32Type;
/usr/include/c++/4.9/tr1/random.h:  typedef subtract_with_carry_01<float, 24, 10, 24>   ranlux_base_01;
/usr/include/c++/4.9/tr1/random.h:  typedef subtract_with_carry_01<double, 48, 5, 12> ranlux64_base_01;  
/usr/include/c++/4.9/tr1/random.h:      typedef _UniformRandomNumberGenerator   base_type;
/usr/include/c++/4.9/tr1/random.h:      typedef typename base_type::result_type result_type;
/usr/include/c++/4.9/tr1/random.h:  typedef discard_block<
/usr/include/c++/4.9/tr1/random.h:  typedef discard_block<
/usr/include/c++/4.9/tr1/random.h:  typedef discard_block<
/usr/include/c++/4.9/tr1/random.h:  typedef discard_block<
/usr/include/c++/4.9/tr1/random.h:      typedef _UniformRandomNumberGenerator1   base1_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _UniformRandomNumberGenerator2   base2_type;
/usr/include/c++/4.9/tr1/random.h:      typedef typename base1_type::result_type _Result_type1;
/usr/include/c++/4.9/tr1/random.h:      typedef typename base2_type::result_type _Result_type2;
/usr/include/c++/4.9/tr1/random.h:      typedef typename __gnu_cxx::__conditional_type<(sizeof(_Result_type1)
/usr/include/c++/4.9/tr1/random.h:    typedef unsigned int result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType result_type;
/usr/include/c++/4.9/tr1/random.h:	  typedef typename _UniformRandomNumberGenerator::result_type
/usr/include/c++/4.9/tr1/random.h:	  typedef typename _UniformRandomNumberGenerator::result_type
/usr/include/c++/4.9/tr1/random.h:    typedef int  input_type;
/usr/include/c++/4.9/tr1/random.h:    typedef bool result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType  result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType  result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _IntType  result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType input_type;
/usr/include/c++/4.9/tr1/random.h:      typedef _RealType result_type;
/usr/include/c++/4.9/tr1/utility:    { typedef _Tp1 type; };
/usr/include/c++/4.9/tr1/utility:    { typedef _Tp2 type; };
/usr/include/c++/4.9/tr1/tuple:    { typedef const _Tp& type; };
/usr/include/c++/4.9/tr1/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tr1/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tr1/tuple:    { typedef _Tp& type; };
/usr/include/c++/4.9/tr1/tuple:      typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
/usr/include/c++/4.9/tr1/tuple:      typedef _Tuple_impl<0, _Elements...> _Inherited;
/usr/include/c++/4.9/tr1/tuple:      typedef _Tuple_impl<0, _T1, _T2> _Inherited;
/usr/include/c++/4.9/tr1/tuple:      typedef _Head type;
/usr/include/c++/4.9/tr1/tuple:      typedef tuple<_TElements...> _Tp;
/usr/include/c++/4.9/tr1/tuple:      typedef tuple<_UElements...> _Up;
/usr/include/c++/4.9/tr1/tuple:      typedef tuple<_TElements...> _Tp;
/usr/include/c++/4.9/tr1/tuple:      typedef tuple<_UElements...> _Up;
/usr/include/c++/4.9/tr1/tuple:      typedef _Tp __type;
/usr/include/c++/4.9/tr1/tuple:      typedef _Tp& __type;
/usr/include/c++/4.9/tr1/tuple:      typedef _Tp& __type;
/usr/include/c++/4.9/tr1/tuple:      typedef tuple<typename __strip_reference_wrapper<_Elements>::__type...>
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename std::iterator_traits<_Iterator>::iterator_category _Tag;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _Value                                   value_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::ptrdiff_t                           difference_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::forward_iterator_tag                iterator_category;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _Value                                   value_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef const _Value*                            pointer;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef const _Value&                            reference;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::ptrdiff_t                           difference_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::forward_iterator_tag                iterator_category;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _Value                                   value_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::ptrdiff_t                           difference_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::forward_iterator_tag                iterator_category;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _Value                                   value_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef const _Value*                            pointer;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef const _Value&                            reference;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::ptrdiff_t                           difference_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::forward_iterator_tag                iterator_category;
/usr/include/c++/4.9/tr1/hashtable_policy.h:    typedef std::size_t first_argument_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:    typedef std::size_t second_argument_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:    typedef std::size_t result_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:  // policy class affects which member functions and nested typedefs
/usr/include/c++/4.9/tr1/hashtable_policy.h:  // first part of the pair, the hashtable gets a mapped_type typedef.
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename _Pair::second_type mapped_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef typename _Pair::second_type mapped_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef void* _Hash_code_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:  // typedef and accessor required by TR1.  
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _H1 hasher;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::size_t _Hash_code_type;
/usr/include/c++/4.9/tr1/hashtable_policy.h:  // typedef and accessor required by TR1.
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef _H1 hasher;
/usr/include/c++/4.9/tr1/hashtable_policy.h:      typedef std::size_t _Hash_code_type;
/usr/include/c++/4.9/tr1/unordered_set.h:  // NB: When we get typedef templates these class definitions
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef _Hashtable<_Value, _Value, _Alloc,
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef _Hashtable<_Value, _Value, _Alloc,
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef __unordered_set<_Value, _Hash, _Pred, _Alloc>  _Base;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef __unordered_multiset<_Value, _Hash, _Pred, _Alloc>  _Base;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_set.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/array:      typedef _Tp 	    			      value_type;
/usr/include/c++/4.9/tr1/array:      typedef value_type&                   	      reference;
/usr/include/c++/4.9/tr1/array:      typedef const value_type&             	      const_reference;
/usr/include/c++/4.9/tr1/array:      typedef value_type*          		      iterator;
/usr/include/c++/4.9/tr1/array:      typedef const value_type*			      const_iterator;
/usr/include/c++/4.9/tr1/array:      typedef std::size_t                    	      size_type;
/usr/include/c++/4.9/tr1/array:      typedef std::ptrdiff_t                   	      difference_type;
/usr/include/c++/4.9/tr1/array:      typedef std::reverse_iterator<iterator>	      reverse_iterator;
/usr/include/c++/4.9/tr1/array:      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
/usr/include/c++/4.9/tr1/array:    { typedef _Tp type; };
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:	typedef typename __gnu_cxx::__add_unsigned<typename
/usr/include/c++/4.9/tr1/random.tcc:	typedef typename __gnu_cxx::__add_unsigned<result_type>::__type
/usr/include/c++/4.9/tr1/random.tcc:	typedef typename __gnu_cxx::__conditional_type<(sizeof(__urntype)
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_istream<_CharT, _Traits>  __istream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __istream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/random.tcc:      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
/usr/include/c++/4.9/tr1/random.tcc:      typedef typename __ostream_type::ios_base    __ios_base;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tpx, _Tpy>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Tpn>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_3<_Tpa, _Tpc, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Tpp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_2<_Tp, _Tpp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_3<_Tp, _Tpn, _Tpp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote_4<_Tpa, _Tpb, _Tpc, _Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/cmath:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/complex:      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
/usr/include/c++/4.9/tr1/regex:  typedef unsigned int syntax_option_type;
/usr/include/c++/4.9/tr1/regex:  typedef std::bitset<_S_match_flag_last> match_flag_type;
/usr/include/c++/4.9/tr1/regex:      typedef _Ch_type                     char_type;
/usr/include/c++/4.9/tr1/regex:      typedef std::basic_string<char_type> string_type;
/usr/include/c++/4.9/tr1/regex:      typedef std::locale                  locale_type;
/usr/include/c++/4.9/tr1/regex:      typedef std::ctype_base::mask        char_class_type;
/usr/include/c++/4.9/tr1/regex:      typedef _Ch_type                              value_type;
/usr/include/c++/4.9/tr1/regex:      typedef regex_constants::syntax_option_type flag_type;
/usr/include/c++/4.9/tr1/regex:      typedef typename _Rx_traits::locale_type  locale_type;
/usr/include/c++/4.9/tr1/regex:      typedef typename _Rx_traits::string_type  string_type;
/usr/include/c++/4.9/tr1/regex:  typedef basic_regex<char>    regex;
/usr/include/c++/4.9/tr1/regex:  typedef basic_regex<wchar_t> wregex;
/usr/include/c++/4.9/tr1/regex:      typedef typename iterator_traits<_BiIter>::value_type      value_type;
/usr/include/c++/4.9/tr1/regex:      typedef typename iterator_traits<_BiIter>::difference_type
/usr/include/c++/4.9/tr1/regex:      typedef _BiIter                                              iterator;
/usr/include/c++/4.9/tr1/regex:  typedef sub_match<const char*>             csub_match;
/usr/include/c++/4.9/tr1/regex:  typedef sub_match<string::const_iterator>  ssub_match;
/usr/include/c++/4.9/tr1/regex:  typedef sub_match<const wchar_t*>          wcsub_match;
/usr/include/c++/4.9/tr1/regex:  typedef sub_match<wstring::const_iterator> wssub_match;
/usr/include/c++/4.9/tr1/regex:      typedef std::vector<std::tr1::sub_match<_Bi_iter>, _Allocator>
/usr/include/c++/4.9/tr1/regex:      typedef sub_match<_Bi_iter>                             value_type;
/usr/include/c++/4.9/tr1/regex:      typedef typename _Allocator::const_reference            const_reference;
/usr/include/c++/4.9/tr1/regex:      typedef const_reference                                 reference;
/usr/include/c++/4.9/tr1/regex:      typedef typename _Base_type::const_iterator             const_iterator;
/usr/include/c++/4.9/tr1/regex:      typedef const_iterator                                  iterator;
/usr/include/c++/4.9/tr1/regex:      typedef typename iterator_traits<_Bi_iter>::difference_type
/usr/include/c++/4.9/tr1/regex:      typedef typename _Allocator::size_type                  size_type;
/usr/include/c++/4.9/tr1/regex:      typedef _Allocator                                      allocator_type;
/usr/include/c++/4.9/tr1/regex:      typedef typename iterator_traits<_Bi_iter>::value_type  char_type;
/usr/include/c++/4.9/tr1/regex:      typedef basic_string<char_type>                         string_type;
/usr/include/c++/4.9/tr1/regex:  typedef match_results<const char*>             cmatch;
/usr/include/c++/4.9/tr1/regex:  typedef match_results<string::const_iterator>  smatch;
/usr/include/c++/4.9/tr1/regex:  typedef match_results<const wchar_t*>          wcmatch;
/usr/include/c++/4.9/tr1/regex:  typedef match_results<wstring::const_iterator> wsmatch;
/usr/include/c++/4.9/tr1/regex:      typedef basic_regex<_Ch_type, _Rx_traits>  regex_type;
/usr/include/c++/4.9/tr1/regex:      typedef match_results<_Bi_iter>            value_type;
/usr/include/c++/4.9/tr1/regex:      typedef std::ptrdiff_t                     difference_type;
/usr/include/c++/4.9/tr1/regex:      typedef const value_type*                  pointer;
/usr/include/c++/4.9/tr1/regex:      typedef const value_type&                  reference;
/usr/include/c++/4.9/tr1/regex:      typedef std::forward_iterator_tag          iterator_category;
/usr/include/c++/4.9/tr1/regex:  typedef regex_iterator<const char*>             cregex_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_iterator<string::const_iterator>  sregex_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_iterator<const wchar_t*>          wcregex_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_iterator<wstring::const_iterator> wsregex_iterator;
/usr/include/c++/4.9/tr1/regex:      typedef basic_regex<_Ch_type, _Rx_traits> regex_type;
/usr/include/c++/4.9/tr1/regex:      typedef sub_match<_Bi_iter>               value_type;
/usr/include/c++/4.9/tr1/regex:      typedef std::ptrdiff_t                    difference_type;
/usr/include/c++/4.9/tr1/regex:      typedef const value_type*                 pointer;
/usr/include/c++/4.9/tr1/regex:      typedef const value_type&                 reference;
/usr/include/c++/4.9/tr1/regex:      typedef std::forward_iterator_tag         iterator_category;
/usr/include/c++/4.9/tr1/regex:      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> position_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_token_iterator<const char*>             cregex_token_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_token_iterator<string::const_iterator>  sregex_token_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_token_iterator<const wchar_t*>          wcregex_token_iterator;
/usr/include/c++/4.9/tr1/regex:  typedef regex_token_iterator<wstring::const_iterator> wsregex_token_iterator;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef _Allocator                                  allocator_type;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef _Value                                      value_type;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef _Key                                        key_type;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef _Equal                                      key_equal;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::difference_type        difference_type;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::size_type              size_type;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::pointer                pointer;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::const_pointer          const_pointer;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::reference              reference;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::const_reference        const_reference;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef __detail::_Node_iterator<value_type, __constant_iterators,
/usr/include/c++/4.9/tr1/hashtable.h:      typedef __detail::_Node_const_iterator<value_type,
/usr/include/c++/4.9/tr1/hashtable.h:      typedef __detail::_Hashtable_iterator<value_type, __constant_iterators,
/usr/include/c++/4.9/tr1/hashtable.h:      typedef __detail::_Hashtable_const_iterator<value_type,
/usr/include/c++/4.9/tr1/hashtable.h:      typedef __detail::_Hash_node<_Value, __cache_hash_code> _Node;
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::template rebind<_Node>::other
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::template rebind<_Node*>::other
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename _Allocator::template rebind<_Value>::other
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename __gnu_cxx::__conditional_type<__unique_keys,
/usr/include/c++/4.9/tr1/hashtable.h:      typedef typename __gnu_cxx::__conditional_type<__unique_keys,
/usr/include/c++/4.9/tr1/shared_ptr.h:      typedef void result_type;
/usr/include/c++/4.9/tr1/shared_ptr.h:      typedef _Tp* argument_type;
/usr/include/c++/4.9/tr1/shared_ptr.h:	      typedef typename std::tr1::remove_pointer<_Ptr>::type _Tp;
/usr/include/c++/4.9/tr1/shared_ptr.h:      typedef _Tp   element_type;
/usr/include/c++/4.9/tr1/shared_ptr.h:	  typedef int _IsComplete[sizeof(_Tp1)];
/usr/include/c++/4.9/tr1/shared_ptr.h:	  typedef int _IsComplete[sizeof(_Tp1)];
/usr/include/c++/4.9/tr1/shared_ptr.h:      typedef _Tp* __shared_ptr::*__unspecified_bool_type;
/usr/include/c++/4.9/tr1/shared_ptr.h:      typedef _Tp element_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Functor::result_type result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Mem_fn<_Res _Class::*>
/usr/include/c++/4.9/tr1/functional:      typedef typename _Weak_result_type<_Functor>::result_type type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Functor
/usr/include/c++/4.9/tr1/functional:      typedef void type;
/usr/include/c++/4.9/tr1/functional:      typedef _Tp type;
/usr/include/c++/4.9/tr1/functional:      typedef _Tp* type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Tp::result_type result_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Function_to_function_pointer<_Tp>::type
/usr/include/c++/4.9/tr1/functional:      typedef _Tp type;
/usr/include/c++/4.9/tr1/functional:      typedef const _Tp& type;
/usr/include/c++/4.9/tr1/functional:      typedef _Tp& type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...);
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) const;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) volatile;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res (_Class::*_Functor)(_ArgTypes...) const volatile;
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Index_tuple<_Indexes...> __type;
/usr/include/c++/4.9/tr1/functional:      typedef _No_tuple_element type;
/usr/include/c++/4.9/tr1/functional:      typedef _Tp& result_type;
/usr/include/c++/4.9/tr1/functional:	  typedef typename _Build_index_tuple<sizeof...(_Args)>::__type
/usr/include/c++/4.9/tr1/functional:	  typedef typename _Safe_tuple_element<(is_placeholder<_Arg>::value
/usr/include/c++/4.9/tr1/functional:	  typedef typename add_reference<__base_type>::type type;
/usr/include/c++/4.9/tr1/functional:	  typedef typename add_reference<_CVArg>::type type;
/usr/include/c++/4.9/tr1/functional:      typedef _Tp type;
/usr/include/c++/4.9/tr1/functional:      typedef _Mem_fn<_Tp _Class::*> type;
/usr/include/c++/4.9/tr1/functional:      typedef _Bind __self_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type 
/usr/include/c++/4.9/tr1/functional:      typedef _Bind_result __self_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type 
/usr/include/c++/4.9/tr1/functional:      typedef _Result result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Maybe_wrap_member_pointer<_Functor> __maybe_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename __maybe_type::type __functor_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Bind<__functor_type(_ArgTypes...)> __result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Maybe_wrap_member_pointer<_Functor> __maybe_type;
/usr/include/c++/4.9/tr1/functional:      typedef typename __maybe_type::type __functor_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Bind_result<_Result, __functor_type(_ArgTypes...)>
/usr/include/c++/4.9/tr1/functional:	typedef integral_constant<bool, __stored_locally> _Local_storage;
/usr/include/c++/4.9/tr1/functional:	typedef _Function_base::_Base_manager<_Functor*> _Base;
/usr/include/c++/4.9/tr1/functional:    typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
/usr/include/c++/4.9/tr1/functional:      typedef _Function_base::_Base_manager<_Functor> _Base;
/usr/include/c++/4.9/tr1/functional:      typedef _Function_base::_Base_manager<_Functor> _Base;
/usr/include/c++/4.9/tr1/functional:      typedef _Function_base::_Ref_manager<_Functor> _Base;
/usr/include/c++/4.9/tr1/functional:      typedef _Function_base::_Ref_manager<_Functor> _Base;
/usr/include/c++/4.9/tr1/functional:      typedef _Function_handler<void(_ArgTypes...), _Member _Class::*>
/usr/include/c++/4.9/tr1/functional:      typedef _Member _Class::* _Functor;
/usr/include/c++/4.9/tr1/functional:      typedef _Simple_type_wrapper<_Functor> _Wrapper;
/usr/include/c++/4.9/tr1/functional:      typedef _Function_base::_Base_manager<_Wrapper> _Base;
/usr/include/c++/4.9/tr1/functional:      /// This typedef is used to implement the safe_bool idiom.
/usr/include/c++/4.9/tr1/functional:      typedef _Hidden_type* _Hidden_type::* _Safe_bool;
/usr/include/c++/4.9/tr1/functional:      typedef _Res _Signature_type(_ArgTypes...);
/usr/include/c++/4.9/tr1/functional:      typedef _Res result_type;
/usr/include/c++/4.9/tr1/functional:      typedef _Res (*_Invoker_type)(const _Any_data&, _ArgTypes...);
/usr/include/c++/4.9/tr1/functional:	typedef _Function_handler<_Signature_type, _Functor> _My_handler;
/usr/include/c++/4.9/tr1/unordered_map.h:  // NB: When we get typedef templates these class definitions
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef _Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc,
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef _Hashtable<_Key, std::pair<const _Key, _Tp>,
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef __unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>  _Base;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef __unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>  _Base;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/tr1/unordered_map.h:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/ratio:      typedef __big_add<__mix_hi, __mix_lo, __x1y1, __x0y0> _Res;
/usr/include/c++/4.9/ratio:      typedef __big_mul<__quot, __d> _Prod;
/usr/include/c++/4.9/ratio:      typedef __big_add<_Prod::__hi, _Prod::__lo, 0, __rem> _Sum;
/usr/include/c++/4.9/ratio:      typedef __big_div_impl<__new_n1, __new_n0, __new_d> _Res;
/usr/include/c++/4.9/ratio:      typedef __big_mul<__quot_lo, __d> _P0;
/usr/include/c++/4.9/ratio:      typedef __big_mul<__quot_hi, __d> _P1;
/usr/include/c++/4.9/ratio:      typedef __big_add<_P0::__hi, _P0::__lo, _P1::__lo, __rem> _Sum;
/usr/include/c++/4.9/ratio:      typedef ratio<num, den> type;
/usr/include/c++/4.9/ratio:      typedef ratio<
/usr/include/c++/4.9/ratio:      typedef typename __ratio_multiply<
/usr/include/c++/4.9/ratio:      typedef typename __ratio_add_impl<
/usr/include/c++/4.9/ratio:      typedef ratio<-__t::num, __t::den> type;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::den, __d2> __d;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::num, _R2::den / __g> __x;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R2::num, _R1::den / __g> __y;
/usr/include/c++/4.9/ratio:      typedef __big_add<__x::__hi, __x::__lo, __y::__hi, __y::__lo> __n;
/usr/include/c++/4.9/ratio:      typedef __big_div<__n::__hi, __n::__lo, __g> __ng;
/usr/include/c++/4.9/ratio:      typedef __big_div<__n::__hi, __n::__lo, __g2> __n_final;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::den / __g2, __d2> __d_final;
/usr/include/c++/4.9/ratio:      typedef ratio<__n_final::__quot_lo, __d_final::__lo> type;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::den, __d2> __d;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::num, _R2::den / __g> __x;
/usr/include/c++/4.9/ratio:      typedef __big_mul<-_R2::num, _R1::den / __g> __y;
/usr/include/c++/4.9/ratio:      typedef __big_sub<__x::__hi, __x::__lo, __y::__hi, __y::__lo> __n;
/usr/include/c++/4.9/ratio:      typedef __big_div<__n::__hi, __n::__lo, __g> __ng;
/usr/include/c++/4.9/ratio:      typedef __big_div<__n::__hi, __n::__lo, __g2> __n_final;
/usr/include/c++/4.9/ratio:      typedef __big_mul<_R1::den / __g2, __d2> __d_final;
/usr/include/c++/4.9/ratio:      typedef ratio<__n_final::__quot_lo, __d_final::__lo> type;
/usr/include/c++/4.9/ratio:      typedef typename __ratio_add_impl<_R1, _R2>::type type;
/usr/include/c++/4.9/ratio:      typedef typename __ratio_add<
/usr/include/c++/4.9/ratio:  typedef ratio<1,       1000000000000000000> atto;
/usr/include/c++/4.9/ratio:  typedef ratio<1,          1000000000000000> femto;
/usr/include/c++/4.9/ratio:  typedef ratio<1,             1000000000000> pico;
/usr/include/c++/4.9/ratio:  typedef ratio<1,                1000000000> nano;
/usr/include/c++/4.9/ratio:  typedef ratio<1,                   1000000> micro;
/usr/include/c++/4.9/ratio:  typedef ratio<1,                      1000> milli;
/usr/include/c++/4.9/ratio:  typedef ratio<1,                       100> centi;
/usr/include/c++/4.9/ratio:  typedef ratio<1,                        10> deci;
/usr/include/c++/4.9/ratio:  typedef ratio<                       10, 1> deca;
/usr/include/c++/4.9/ratio:  typedef ratio<                      100, 1> hecto;
/usr/include/c++/4.9/ratio:  typedef ratio<                     1000, 1> kilo;
/usr/include/c++/4.9/ratio:  typedef ratio<                  1000000, 1> mega;
/usr/include/c++/4.9/ratio:  typedef ratio<               1000000000, 1> giga;
/usr/include/c++/4.9/ratio:  typedef ratio<            1000000000000, 1> tera;
/usr/include/c++/4.9/ratio:  typedef ratio<         1000000000000000, 1> peta;
/usr/include/c++/4.9/ratio:  typedef ratio<      1000000000000000000, 1> exa;
/usr/include/c++/4.9/sstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/sstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/sstream:      typedef _Alloc				       	allocator_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/sstream:      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;
/usr/include/c++/4.9/sstream:      typedef basic_string<char_type, _Traits, _Alloc> 	__string_type;
/usr/include/c++/4.9/sstream:      typedef typename __string_type::size_type		__size_type;
/usr/include/c++/4.9/sstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/sstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/sstream:      typedef _Alloc				       	allocator_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/sstream:      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;
/usr/include/c++/4.9/sstream:      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;
/usr/include/c++/4.9/sstream:      typedef basic_istream<char_type, traits_type>	__istream_type;
/usr/include/c++/4.9/sstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/sstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/sstream:      typedef _Alloc				       	allocator_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/sstream:      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;
/usr/include/c++/4.9/sstream:      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;
/usr/include/c++/4.9/sstream:      typedef basic_ostream<char_type, traits_type>	__ostream_type;
/usr/include/c++/4.9/sstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/sstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/sstream:      typedef _Alloc				       	allocator_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/sstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/sstream:      typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;
/usr/include/c++/4.9/sstream:      typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;
/usr/include/c++/4.9/sstream:      typedef basic_iostream<char_type, traits_type>	__iostream_type;
/usr/include/c++/4.9/backward/binders.h:      typedef typename _Operation::first_argument_type _Arg1_type;
/usr/include/c++/4.9/backward/binders.h:      typedef typename _Operation::second_argument_type _Arg2_type;
/usr/include/c++/4.9/backward/hash_map:      typedef hashtable<pair<const _Key, _Tp>,_Key, _HashFn,
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/backward/hash_map:      typedef _Tp data_type;
/usr/include/c++/4.9/backward/hash_map:      typedef _Tp mapped_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::pointer pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_pointer const_pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::reference reference;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_reference const_reference;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::iterator iterator;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/backward/hash_map:      typedef hashtable<pair<const _Key, _Tp>, _Key, _HashFn,
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/backward/hash_map:      typedef _Tp data_type;
/usr/include/c++/4.9/backward/hash_map:      typedef _Tp mapped_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::pointer pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_pointer const_pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::reference reference;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_reference const_reference;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::iterator iterator;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/backward/hash_map:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/backward/hash_map:      typedef __gnu_cxx::hash_map<_Key, _Tp, _HashFn, _EqKey, _Alloc>
/usr/include/c++/4.9/backward/hash_map:      typedef _Container          container_type;
/usr/include/c++/4.9/backward/hash_map:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hash_map:      typedef void                value_type;
/usr/include/c++/4.9/backward/hash_map:      typedef void                difference_type;
/usr/include/c++/4.9/backward/hash_map:      typedef void                pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef void                reference;
/usr/include/c++/4.9/backward/hash_map:      typedef __gnu_cxx::hash_multimap<_Key, _Tp, _HashFn, _EqKey, _Alloc>
/usr/include/c++/4.9/backward/hash_map:      typedef _Container          container_type;
/usr/include/c++/4.9/backward/hash_map:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hash_map:      typedef void                value_type;
/usr/include/c++/4.9/backward/hash_map:      typedef void                difference_type;
/usr/include/c++/4.9/backward/hash_map:      typedef void                pointer;
/usr/include/c++/4.9/backward/hash_map:      typedef void                reference;
/usr/include/c++/4.9/backward/hashtable.h:      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey, _EqualKey, _Alloc>
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_iterator<_Val, _Key, _HashFcn,
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn,
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_node<_Val> _Node;
/usr/include/c++/4.9/backward/hashtable.h:      typedef forward_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Val value_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef size_t size_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Val& reference;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Val* pointer;
/usr/include/c++/4.9/backward/hashtable.h:      typedef hashtable<_Val, _Key, _HashFcn, _ExtractKey, _EqualKey, _Alloc>
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_iterator<_Val,_Key,_HashFcn,
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn,
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_node<_Val> _Node;
/usr/include/c++/4.9/backward/hashtable.h:      typedef forward_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Val value_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef ptrdiff_t difference_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef size_t size_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef const _Val& reference;
/usr/include/c++/4.9/backward/hashtable.h:      typedef const _Val* pointer;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Key key_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Val value_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _HashFcn hasher;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _EqualKey key_equal;
/usr/include/c++/4.9/backward/hashtable.h:      typedef size_t            size_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef ptrdiff_t         difference_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef value_type*       pointer;
/usr/include/c++/4.9/backward/hashtable.h:      typedef const value_type* const_pointer;
/usr/include/c++/4.9/backward/hashtable.h:      typedef value_type&       reference;
/usr/include/c++/4.9/backward/hashtable.h:      typedef const value_type& const_reference;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_node<_Val> _Node;
/usr/include/c++/4.9/backward/hashtable.h:      typedef typename _Alloc::template rebind<value_type>::other allocator_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef typename _Alloc::template rebind<_Node>::other _Node_Alloc;
/usr/include/c++/4.9/backward/hashtable.h:      typedef typename _Alloc::template rebind<_Node*>::other _Nodeptr_Alloc;
/usr/include/c++/4.9/backward/hashtable.h:      typedef vector<_Node*, _Nodeptr_Alloc> _Vector_type;
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_iterator<_Val, _Key, _HashFcn, _ExtractKey,
/usr/include/c++/4.9/backward/hashtable.h:      typedef _Hashtable_const_iterator<_Val, _Key, _HashFcn, _ExtractKey,
/usr/include/c++/4.9/backward/hashtable.h:      typedef typename hashtable<_Val, _Key, _HF, _Ex, _Eq, _All>::_Node _Node;
/usr/include/c++/4.9/backward/hashtable.h:      typedef pair<iterator, iterator> _Pii;
/usr/include/c++/4.9/backward/hashtable.h:      typedef pair<const_iterator, const_iterator> _Pii;
/usr/include/c++/4.9/backward/hash_set:      typedef hashtable<_Value, _Value, _HashFcn, _Identity<_Value>,
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::pointer pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::const_pointer const_pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::reference reference;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::const_reference const_reference;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::const_iterator iterator;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/backward/hash_set:      typedef hashtable<_Value, _Value, _HashFcn, _Identity<_Value>,
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::key_type key_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::value_type value_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::hasher hasher;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::key_equal key_equal;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::size_type size_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::difference_type difference_type;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::pointer pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::const_pointer const_pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::reference reference;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Alloc::const_reference const_reference;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::const_iterator iterator;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::const_iterator const_iterator;
/usr/include/c++/4.9/backward/hash_set:      typedef typename _Ht::allocator_type allocator_type;
/usr/include/c++/4.9/backward/hash_set:      typedef __gnu_cxx::hash_set<_Value, _HashFcn, _EqualKey, _Alloc>
/usr/include/c++/4.9/backward/hash_set:      typedef _Container          container_type;
/usr/include/c++/4.9/backward/hash_set:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hash_set:      typedef void                value_type;
/usr/include/c++/4.9/backward/hash_set:      typedef void                difference_type;
/usr/include/c++/4.9/backward/hash_set:      typedef void                pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef void                reference;
/usr/include/c++/4.9/backward/hash_set:      typedef __gnu_cxx::hash_multiset<_Value, _HashFcn, _EqualKey, _Alloc>
/usr/include/c++/4.9/backward/hash_set:      typedef _Container          container_type;
/usr/include/c++/4.9/backward/hash_set:      typedef output_iterator_tag iterator_category;
/usr/include/c++/4.9/backward/hash_set:      typedef void                value_type;
/usr/include/c++/4.9/backward/hash_set:      typedef void                difference_type;
/usr/include/c++/4.9/backward/hash_set:      typedef void                pointer;
/usr/include/c++/4.9/backward/hash_set:      typedef void                reference;
/usr/include/c++/4.9/backward/strstream:    typedef char_traits<char>              _Traits;
/usr/include/c++/4.9/backward/strstream:    typedef basic_streambuf<char, _Traits> _Base;
/usr/include/c++/4.9/backward/strstream:    typedef char                        char_type;
/usr/include/c++/4.9/backward/strstream:    typedef char_traits<char>::int_type int_type;
/usr/include/c++/4.9/backward/strstream:    typedef char_traits<char>::pos_type pos_type;
/usr/include/c++/4.9/backward/strstream:    typedef char_traits<char>::off_type off_type;
/usr/include/c++/4.9/backward/auto_ptr.h:      typedef _Tp element_type;
/usr/include/c++/4.9/backward/auto_ptr.h:      typedef void element_type;
/usr/include/c++/4.9/fstream:      typedef _CharT                     	        char_type;
/usr/include/c++/4.9/fstream:      typedef _Traits                    	        traits_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/fstream:      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;
/usr/include/c++/4.9/fstream:      typedef basic_filebuf<char_type, traits_type>     __filebuf_type;
/usr/include/c++/4.9/fstream:      typedef __basic_file<char>		        __file_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::state_type          __state_type;
/usr/include/c++/4.9/fstream:      typedef codecvt<char_type, char, __state_type>    __codecvt_type;
/usr/include/c++/4.9/fstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/fstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/fstream:      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;
/usr/include/c++/4.9/fstream:      typedef basic_istream<char_type, traits_type>	__istream_type;
/usr/include/c++/4.9/fstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/fstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/fstream:      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;
/usr/include/c++/4.9/fstream:      typedef basic_ostream<char_type, traits_type>	__ostream_type;
/usr/include/c++/4.9/fstream:      typedef _CharT 					char_type;
/usr/include/c++/4.9/fstream:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/fstream:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/fstream:      typedef basic_filebuf<char_type, traits_type> 	__filebuf_type;
/usr/include/c++/4.9/fstream:      typedef basic_ios<char_type, traits_type>		__ios_type;
/usr/include/c++/4.9/fstream:      typedef basic_iostream<char_type, traits_type>	__iostream_type;
/usr/include/c++/4.9/shared_mutex:    typedef mutex _Mutex;
/usr/include/c++/4.9/shared_mutex:      typedef _Mutex mutex_type;
/usr/include/c++/4.9/atomic:      typedef _Tp* 			__pointer_type;
/usr/include/c++/4.9/atomic:      typedef __atomic_base<_Tp*>	__base_type;
/usr/include/c++/4.9/atomic:      typedef bool 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_bool 		__base_type;
/usr/include/c++/4.9/atomic:      typedef char 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_char 		__base_type;
/usr/include/c++/4.9/atomic:      typedef signed char 		__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_schar 		__base_type;
/usr/include/c++/4.9/atomic:      typedef unsigned char 		__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_uchar 		__base_type;
/usr/include/c++/4.9/atomic:      typedef short 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_short 		__base_type;
/usr/include/c++/4.9/atomic:      typedef unsigned short 	      	__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_ushort 		__base_type;
/usr/include/c++/4.9/atomic:      typedef int 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_int 		__base_type;
/usr/include/c++/4.9/atomic:      typedef unsigned int		__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_uint 		__base_type;
/usr/include/c++/4.9/atomic:      typedef long 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_long 		__base_type;
/usr/include/c++/4.9/atomic:      typedef unsigned long 		__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_ulong 		__base_type;
/usr/include/c++/4.9/atomic:      typedef long long 		__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_llong 		__base_type;
/usr/include/c++/4.9/atomic:      typedef unsigned long long       	__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_ullong 		__base_type;
/usr/include/c++/4.9/atomic:      typedef wchar_t 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_wchar_t 		__base_type;
/usr/include/c++/4.9/atomic:      typedef char16_t 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_char16_t 		__base_type;
/usr/include/c++/4.9/atomic:      typedef char32_t 			__integral_type;
/usr/include/c++/4.9/atomic:      typedef atomic_char32_t 		__base_type;
/usr/include/c++/4.9/mutex:    typedef __gthread_mutex_t			__native_type;
/usr/include/c++/4.9/mutex:    typedef __gthread_recursive_mutex_t		__native_type;
/usr/include/c++/4.9/mutex:    typedef __native_type* 			native_handle_type;
/usr/include/c++/4.9/mutex:    typedef __native_type* 			native_handle_type;
/usr/include/c++/4.9/mutex:      typedef chrono::high_resolution_clock 	__clock_t;
/usr/include/c++/4.9/mutex:    typedef __native_type* 		  	native_handle_type;
/usr/include/c++/4.9/mutex:    typedef __native_type* 			native_handle_type;
/usr/include/c++/4.9/mutex:      typedef _Mutex mutex_type;
/usr/include/c++/4.9/mutex:      typedef _Mutex mutex_type;
/usr/include/c++/4.9/mutex:    typedef __gthread_once_t __native_type;
/usr/include/c++/4.9/typeindex:      typedef size_t        result_type;
/usr/include/c++/4.9/typeindex:      typedef type_index  argument_type;
/usr/include/c++/4.9/profile/map.h:      typedef _GLIBCXX_STD_C::map<_Key, _Tp, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/profile/map.h:      typedef __gnu_cxx::__alloc_traits<_Allocator> _Alloc_traits;
/usr/include/c++/4.9/profile/map.h:      typedef _Key                                  key_type;
/usr/include/c++/4.9/profile/map.h:      typedef _Tp                                   mapped_type;
/usr/include/c++/4.9/profile/map.h:      typedef std::pair<const _Key, _Tp>            value_type;
/usr/include/c++/4.9/profile/map.h:      typedef _Compare                              key_compare;
/usr/include/c++/4.9/profile/map.h:      typedef _Allocator                            allocator_type;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::iterator       iterator;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::const_iterator       const_iterator;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/profile/map.h:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/profile/map.h:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/profile/map.h:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/profile/map.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/map.h:	  typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/map.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/map.h:	typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef __iterator_tracker _Self;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef std::iterator_traits<_Iterator> _Traits;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef _Iterator		              _Base_iterator;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef typename _Traits::iterator_category iterator_category; 
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef typename _Traits::value_type        value_type;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef typename _Traits::difference_type   difference_type;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef typename _Traits::reference         reference;
/usr/include/c++/4.9/profile/iterator_tracker.h:      typedef typename _Traits::pointer           pointer;
/usr/include/c++/4.9/profile/deque:      typedef  _GLIBCXX_STD_C::deque<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::iterator             iterator;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::const_iterator       const_iterator;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::reverse_iterator     reverse_iterator;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/profile/deque:      typedef _Tp				    value_type;
/usr/include/c++/4.9/profile/deque:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/profile/deque:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/profile/set.h:      typedef _GLIBCXX_STD_C::set<_Key, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/profile/set.h:      typedef __gnu_cxx::__alloc_traits<_Allocator> _Alloc_traits;
/usr/include/c++/4.9/profile/set.h:      typedef _Key				    key_type;
/usr/include/c++/4.9/profile/set.h:      typedef _Key				    value_type;
/usr/include/c++/4.9/profile/set.h:      typedef _Compare				    key_compare;
/usr/include/c++/4.9/profile/set.h:      typedef _Compare				    value_compare;
/usr/include/c++/4.9/profile/set.h:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::iterator               iterator;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::const_iterator         const_iterator;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::reverse_iterator       reverse_iterator;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/profile/set.h:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/profile/set.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/set.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/set.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/set.h:	typedef typename _Base::const_iterator _Base_iterator;
/usr/include/c++/4.9/profile/array:      typedef _Tp 	    			      value_type;
/usr/include/c++/4.9/profile/array:      typedef value_type*			      pointer;
/usr/include/c++/4.9/profile/array:      typedef const value_type*                       const_pointer;
/usr/include/c++/4.9/profile/array:      typedef value_type&                   	      reference;
/usr/include/c++/4.9/profile/array:      typedef const value_type&             	      const_reference;
/usr/include/c++/4.9/profile/array:      typedef value_type*                             iterator;
/usr/include/c++/4.9/profile/array:      typedef const value_type*                       const_iterator;
/usr/include/c++/4.9/profile/array:      typedef std::size_t                    	      size_type;
/usr/include/c++/4.9/profile/array:      typedef std::ptrdiff_t                   	      difference_type;
/usr/include/c++/4.9/profile/array:      typedef std::reverse_iterator<iterator>	      reverse_iterator;
/usr/include/c++/4.9/profile/array:      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
/usr/include/c++/4.9/profile/array:      typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
/usr/include/c++/4.9/profile/array:      typedef _Tp type;
/usr/include/c++/4.9/profile/multimap.h:      typedef _GLIBCXX_STD_C::multimap<_Key, _Tp, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/profile/multimap.h:      typedef __gnu_cxx::__alloc_traits<_Allocator> _Alloc_traits;
/usr/include/c++/4.9/profile/multimap.h:      typedef _Key				     key_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef _Tp				     mapped_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef std::pair<const _Key, _Tp>             value_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef _Compare                               key_compare;
/usr/include/c++/4.9/profile/multimap.h:      typedef _Allocator                             allocator_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::reference              reference;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::const_reference        const_reference;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::iterator               iterator;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::const_iterator         const_iterator;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::reverse_iterator       reverse_iterator;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::size_type              size_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::difference_type        difference_type;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::pointer                pointer;
/usr/include/c++/4.9/profile/multimap.h:      typedef typename _Base::const_pointer          const_pointer;
/usr/include/c++/4.9/profile/multimap.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/multimap.h:	typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/profile/unordered_base.h:      typedef std::pair<const _Key, _Mapped> _Value;
/usr/include/c++/4.9/profile/unordered_base.h:      typedef std::pair<const _Key, _Mapped> _Value;
/usr/include/c++/4.9/profile/unordered_base.h:      typedef std::pair<const _Key, _Mapped> _Value;
/usr/include/c++/4.9/profile/multiset.h:      typedef _GLIBCXX_STD_C::multiset<_Key, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/profile/multiset.h:      typedef __gnu_cxx::__alloc_traits<_Allocator> _Alloc_traits;
/usr/include/c++/4.9/profile/multiset.h:      typedef _Key				     key_type;
/usr/include/c++/4.9/profile/multiset.h:      typedef _Key				     value_type;
/usr/include/c++/4.9/profile/multiset.h:      typedef _Compare				     key_compare;
/usr/include/c++/4.9/profile/multiset.h:      typedef _Compare				     value_compare;
/usr/include/c++/4.9/profile/multiset.h:      typedef _Allocator			     allocator_type;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::reference	             reference;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::const_reference        const_reference;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::iterator               iterator;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::const_iterator         const_iterator;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::reverse_iterator       reverse_iterator;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::const_reverse_iterator const_reverse_iterator;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::size_type              size_type;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::difference_type        difference_type;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::pointer                pointer;
/usr/include/c++/4.9/profile/multiset.h:      typedef typename _Base::const_pointer          const_pointer;
/usr/include/c++/4.9/profile/multiset.h:	typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/multiset.h:	typedef typename _Base::const_iterator _Base_iterator;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _GLIBCXX_STD_BASE _Base;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::difference_type difference_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::reference       reference;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::const_reference const_reference;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::mapped_type      mapped_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::iterator iterator;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::const_iterator const_iterator;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _GLIBCXX_STD_BASE _Base;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::difference_type difference_type;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::reference       reference;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::const_reference const_reference;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::iterator iterator;
/usr/include/c++/4.9/profile/unordered_map:      typedef typename _Base::const_iterator const_iterator;
/usr/include/c++/4.9/profile/list:      typedef _GLIBCXX_STD_C::list<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/profile/list:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/profile/list:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/profile/list:      typedef __iterator_tracker<typename _Base::iterator, list>        
/usr/include/c++/4.9/profile/list:      typedef __iterator_tracker<typename _Base::const_iterator, list>  
/usr/include/c++/4.9/profile/list:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/list:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/profile/list:      typedef _Tp				    value_type;
/usr/include/c++/4.9/profile/list:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/profile/list:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/profile/list:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/profile/list:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/profile/list:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/profile/bitset:      typedef _GLIBCXX_STD_C::bitset<_Nb> _Base;
/usr/include/c++/4.9/profile/bitset:	typedef typename _Base::reference _Base_ref;
/usr/include/c++/4.9/profile/forward_list:      typedef _GLIBCXX_STD_C::forward_list<_Tp, _Alloc> _Base;
/usr/include/c++/4.9/profile/forward_list:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/profile/forward_list:      typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;
/usr/include/c++/4.9/profile/forward_list:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/impl/profiler_node.h:  typedef const void* __object_t;
/usr/include/c++/4.9/profile/impl/profiler_node.h:  typedef void* __instruction_address_t;
/usr/include/c++/4.9/profile/impl/profiler_node.h:  typedef std::_GLIBCXX_STD_C::vector<__instruction_address_t> __stack_npt;
/usr/include/c++/4.9/profile/impl/profiler_node.h:  typedef __stack_npt* __stack_t;
/usr/include/c++/4.9/profile/impl/profiler_trace.h:  typedef _GLIBCXX_IMPL_UNORDERED_MAP<std::string, std::string> __env_t;
/usr/include/c++/4.9/profile/impl/profiler_trace.h:  typedef std::_GLIBCXX_STD_C::vector<__warning_data> __warning_vector_t;
/usr/include/c++/4.9/profile/impl/profiler_trace.h:  typedef std::_GLIBCXX_STD_C::vector<__cost_factor*> __cost_factor_vector;
/usr/include/c++/4.9/profile/impl/profiler_trace.h:      typedef _GLIBCXX_IMPL_UNORDERED_MAP<__object_t, 
/usr/include/c++/4.9/profile/impl/profiler_trace.h:      typedef _GLIBCXX_IMPL_UNORDERED_MAP<__stack_t, __stack_info,
/usr/include/c++/4.9/profile/unordered_set:      typedef _GLIBCXX_STD_BASE _Base;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::difference_type difference_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::reference       reference;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::const_reference const_reference;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::iterator iterator;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::const_iterator const_iterator;
/usr/include/c++/4.9/profile/unordered_set:      typedef _GLIBCXX_STD_BASE _Base;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::difference_type difference_type;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::reference       reference;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::const_reference const_reference;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::iterator iterator;
/usr/include/c++/4.9/profile/unordered_set:      typedef typename _Base::const_iterator const_iterator;
/usr/include/c++/4.9/profile/vector:      typedef _GLIBCXX_STD_C::vector<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/profile/vector:      typedef __gnu_cxx::__alloc_traits<_Allocator>  _Alloc_traits;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/profile/vector:      typedef __iterator_tracker<_Base_iterator, vector>
/usr/include/c++/4.9/profile/vector:      typedef __iterator_tracker<_Base_const_iterator, vector>
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/profile/vector:      typedef _Tp				    value_type;
/usr/include/c++/4.9/profile/vector:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/profile/vector:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/profile/vector:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/profile/vector:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/map.h:      typedef _GLIBCXX_STD_C::map<_Key, _Tp, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/map.h:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/map.h:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/map.h:      typedef _Key                                  key_type;
/usr/include/c++/4.9/debug/map.h:      typedef _Tp                                   mapped_type;
/usr/include/c++/4.9/debug/map.h:      typedef std::pair<const _Key, _Tp>            value_type;
/usr/include/c++/4.9/debug/map.h:      typedef _Compare                              key_compare;
/usr/include/c++/4.9/debug/map.h:      typedef _Allocator                            allocator_type;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/map.h:      typedef __gnu_debug::_Safe_iterator<_Base_iterator, map>
/usr/include/c++/4.9/debug/map.h:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator, map>
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/map.h:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/map.h:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/debug/map.h:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/map.h:	typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef _Safe_local_iterator _Self;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Sequence::const_local_iterator _Const_local_iterator;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Sequence::size_type size_type;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef std::iterator_traits<_Iterator> _Traits;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef _Iterator                           iterator_type;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Traits::iterator_category iterator_category;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Traits::value_type        value_type;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Traits::difference_type   difference_type;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Traits::reference         reference;
/usr/include/c++/4.9/debug/safe_local_iterator.h:      typedef typename _Traits::pointer           pointer;
/usr/include/c++/4.9/debug/deque:      typedef  _GLIBCXX_STD_C::deque<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/deque:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/deque:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,deque>
/usr/include/c++/4.9/debug/deque:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,deque>
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/deque:      typedef _Tp				    value_type;
/usr/include/c++/4.9/debug/deque:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/deque:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/deque:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/debug/deque:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/deque:	typedef __gnu_debug::_After_nth_from<_Base_const_iterator> _After_nth;
/usr/include/c++/4.9/debug/set.h:      typedef _GLIBCXX_STD_C::set<_Key, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/set.h:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/set.h:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/set.h:      typedef _Key				    key_type;
/usr/include/c++/4.9/debug/set.h:      typedef _Key				    value_type;
/usr/include/c++/4.9/debug/set.h:      typedef _Compare				    key_compare;
/usr/include/c++/4.9/debug/set.h:      typedef _Compare				    value_compare;
/usr/include/c++/4.9/debug/set.h:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/set.h:      typedef __gnu_debug::_Safe_iterator<_Base_iterator, set>
/usr/include/c++/4.9/debug/set.h:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator, set>
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/set.h:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/set.h:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/debug/set.h:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/set.h:	typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;
/usr/include/c++/4.9/debug/array:      typedef _Tp 	    			      value_type;
/usr/include/c++/4.9/debug/array:      typedef value_type*			      pointer;
/usr/include/c++/4.9/debug/array:      typedef const value_type*                       const_pointer;
/usr/include/c++/4.9/debug/array:      typedef value_type&                   	      reference;
/usr/include/c++/4.9/debug/array:      typedef const value_type&             	      const_reference;
/usr/include/c++/4.9/debug/array:      typedef value_type*                             iterator;
/usr/include/c++/4.9/debug/array:      typedef const value_type*                       const_iterator;
/usr/include/c++/4.9/debug/array:      typedef std::size_t                    	      size_type;
/usr/include/c++/4.9/debug/array:      typedef std::ptrdiff_t                   	      difference_type;
/usr/include/c++/4.9/debug/array:      typedef std::reverse_iterator<iterator>	      reverse_iterator;
/usr/include/c++/4.9/debug/array:      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
/usr/include/c++/4.9/debug/array:      typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
/usr/include/c++/4.9/debug/array:      typedef _Tp type;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename std::iterator_traits<_Iterator>::iterator_category
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef _Safe_iterator _Self;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Sequence::const_iterator _Const_iterator;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef std::iterator_traits<_Iterator> _Traits;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef _Iterator                           iterator_type;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Traits::iterator_category iterator_category;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Traits::value_type        value_type;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Traits::difference_type   difference_type;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Traits::reference         reference;
/usr/include/c++/4.9/debug/safe_iterator.h:      typedef typename _Traits::pointer           pointer;
/usr/include/c++/4.9/debug/multimap.h:      typedef _GLIBCXX_STD_C::multimap<_Key, _Tp, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/multimap.h:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/multimap.h:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/multimap.h:      typedef _Key				     key_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef _Tp				     mapped_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef std::pair<const _Key, _Tp>             value_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef _Compare                               key_compare;
/usr/include/c++/4.9/debug/multimap.h:      typedef _Allocator                             allocator_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::reference              reference;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::const_reference        const_reference;
/usr/include/c++/4.9/debug/multimap.h:      typedef __gnu_debug::_Safe_iterator<_Base_iterator, multimap>
/usr/include/c++/4.9/debug/multimap.h:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::size_type              size_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::difference_type        difference_type;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::pointer                pointer;
/usr/include/c++/4.9/debug/multimap.h:      typedef typename _Base::const_pointer          const_pointer;
/usr/include/c++/4.9/debug/multimap.h:      typedef std::reverse_iterator<iterator>        reverse_iterator;
/usr/include/c++/4.9/debug/multimap.h:      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
/usr/include/c++/4.9/debug/multimap.h:	typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;
/usr/include/c++/4.9/debug/safe_unordered_base.h:    typedef _Safe_sequence_base _Base;
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/debug/functions.h:      typedef const typename _Sequence::value_type* _PointerType;
/usr/include/c++/4.9/debug/functions.h:      typedef std::less<_PointerType> _Less;
/usr/include/c++/4.9/debug/functions.h:      typedef _Is_contiguous_sequence<_Sequence> __tag;
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::__is_integer<_InputIterator>::__type _Integral;
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::iterator_traits<_InputIterator1>::value_type
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::iterator_traits<_InputIterator2>::value_type
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::__are_same<_ValueType1, _ValueType2>::__type
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::iterator_traits<_InputIterator1>::value_type
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::iterator_traits<_InputIterator2>::value_type
/usr/include/c++/4.9/debug/functions.h:      typedef typename std::__are_same<_ValueType1, _ValueType2>::__type
/usr/include/c++/4.9/debug/functions.h:      typedef std::__false_type __type;
/usr/include/c++/4.9/debug/safe_sequence.tcc:        typedef typename _Sequence::iterator iterator;
/usr/include/c++/4.9/debug/safe_sequence.tcc:        typedef typename _Sequence::const_iterator const_iterator;
/usr/include/c++/4.9/debug/safe_sequence.tcc:        typedef typename _Sequence::iterator iterator;
/usr/include/c++/4.9/debug/safe_sequence.tcc:        typedef typename _Sequence::const_iterator const_iterator;
/usr/include/c++/4.9/debug/multiset.h:      typedef _GLIBCXX_STD_C::multiset<_Key, _Compare, _Allocator> _Base;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/multiset.h:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/multiset.h:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/multiset.h:      typedef _Key				     key_type;
/usr/include/c++/4.9/debug/multiset.h:      typedef _Key				     value_type;
/usr/include/c++/4.9/debug/multiset.h:      typedef _Compare				     key_compare;
/usr/include/c++/4.9/debug/multiset.h:      typedef _Compare				     value_compare;
/usr/include/c++/4.9/debug/multiset.h:      typedef _Allocator			     allocator_type;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::reference	             reference;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::const_reference        const_reference;
/usr/include/c++/4.9/debug/multiset.h:      typedef __gnu_debug::_Safe_iterator<_Base_iterator, multiset>
/usr/include/c++/4.9/debug/multiset.h:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::size_type              size_type;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::difference_type        difference_type;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::pointer                pointer;
/usr/include/c++/4.9/debug/multiset.h:      typedef typename _Base::const_pointer          const_pointer;
/usr/include/c++/4.9/debug/multiset.h:      typedef std::reverse_iterator<iterator>        reverse_iterator;
/usr/include/c++/4.9/debug/multiset.h:      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
/usr/include/c++/4.9/debug/multiset.h:	typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;
/usr/include/c++/4.9/debug/unordered_map:      typedef _GLIBCXX_STD_C::unordered_map<_Key, _Tp, _Hash,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_unordered_container<unordered_map> _Safe_base;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::const_local_iterator _Base_const_local_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::local_iterator _Base_local_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_local_iterator<_Base_local_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_local_iterator<_Base_const_local_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef _GLIBCXX_STD_C::unordered_multimap<_Key, _Tp, _Hash,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_unordered_container<unordered_multimap>
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::const_local_iterator _Base_const_local_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::local_iterator _Base_local_iterator;
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_local_iterator<
/usr/include/c++/4.9/debug/unordered_map:      typedef __gnu_debug::_Safe_local_iterator<
/usr/include/c++/4.9/debug/list:      typedef _GLIBCXX_STD_C::list<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::iterator       _Base_iterator;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/list:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/list:      typedef __gnu_debug::_Not_equal_to<_Base_const_iterator> _Not_equal;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/list:      typedef __gnu_debug::_Safe_iterator<_Base_iterator, list>
/usr/include/c++/4.9/debug/list:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator, list>
/usr/include/c++/4.9/debug/list:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/list:      typedef _Tp				    value_type;
/usr/include/c++/4.9/debug/list:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/list:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/list:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/debug/list:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/bitset:      typedef _GLIBCXX_STD_C::bitset<_Nb> _Base;
/usr/include/c++/4.9/debug/bitset:      typedef typename _Base::reference reference;
/usr/include/c++/4.9/debug/bitset:	typedef typename _Base::reference _Base_ref;
/usr/include/c++/4.9/debug/safe_unordered_container.tcc:	typedef typename _Container::iterator iterator;
/usr/include/c++/4.9/debug/safe_unordered_container.tcc:	typedef typename _Container::const_iterator const_iterator;
/usr/include/c++/4.9/debug/safe_unordered_container.tcc:	typedef typename _Container::local_iterator local_iterator;
/usr/include/c++/4.9/debug/safe_unordered_container.tcc:	typedef typename _Container::const_local_iterator const_local_iterator;
/usr/include/c++/4.9/debug/forward_list:      typedef _GLIBCXX_STD_C::forward_list<_Tp, _Alloc> _Base;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::iterator       _Base_iterator;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/forward_list:      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
/usr/include/c++/4.9/debug/forward_list:      typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/forward_list:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,
/usr/include/c++/4.9/debug/forward_list:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/forward_list:      typedef _Tp                                   value_type;
/usr/include/c++/4.9/debug/forward_list:      typedef _Alloc                                allocator_type;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/forward_list:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/forward_list:      typedef __gnu_debug::_Safe_iterator_base _Safe_iterator_base;
/usr/include/c++/4.9/debug/forward_list:      typedef std::__debug::forward_list<_Tp, _Alloc> _Sequence;
/usr/include/c++/4.9/debug/string:      typedef std::basic_string<_CharT, _Traits, _Allocator> _Base;
/usr/include/c++/4.9/debug/string:      typedef __gnu_debug::_Safe_sequence<basic_string>     _Safe_base;
/usr/include/c++/4.9/debug/string:    typedef _Traits				       traits_type;
/usr/include/c++/4.9/debug/string:    typedef typename _Traits::char_type		       value_type;
/usr/include/c++/4.9/debug/string:    typedef _Allocator				       allocator_type;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::size_type                  size_type;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::difference_type            difference_type;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::reference                  reference;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::const_reference            const_reference;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::pointer                    pointer;
/usr/include/c++/4.9/debug/string:    typedef typename _Base::const_pointer              const_pointer;
/usr/include/c++/4.9/debug/string:    typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, basic_string>
/usr/include/c++/4.9/debug/string:    typedef __gnu_debug::_Safe_iterator<typename _Base::const_iterator,
/usr/include/c++/4.9/debug/string:    typedef std::reverse_iterator<iterator>            reverse_iterator;
/usr/include/c++/4.9/debug/string:    typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;
/usr/include/c++/4.9/debug/string:  typedef basic_string<char>    string;
/usr/include/c++/4.9/debug/string:  typedef basic_string<wchar_t> wstring;
/usr/include/c++/4.9/debug/safe_sequence.h:      typedef typename std::iterator_traits<_Iterator>::difference_type
/usr/include/c++/4.9/debug/unordered_set:      typedef _GLIBCXX_STD_C::unordered_set<_Value, _Hash,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_unordered_container<unordered_set> _Safe_base;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::const_local_iterator _Base_const_local_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::local_iterator _Base_local_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_local_iterator<_Base_local_iterator,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_local_iterator<_Base_const_local_iterator,
/usr/include/c++/4.9/debug/unordered_set:	typedef std::pair<_Base_iterator, bool> __pair_type;
/usr/include/c++/4.9/debug/unordered_set:	typedef std::pair<typename _Base::iterator, bool> __pair_type;
/usr/include/c++/4.9/debug/unordered_set:	typedef std::pair<_Base_iterator, _Base_iterator> __pair_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef _GLIBCXX_STD_C::unordered_multiset<_Value, _Hash,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_unordered_container<unordered_multiset>
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::const_local_iterator _Base_const_local_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::local_iterator _Base_local_iterator;
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_cxx::__alloc_traits<typename
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::size_type       size_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::hasher          hasher;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::key_equal       key_equal;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::allocator_type  allocator_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::key_type        key_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef typename _Base::value_type      value_type;
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_local_iterator<
/usr/include/c++/4.9/debug/unordered_set:      typedef __gnu_debug::_Safe_local_iterator<
/usr/include/c++/4.9/debug/unordered_set:	typedef std::pair<_Base_iterator, _Base_iterator> __pair_type;
/usr/include/c++/4.9/debug/vector:      typedef _GLIBCXX_STD_C::vector<_Tp, _Allocator> _Base;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::iterator _Base_iterator;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::const_iterator _Base_const_iterator;
/usr/include/c++/4.9/debug/vector:      typedef __gnu_debug::_Equal_to<_Base_const_iterator> _Equal;
/usr/include/c++/4.9/debug/vector:      typedef __gnu_debug::_Safe_sequence<vector<_Tp, _Allocator> > _Safe_base;
/usr/include/c++/4.9/debug/vector:      typedef __gnu_cxx::__alloc_traits<_Allocator>  _Alloc_traits;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::reference             reference;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::const_reference       const_reference;
/usr/include/c++/4.9/debug/vector:      typedef __gnu_debug::_Safe_iterator<_Base_iterator,vector>
/usr/include/c++/4.9/debug/vector:      typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,vector>
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::size_type             size_type;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::difference_type       difference_type;
/usr/include/c++/4.9/debug/vector:      typedef _Tp				    value_type;
/usr/include/c++/4.9/debug/vector:      typedef _Allocator			    allocator_type;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::pointer               pointer;
/usr/include/c++/4.9/debug/vector:      typedef typename _Base::const_pointer         const_pointer;
/usr/include/c++/4.9/debug/vector:      typedef std::reverse_iterator<iterator>       reverse_iterator;
/usr/include/c++/4.9/debug/vector:      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
/usr/include/c++/4.9/debug/vector:	typedef __gnu_debug::_After_nth_from<_Base_const_iterator> _After_nth;
/usr/include/c++/4.9/streambuf:      typedef _CharT 					char_type;
/usr/include/c++/4.9/streambuf:      typedef _Traits 					traits_type;
/usr/include/c++/4.9/streambuf:      typedef typename traits_type::int_type 		int_type;
/usr/include/c++/4.9/streambuf:      typedef typename traits_type::pos_type 		pos_type;
/usr/include/c++/4.9/streambuf:      typedef typename traits_type::off_type 		off_type;
/usr/include/c++/4.9/streambuf:      typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;
/usr/include/c++/4.9/cxxabi.h:  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)(void *);
/usr/include/inttypes.h:typedef __WCHAR_TYPE__ __gwchar_t;
/usr/include/inttypes.h:typedef wchar_t __gwchar_t;
/usr/include/inttypes.h:typedef struct
/usr/include/inttypes.h:typedef struct
/usr/include/wctype.h:typedef unsigned long int wctype_t;
/usr/include/wctype.h:typedef const __int32_t *wctrans_t;
/usr/include/xorg/isdv4.h:typedef struct {
/usr/include/xorg/isdv4.h:typedef struct {
/usr/include/xorg/isdv4.h:typedef struct {
/usr/include/xorg/isdv4.h:typedef struct {
/usr/include/resolv.h:typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }
/usr/include/resolv.h:typedef res_sendhookact (*res_send_qhook) (struct sockaddr_in * const *__ns,
/usr/include/resolv.h:typedef res_sendhookact (*res_send_rhook) (const struct sockaddr_in *__ns,
/usr/include/resolv.h:typedef struct __res_state *res_state;
/usr/include/termios.h:typedef __pid_t pid_t;
/usr/include/dlg_keys.h:typedef struct {
/usr/include/dlg_keys.h:typedef enum {
/usr/include/search.h:typedef int (*__compar_fn_t) (const void *, const void *);
/usr/include/search.h:typedef __compar_fn_t comparison_fn_t;
/usr/include/search.h:typedef enum
/usr/include/search.h:typedef struct entry
/usr/include/search.h:typedef enum
/usr/include/search.h:typedef void (*__action_fn_t) (const void *__nodep, VISIT __value,
/usr/include/search.h:typedef void (*__free_fn_t) (void *__nodep);
/usr/include/rpc/rpc.h:#include <rpc/types.h>		/* some typedefs */
/usr/include/rpc/svc.h:typedef struct SVCXPRT SVCXPRT;
/usr/include/rpc/svc.h:typedef void (*__dispatch_fn_t) (struct svc_req*, SVCXPRT*);
/usr/include/rpc/key_prot.h:typedef enum keystatus keystatus;
/usr/include/rpc/key_prot.h:typedef char keybuf[HEXKEYBYTES];
/usr/include/rpc/key_prot.h:typedef char *netnamestr;
/usr/include/rpc/key_prot.h:typedef struct cryptkeyarg cryptkeyarg;
/usr/include/rpc/key_prot.h:typedef struct cryptkeyarg2 cryptkeyarg2;
/usr/include/rpc/key_prot.h:typedef struct cryptkeyres cryptkeyres;
/usr/include/rpc/key_prot.h:typedef struct unixcred unixcred;
/usr/include/rpc/key_prot.h:typedef struct getcredres getcredres;
/usr/include/rpc/key_prot.h:typedef struct key_netstarg key_netstarg;
/usr/include/rpc/key_prot.h:typedef struct key_netstres key_netstres;
/usr/include/rpc/pmap_clnt.h:typedef bool_t (*resultproc_t) (caddr_t __resp, struct sockaddr_in *__raddr);
/usr/include/rpc/xdr.h:typedef struct XDR XDR;
/usr/include/rpc/xdr.h:typedef bool_t (*xdrproc_t) (XDR *, void *,...);
/usr/include/rpc/xdr.h:typedef struct netobj netobj;
/usr/include/rpc/auth.h:typedef union des_block des_block;
/usr/include/rpc/auth.h:typedef struct AUTH AUTH;
/usr/include/rpc/types.h:typedef int bool_t;
/usr/include/rpc/types.h:typedef int enum_t;
/usr/include/rpc/types.h:typedef unsigned long rpcprog_t;
/usr/include/rpc/types.h:typedef unsigned long rpcvers_t;
/usr/include/rpc/types.h:typedef unsigned long rpcproc_t;
/usr/include/rpc/types.h:typedef unsigned long rpcprot_t;
/usr/include/rpc/types.h:typedef unsigned long rpcport_t;
/usr/include/rpc/types.h:typedef __u_char u_char;
/usr/include/rpc/types.h:typedef __u_short u_short;
/usr/include/rpc/types.h:typedef __u_int u_int;
/usr/include/rpc/types.h:typedef __u_long u_long;
/usr/include/rpc/types.h:typedef __quad_t quad_t;
/usr/include/rpc/types.h:typedef __u_quad_t u_quad_t;
/usr/include/rpc/types.h:typedef __fsid_t fsid_t;
/usr/include/rpc/types.h:typedef __daddr_t daddr_t;
/usr/include/rpc/types.h:typedef __caddr_t caddr_t;
/usr/include/rpc/clnt.h:typedef struct CLIENT CLIENT;
/usr/include/elf.h:typedef uint16_t Elf32_Half;
/usr/include/elf.h:typedef uint16_t Elf64_Half;
/usr/include/elf.h:typedef uint32_t Elf32_Word;
/usr/include/elf.h:typedef	int32_t  Elf32_Sword;
/usr/include/elf.h:typedef uint32_t Elf64_Word;
/usr/include/elf.h:typedef	int32_t  Elf64_Sword;
/usr/include/elf.h:typedef uint64_t Elf32_Xword;
/usr/include/elf.h:typedef	int64_t  Elf32_Sxword;
/usr/include/elf.h:typedef uint64_t Elf64_Xword;
/usr/include/elf.h:typedef	int64_t  Elf64_Sxword;
/usr/include/elf.h:typedef uint32_t Elf32_Addr;
/usr/include/elf.h:typedef uint64_t Elf64_Addr;
/usr/include/elf.h:typedef uint32_t Elf32_Off;
/usr/include/elf.h:typedef uint64_t Elf64_Off;
/usr/include/elf.h:typedef uint16_t Elf32_Section;
/usr/include/elf.h:typedef uint16_t Elf64_Section;
/usr/include/elf.h:typedef Elf32_Half Elf32_Versym;
/usr/include/elf.h:typedef Elf64_Half Elf64_Versym;
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef union
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef struct
/usr/include/elf.h:typedef Elf32_Addr Elf32_Conflict;
/usr/include/elf.h:typedef struct
/usr/include/math.h:typedef enum
/usr/include/protocols/talkd.h:typedef struct {
/usr/include/protocols/talkd.h:typedef struct {
/usr/include/python3.4m/ImDib.h:typedef struct ImagingDIBInstance* ImagingDIB;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingMemoryInstance* Imaging;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingAccessInstance* ImagingAccess;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingHistogramInstance* ImagingHistogram;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingOutlineInstance* ImagingOutline;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingPaletteInstance* ImagingPalette;
/usr/include/python3.4m/Imaging.h:typedef void* ImagingSectionCookie;
/usr/include/python3.4m/Imaging.h:typedef int (*ImagingTransformMap)(double* X, double* Y,
/usr/include/python3.4m/Imaging.h:typedef int (*ImagingTransformFilter)(void* out, Imaging im,
/usr/include/python3.4m/Imaging.h:typedef struct { int x, y; INT32 count; INT32 pixel; } ImagingColorItem;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingAffineMatrixInstance *ImagingAffineMatrix;
/usr/include/python3.4m/Imaging.h:typedef struct ImagingCodecStateInstance *ImagingCodecState;
/usr/include/python3.4m/Imaging.h:typedef int (*ImagingCodec)(Imaging im, ImagingCodecState state,
/usr/include/python3.4m/Imaging.h:typedef void (*ImagingShuffler)(UINT8* out, const UINT8* in, int pixels);
/usr/include/python3.4m/Imaging.h:typedef struct ImagingIncrementalCodecStruct *ImagingIncrementalCodec;
/usr/include/python3.4m/Imaging.h:typedef int (*ImagingIncrementalCodecEntry)(Imaging im, 
/usr/include/python3.4m/ImPlatform.h:typedef signed __int64       int64_t;
/usr/include/libio.h:typedef void _IO_lock_t;
/usr/include/libio.h:typedef struct _IO_FILE _IO_FILE;
/usr/include/libio.h:typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);
/usr/include/libio.h:typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
/usr/include/libio.h:typedef int __io_seek_fn (void *__cookie, _IO_off64_t *__pos, int __w);
/usr/include/libio.h:typedef int __io_close_fn (void *__cookie);
/usr/include/libio.h:typedef __io_read_fn cookie_read_function_t;
/usr/include/libio.h:typedef __io_write_fn cookie_write_function_t;
/usr/include/libio.h:typedef __io_seek_fn cookie_seek_function_t;
/usr/include/libio.h:typedef __io_close_fn cookie_close_function_t;
/usr/include/libio.h:typedef struct
/usr/include/libio.h:typedef _IO_cookie_io_functions_t cookie_io_functions_t;
/usr/include/rpcsvc/yp_prot.h:typedef struct {
/usr/include/rpcsvc/yp_prot.h:typedef struct {
/usr/include/rpcsvc/yp_prot.h:typedef enum ypstat ypstat;
/usr/include/rpcsvc/yp_prot.h:typedef enum yppush_status yppush_status;
/usr/include/rpcsvc/rex.x:typedef string rexstring<1024>;
/usr/include/rpcsvc/klm_prot.h:typedef enum klm_stats klm_stats;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_lock klm_lock;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_holder klm_holder;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_stat klm_stat;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_testrply klm_testrply;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_lockargs klm_lockargs;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_testargs klm_testargs;
/usr/include/rpcsvc/klm_prot.h:typedef struct klm_unlockargs klm_unlockargs;
/usr/include/rpcsvc/spray.x:typedef opaque sprayarr<SPRAYMAX>;
/usr/include/rpcsvc/nlm_prot.h:typedef enum nlm_stats nlm_stats;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_holder nlm_holder;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_testrply nlm_testrply;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_stat nlm_stat;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_res nlm_res;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_testres nlm_testres;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_lock nlm_lock;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_lockargs nlm_lockargs;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_cancargs nlm_cancargs;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_testargs nlm_testargs;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_unlockargs nlm_unlockargs;
/usr/include/rpcsvc/nlm_prot.h:typedef enum fsh_mode fsh_mode;
/usr/include/rpcsvc/nlm_prot.h:typedef enum fsh_access fsh_access;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_share nlm_share;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_shareargs nlm_shareargs;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_shareres nlm_shareres;
/usr/include/rpcsvc/nlm_prot.h:typedef struct nlm_notify nlm_notify;
/usr/include/rpcsvc/yppasswd.h:typedef struct passwd passwd;
/usr/include/rpcsvc/yppasswd.h:typedef struct yppasswd yppasswd;
/usr/include/rpcsvc/rquota.h:typedef struct getquota_args getquota_args;
/usr/include/rpcsvc/rquota.h:typedef struct rquota rquota;
/usr/include/rpcsvc/rquota.h:typedef enum gqr_status gqr_status;
/usr/include/rpcsvc/rquota.h:typedef struct getquota_rslt getquota_rslt;
/usr/include/rpcsvc/bootparam_prot.h:typedef char *bp_machine_name_t;
/usr/include/rpcsvc/bootparam_prot.h:typedef char *bp_path_t;
/usr/include/rpcsvc/bootparam_prot.h:typedef char *bp_fileid_t;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct ip_addr_t ip_addr_t;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct bp_address bp_address;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct bp_whoami_arg bp_whoami_arg;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct bp_whoami_res bp_whoami_res;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct bp_getfile_arg bp_getfile_arg;
/usr/include/rpcsvc/bootparam_prot.h:typedef struct bp_getfile_res bp_getfile_res;
/usr/include/rpcsvc/spray.h:typedef struct spraytimeval spraytimeval;
/usr/include/rpcsvc/spray.h:typedef struct spraycumul spraycumul;
/usr/include/rpcsvc/spray.h:typedef struct {
/usr/include/rpcsvc/rusers.h:typedef struct rusers_utmp rusers_utmp;
/usr/include/rpcsvc/rusers.h:typedef struct {
/usr/include/rpcsvc/rusers.h:typedef struct utmparr utmparr;
/usr/include/rpcsvc/rusers.x:typedef rusers_utmp utmp_array<>;
/usr/include/rpcsvc/rusers.x:%typedef struct utmparr utmparr;
/usr/include/rpcsvc/nfs_prot.h:typedef enum nfsstat nfsstat;
/usr/include/rpcsvc/nfs_prot.h:typedef enum ftype ftype;
/usr/include/rpcsvc/nfs_prot.h:typedef struct nfs_fh nfs_fh;
/usr/include/rpcsvc/nfs_prot.h:typedef struct nfstime nfstime;
/usr/include/rpcsvc/nfs_prot.h:typedef struct fattr fattr;
/usr/include/rpcsvc/nfs_prot.h:typedef struct sattr sattr;
/usr/include/rpcsvc/nfs_prot.h:typedef char *filename;
/usr/include/rpcsvc/nfs_prot.h:typedef char *nfspath;
/usr/include/rpcsvc/nfs_prot.h:typedef struct attrstat attrstat;
/usr/include/rpcsvc/nfs_prot.h:typedef struct sattrargs sattrargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct diropargs diropargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct diropokres diropokres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct diropres diropres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct readlinkres readlinkres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct readargs readargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct readokres readokres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct readres readres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct writeargs writeargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct createargs createargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct renameargs renameargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct linkargs linkargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct symlinkargs symlinkargs;
/usr/include/rpcsvc/nfs_prot.h:typedef char nfscookie[NFS_COOKIESIZE];
/usr/include/rpcsvc/nfs_prot.h:typedef struct readdirargs readdirargs;
/usr/include/rpcsvc/nfs_prot.h:typedef struct entry entry;
/usr/include/rpcsvc/nfs_prot.h:typedef struct dirlist dirlist;
/usr/include/rpcsvc/nfs_prot.h:typedef struct readdirres readdirres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct statfsokres statfsokres;
/usr/include/rpcsvc/nfs_prot.h:typedef struct statfsres statfsres;
/usr/include/rpcsvc/nis_callback.h:typedef nis_object *obj_p;
/usr/include/rpcsvc/nis_callback.h:typedef struct cback_data cback_data;
/usr/include/rpcsvc/yp.h:typedef enum ypstat ypstat;
/usr/include/rpcsvc/yp.h:typedef enum ypxfrstat ypxfrstat;
/usr/include/rpcsvc/yp.h:typedef char *domainname;
/usr/include/rpcsvc/yp.h:typedef char *mapname;
/usr/include/rpcsvc/yp.h:typedef char *peername;
/usr/include/rpcsvc/yp.h:typedef struct {
/usr/include/rpcsvc/yp.h:typedef struct {
/usr/include/rpcsvc/yp.h:typedef struct ypmap_parms ypmap_parms;
/usr/include/rpcsvc/yp.h:typedef struct ypreq_key ypreq_key;
/usr/include/rpcsvc/yp.h:typedef struct ypreq_nokey ypreq_nokey;
/usr/include/rpcsvc/yp.h:typedef struct ypreq_xfr ypreq_xfr;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_val ypresp_val;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_key_val ypresp_key_val;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_master ypresp_master;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_order ypresp_order;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_all ypresp_all;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_xfr ypresp_xfr;
/usr/include/rpcsvc/yp.h:typedef struct ypmaplist ypmaplist;
/usr/include/rpcsvc/yp.h:typedef struct ypresp_maplist ypresp_maplist;
/usr/include/rpcsvc/yp.h:typedef enum yppush_status yppush_status;
/usr/include/rpcsvc/yp.h:typedef struct yppushresp_xfr yppushresp_xfr;
/usr/include/rpcsvc/yp.h:typedef enum ypbind_resptype ypbind_resptype;
/usr/include/rpcsvc/yp.h:typedef struct ypbind_binding ypbind_binding;
/usr/include/rpcsvc/yp.h:typedef struct ypbind_resp ypbind_resp;
/usr/include/rpcsvc/yp.h:typedef struct ypbind_setdom ypbind_setdom;
/usr/include/rpcsvc/key_prot.h:typedef enum keystatus keystatus;
/usr/include/rpcsvc/key_prot.h:typedef char keybuf[HEXKEYBYTES];
/usr/include/rpcsvc/key_prot.h:typedef char *netnamestr;
/usr/include/rpcsvc/key_prot.h:typedef struct cryptkeyarg cryptkeyarg;
/usr/include/rpcsvc/key_prot.h:typedef struct cryptkeyarg2 cryptkeyarg2;
/usr/include/rpcsvc/key_prot.h:typedef struct cryptkeyres cryptkeyres;
/usr/include/rpcsvc/key_prot.h:typedef struct unixcred unixcred;
/usr/include/rpcsvc/key_prot.h:typedef struct getcredres getcredres;
/usr/include/rpcsvc/key_prot.h:typedef struct key_netstarg key_netstarg;
/usr/include/rpcsvc/key_prot.h:typedef struct key_netstres key_netstres;
/usr/include/rpcsvc/mount.x:typedef opaque fhandle[FHSIZE];
/usr/include/rpcsvc/mount.x:typedef string dirpath<MNTPATHLEN>;
/usr/include/rpcsvc/mount.x:typedef string name<MNTNAMLEN>;
/usr/include/rpcsvc/mount.x:typedef struct mountbody *mountlist;
/usr/include/rpcsvc/mount.x:typedef struct groupnode *groups;
/usr/include/rpcsvc/mount.x:typedef struct exportnode *exports;
/usr/include/rpcsvc/nislib.h:typedef const char *const_nis_name;
/usr/include/rpcsvc/nislib.h:typedef struct dir_binding dir_binding;
/usr/include/rpcsvc/rex.h:typedef char *rexstring;
/usr/include/rpcsvc/rex.h:typedef struct rex_start rex_start;
/usr/include/rpcsvc/rex.h:typedef struct rex_result rex_result;
/usr/include/rpcsvc/rex.h:typedef struct sgttyb sgttyb;
/usr/include/rpcsvc/rex.h:typedef struct tchars tchars;
/usr/include/rpcsvc/rex.h:typedef struct ltchars ltchars;
/usr/include/rpcsvc/rex.h:typedef struct rex_ttysize rex_ttysize;
/usr/include/rpcsvc/rex.h:typedef struct rex_ttymode rex_ttymode;
/usr/include/rpcsvc/nis.x:typedef struct nis_bound_endpoint nis_bound_endpoint;
/usr/include/rpcsvc/nis.x:typedef struct nis_bound_directory nis_bound_directory;
/usr/include/rpcsvc/nis.x:typedef struct nis_active_endpoint nis_active_endpoint;
/usr/include/rpcsvc/nis.x:%typedef struct nis_hash_data NIS_HASH_ITEM;
/usr/include/rpcsvc/nis.x:%typedef struct nis_hash_table NIS_HASH_TABLE;
/usr/include/rpcsvc/nis.x:%typedef enum name_pos name_pos;
/usr/include/rpcsvc/sm_inter.h:typedef struct sm_name sm_name;
/usr/include/rpcsvc/sm_inter.h:typedef struct my_id my_id;
/usr/include/rpcsvc/sm_inter.h:typedef struct mon_id mon_id;
/usr/include/rpcsvc/sm_inter.h:typedef struct mon mon;
/usr/include/rpcsvc/sm_inter.h:typedef struct sm_stat sm_stat;
/usr/include/rpcsvc/sm_inter.h:typedef enum res res;
/usr/include/rpcsvc/sm_inter.h:typedef struct sm_stat_res sm_stat_res;
/usr/include/rpcsvc/sm_inter.h:typedef struct status status;
/usr/include/rpcsvc/yp.x:typedef string domainname<YPMAXDOMAIN>;
/usr/include/rpcsvc/yp.x:typedef string mapname<YPMAXMAP>;
/usr/include/rpcsvc/yp.x:typedef string peername<YPMAXPEER>;
/usr/include/rpcsvc/yp.x:typedef opaque keydat<YPMAXRECORD>;
/usr/include/rpcsvc/yp.x:typedef opaque valdat<YPMAXRECORD>;
/usr/include/rpcsvc/key_prot.x:typedef opaque keybuf[HEXKEYBYTES];	/* store key in hex */
/usr/include/rpcsvc/key_prot.x:typedef string netnamestr<MAXNETNAMELEN>;
/usr/include/rpcsvc/bootparam_prot.x:typedef	string	bp_machine_name_t<MAX_MACHINE_NAME>;
/usr/include/rpcsvc/bootparam_prot.x:typedef	string	bp_path_t<MAX_PATH_LEN>;
/usr/include/rpcsvc/bootparam_prot.x:typedef	string	bp_fileid_t<MAX_FILEID>;
/usr/include/rpcsvc/nis.h:typedef struct nis_attr nis_attr;
/usr/include/rpcsvc/nis.h:typedef char *nis_name;
/usr/include/rpcsvc/nis.h:typedef enum zotypes zotypes;
/usr/include/rpcsvc/nis.h:typedef enum nstype nstype;
/usr/include/rpcsvc/nis.h:typedef struct oar_mask oar_mask;
/usr/include/rpcsvc/nis.h:typedef struct endpoint endpoint;
/usr/include/rpcsvc/nis.h:typedef struct nis_server nis_server;
/usr/include/rpcsvc/nis.h:typedef struct directory_obj directory_obj;
/usr/include/rpcsvc/nis.h:typedef struct entry_col entry_col;
/usr/include/rpcsvc/nis.h:typedef struct entry_obj entry_obj;
/usr/include/rpcsvc/nis.h:typedef struct group_obj group_obj;
/usr/include/rpcsvc/nis.h:typedef struct link_obj link_obj;
/usr/include/rpcsvc/nis.h:typedef struct table_col table_col;
/usr/include/rpcsvc/nis.h:typedef struct table_obj table_obj;
/usr/include/rpcsvc/nis.h:typedef struct objdata objdata;
/usr/include/rpcsvc/nis.h:typedef struct nis_oid nis_oid;
/usr/include/rpcsvc/nis.h:typedef struct nis_object nis_object;
/usr/include/rpcsvc/nis.h:typedef enum nis_error nis_error;
/usr/include/rpcsvc/nis.h:typedef struct nis_result nis_result;
/usr/include/rpcsvc/nis.h:typedef struct ns_request ns_request;
/usr/include/rpcsvc/nis.h:typedef struct ib_request ib_request;
/usr/include/rpcsvc/nis.h:typedef struct ping_args ping_args;
/usr/include/rpcsvc/nis.h:typedef enum log_entry_t log_entry_t;
/usr/include/rpcsvc/nis.h:typedef struct log_entry log_entry;
/usr/include/rpcsvc/nis.h:typedef struct log_result log_result;
/usr/include/rpcsvc/nis.h:typedef struct cp_result cp_result;
/usr/include/rpcsvc/nis.h:typedef struct nis_tag nis_tag;
/usr/include/rpcsvc/nis.h:typedef struct nis_taglist nis_taglist;
/usr/include/rpcsvc/nis.h:typedef struct dump_args dump_args;
/usr/include/rpcsvc/nis.h:typedef struct fd_args fd_args;
/usr/include/rpcsvc/nis.h:typedef struct fd_result fd_result;
/usr/include/rpcsvc/nis.h:typedef enum name_pos name_pos;
/usr/include/rpcsvc/nis_object.x:typedef string nis_name<>;	/* The NIS name itself. */
/usr/include/rpcsvc/nfs_prot.x:typedef string filename<NFS_MAXNAMLEN>;
/usr/include/rpcsvc/nfs_prot.x:typedef string nfspath<NFS_MAXPATHLEN>;
/usr/include/rpcsvc/nfs_prot.x:typedef opaque nfscookie[NFS_COOKIESIZE];
/usr/include/rpcsvc/mount.h:typedef char fhandle[FHSIZE];
/usr/include/rpcsvc/mount.h:typedef struct fhstatus fhstatus;
/usr/include/rpcsvc/mount.h:typedef char *dirpath;
/usr/include/rpcsvc/mount.h:typedef char *name;
/usr/include/rpcsvc/mount.h:typedef struct mountbody *mountlist;
/usr/include/rpcsvc/mount.h:typedef struct mountbody mountbody;
/usr/include/rpcsvc/mount.h:typedef struct groupnode *groups;
/usr/include/rpcsvc/mount.h:typedef struct groupnode groupnode;
/usr/include/rpcsvc/mount.h:typedef struct exportnode *exports;
/usr/include/rpcsvc/mount.h:typedef struct exportnode exportnode;
/usr/include/rpcsvc/ypupd.h:typedef struct {
/usr/include/rpcsvc/ypupd.h:typedef struct ypupdate_args ypupdate_args;
/usr/include/rpcsvc/ypupd.h:typedef struct ypdelete_args ypdelete_args;
/usr/include/rpcsvc/nis_callback.x:typedef nis_object	*obj_p;
/usr/include/rpcsvc/rstat.h:typedef struct rstat_timeval rstat_timeval;
/usr/include/rpcsvc/rstat.h:typedef struct statstime statstime;
/usr/include/rpcsvc/rstat.h:typedef struct statsswtch statsswtch;
/usr/include/rpcsvc/rstat.h:typedef struct stats stats;
/usr/include/gnumake.h:typedef struct
/usr/include/gnumake.h:typedef char *(*gmk_func_ptr)(const char *nm, unsigned int argc, char **argv);
/usr/include/utmpx.h:typedef __pid_t pid_t;
/usr/include/python2.7/ImDib.h:typedef struct ImagingDIBInstance* ImagingDIB;
/usr/include/python2.7/Imaging.h:typedef struct ImagingMemoryInstance* Imaging;
/usr/include/python2.7/Imaging.h:typedef struct ImagingAccessInstance* ImagingAccess;
/usr/include/python2.7/Imaging.h:typedef struct ImagingHistogramInstance* ImagingHistogram;
/usr/include/python2.7/Imaging.h:typedef struct ImagingOutlineInstance* ImagingOutline;
/usr/include/python2.7/Imaging.h:typedef struct ImagingPaletteInstance* ImagingPalette;
/usr/include/python2.7/Imaging.h:typedef void* ImagingSectionCookie;
/usr/include/python2.7/Imaging.h:typedef int (*ImagingTransformMap)(double* X, double* Y,
/usr/include/python2.7/Imaging.h:typedef int (*ImagingTransformFilter)(void* out, Imaging im,
/usr/include/python2.7/Imaging.h:typedef struct { int x, y; INT32 count; INT32 pixel; } ImagingColorItem;
/usr/include/python2.7/Imaging.h:typedef struct ImagingAffineMatrixInstance *ImagingAffineMatrix;
/usr/include/python2.7/Imaging.h:typedef struct ImagingCodecStateInstance *ImagingCodecState;
/usr/include/python2.7/Imaging.h:typedef int (*ImagingCodec)(Imaging im, ImagingCodecState state,
/usr/include/python2.7/Imaging.h:typedef void (*ImagingShuffler)(UINT8* out, const UINT8* in, int pixels);
/usr/include/python2.7/Imaging.h:typedef struct ImagingIncrementalCodecStruct *ImagingIncrementalCodec;
/usr/include/python2.7/Imaging.h:typedef int (*ImagingIncrementalCodecEntry)(Imaging im, 
/usr/include/python2.7/ImPlatform.h:typedef signed __int64       int64_t;
/usr/include/monetary.h:typedef __ssize_t ssize_t;
/usr/include/gettext-po.h:typedef struct po_file *po_file_t;
/usr/include/gettext-po.h:typedef struct po_message_iterator *po_message_iterator_t;
/usr/include/gettext-po.h:typedef struct po_message *po_message_t;
/usr/include/gettext-po.h:typedef struct po_filepos *po_filepos_t;
/usr/include/gettext-po.h:typedef const struct po_error_handler *po_error_handler_t;
/usr/include/gettext-po.h:typedef const struct po_xerror_handler *po_xerror_handler_t;
/usr/include/regex.h:typedef long int s_reg_t;
/usr/include/regex.h:typedef unsigned long int active_reg_t;
/usr/include/regex.h:typedef unsigned long int reg_syntax_t;
/usr/include/regex.h:typedef enum
/usr/include/regex.h:typedef struct re_pattern_buffer regex_t;
/usr/include/regex.h:typedef int regoff_t;
/usr/include/regex.h:typedef struct
/usr/include/iconv.h:typedef void *iconv_t;
/usr/include/pwd.h:typedef __gid_t gid_t;
/usr/include/pwd.h:typedef __uid_t uid_t;
/usr/include/dialog.h:typedef void (*DIALOG_FREEBACK) (struct _dlg_callback * /* p */);
/usr/include/dialog.h:typedef struct _dlg_callback {
/usr/include/dialog.h:typedef struct _dlg_windows {
/usr/include/dialog.h:typedef struct {
/usr/include/dialog.h:typedef struct {
/usr/include/dialog.h:typedef struct {
/usr/include/dialog.h:typedef struct {
/usr/include/dialog.h:typedef struct {
/usr/include/dialog.h:typedef	int (DIALOG_INPUTMENU) (DIALOG_LISTITEM * /*items*/, int /*current*/, char * /*newtext*/);
/usr/include/dialog.h:typedef struct mseRegion {
/usr/include/stdlib.h:typedef union
/usr/include/stdlib.h:typedef struct
/usr/include/stdlib.h:typedef struct
/usr/include/stdlib.h:__extension__ typedef struct
/usr/include/stdlib.h:typedef int (*__compar_fn_t) (const void *, const void *);
/usr/include/stdlib.h:typedef __compar_fn_t comparison_fn_t;
/usr/include/stdlib.h:typedef int (*__compar_d_fn_t) (const void *, const void *, void *);
/usr/include/sudo_plugin.h:typedef int (*sudo_conv_t)(int num_msgs, const struct sudo_conv_message msgs[],
/usr/include/sudo_plugin.h:typedef int (*sudo_printf_t)(int msg_type, const char *fmt, ...);
/usr/include/sudo_plugin.h:/* Hook functions typedefs. */
/usr/include/sudo_plugin.h:typedef int (*sudo_hook_fn_t)();
/usr/include/sudo_plugin.h:typedef int (*sudo_hook_fn_setenv_t)(const char *name, const char *value, int overwrite, void *closure);
/usr/include/sudo_plugin.h:typedef int (*sudo_hook_fn_putenv_t)(char *string, void *closure);
/usr/include/sudo_plugin.h:typedef int (*sudo_hook_fn_getenv_t)(const char *name, char **value, void *closure);
/usr/include/sudo_plugin.h:typedef int (*sudo_hook_fn_unsetenv_t)(const char *name, void *closure);
/usr/include/wordexp.h:typedef struct
/usr/include/pthread.h:typedef struct
/usr/include/grp.h:typedef __gid_t gid_t;
/usr/include/fts.h:typedef struct {
/usr/include/fts.h:typedef struct _ftsent {
/usr/include/uchar.h:typedef __mbstate_t mbstate_t;
/usr/include/uchar.h:typedef __CHAR16_TYPE__ char16_t;
/usr/include/uchar.h:typedef __CHAR32_TYPE__ char32_t;
/usr/include/drm/mga_drm.h:typedef struct {
/usr/include/drm/mga_drm.h:typedef struct {
/usr/include/drm/mga_drm.h:typedef struct {
/usr/include/drm/mga_drm.h:typedef struct {
/usr/include/drm/mga_drm.h:typedef struct _drm_mga_sarea {
/usr/include/drm/mga_drm.h:typedef struct _drm_mga_warp_index {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_init {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_dma_bootstrap {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_clear {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_vertex {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_indices {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_iload {
/usr/include/drm/mga_drm.h:typedef struct _drm_mga_blit {
/usr/include/drm/mga_drm.h:typedef struct drm_mga_getparam {
/usr/include/drm/sis_drm.h:typedef struct {
/usr/include/drm/sis_drm.h:typedef struct {
/usr/include/drm/sis_drm.h:typedef struct {
/usr/include/drm/drm_sarea.h:typedef struct drm_sarea_drawable drm_sarea_drawable_t;
/usr/include/drm/drm_sarea.h:typedef struct drm_sarea_frame drm_sarea_frame_t;
/usr/include/drm/drm_sarea.h:typedef struct drm_sarea drm_sarea_t;
/usr/include/drm/r128_drm.h:typedef struct {
/usr/include/drm/r128_drm.h:typedef struct {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_sarea {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_init {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_cce_stop {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_clear {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_vertex {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_indices {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_blit {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_depth {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_stipple {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_indirect {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_fullscreen {
/usr/include/drm/r128_drm.h:typedef struct drm_r128_getparam {
/usr/include/drm/drm.h:typedef unsigned int drm_handle_t;
/usr/include/drm/drm.h:typedef int8_t   __s8;
/usr/include/drm/drm.h:typedef uint8_t  __u8;
/usr/include/drm/drm.h:typedef int16_t  __s16;
/usr/include/drm/drm.h:typedef uint16_t __u16;
/usr/include/drm/drm.h:typedef int32_t  __s32;
/usr/include/drm/drm.h:typedef uint32_t __u32;
/usr/include/drm/drm.h:typedef int64_t  __s64;
/usr/include/drm/drm.h:typedef uint64_t __u64;
/usr/include/drm/drm.h:typedef unsigned long drm_handle_t;
/usr/include/drm/drm.h:typedef unsigned int drm_context_t;
/usr/include/drm/drm.h:typedef unsigned int drm_drawable_t;
/usr/include/drm/drm.h:typedef unsigned int drm_magic_t;
/usr/include/drm/drm.h:typedef enum {
/usr/include/drm/drm.h:/* typedef area */
/usr/include/drm/drm.h:typedef struct drm_clip_rect drm_clip_rect_t;
/usr/include/drm/drm.h:typedef struct drm_drawable_info drm_drawable_info_t;
/usr/include/drm/drm.h:typedef struct drm_tex_region drm_tex_region_t;
/usr/include/drm/drm.h:typedef struct drm_hw_lock drm_hw_lock_t;
/usr/include/drm/drm.h:typedef struct drm_version drm_version_t;
/usr/include/drm/drm.h:typedef struct drm_unique drm_unique_t;
/usr/include/drm/drm.h:typedef struct drm_list drm_list_t;
/usr/include/drm/drm.h:typedef struct drm_block drm_block_t;
/usr/include/drm/drm.h:typedef struct drm_control drm_control_t;
/usr/include/drm/drm.h:typedef enum drm_map_type drm_map_type_t;
/usr/include/drm/drm.h:typedef enum drm_map_flags drm_map_flags_t;
/usr/include/drm/drm.h:typedef struct drm_ctx_priv_map drm_ctx_priv_map_t;
/usr/include/drm/drm.h:typedef struct drm_map drm_map_t;
/usr/include/drm/drm.h:typedef struct drm_client drm_client_t;
/usr/include/drm/drm.h:typedef enum drm_stat_type drm_stat_type_t;
/usr/include/drm/drm.h:typedef struct drm_stats drm_stats_t;
/usr/include/drm/drm.h:typedef enum drm_lock_flags drm_lock_flags_t;
/usr/include/drm/drm.h:typedef struct drm_lock drm_lock_t;
/usr/include/drm/drm.h:typedef enum drm_dma_flags drm_dma_flags_t;
/usr/include/drm/drm.h:typedef struct drm_buf_desc drm_buf_desc_t;
/usr/include/drm/drm.h:typedef struct drm_buf_info drm_buf_info_t;
/usr/include/drm/drm.h:typedef struct drm_buf_free drm_buf_free_t;
/usr/include/drm/drm.h:typedef struct drm_buf_pub drm_buf_pub_t;
/usr/include/drm/drm.h:typedef struct drm_buf_map drm_buf_map_t;
/usr/include/drm/drm.h:typedef struct drm_dma drm_dma_t;
/usr/include/drm/drm.h:typedef union drm_wait_vblank drm_wait_vblank_t;
/usr/include/drm/drm.h:typedef struct drm_agp_mode drm_agp_mode_t;
/usr/include/drm/drm.h:typedef enum drm_ctx_flags drm_ctx_flags_t;
/usr/include/drm/drm.h:typedef struct drm_ctx drm_ctx_t;
/usr/include/drm/drm.h:typedef struct drm_ctx_res drm_ctx_res_t;
/usr/include/drm/drm.h:typedef struct drm_draw drm_draw_t;
/usr/include/drm/drm.h:typedef struct drm_update_draw drm_update_draw_t;
/usr/include/drm/drm.h:typedef struct drm_auth drm_auth_t;
/usr/include/drm/drm.h:typedef struct drm_irq_busid drm_irq_busid_t;
/usr/include/drm/drm.h:typedef enum drm_vblank_seq_type drm_vblank_seq_type_t;
/usr/include/drm/drm.h:typedef struct drm_agp_buffer drm_agp_buffer_t;
/usr/include/drm/drm.h:typedef struct drm_agp_binding drm_agp_binding_t;
/usr/include/drm/drm.h:typedef struct drm_agp_info drm_agp_info_t;
/usr/include/drm/drm.h:typedef struct drm_scatter_gather drm_scatter_gather_t;
/usr/include/drm/drm.h:typedef struct drm_set_version drm_set_version_t;
/usr/include/drm/radeon_drm.h:typedef union {
/usr/include/drm/radeon_drm.h:typedef union {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_init {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_cp_stop {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_fullscreen {
/usr/include/drm/radeon_drm.h:typedef union drm_radeon_clear_rect {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_clear {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_vertex {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_indices {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_vertex2 {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_cmd_buffer {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_tex_image {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_texture {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_stipple {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_indirect {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_getparam {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_mem_alloc {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_mem_free {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_mem_init_heap {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_irq_emit {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_irq_wait {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_setparam {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_surface_alloc {
/usr/include/drm/radeon_drm.h:typedef struct drm_radeon_surface_free {
/usr/include/drm/savage_drm.h:typedef struct _drm_savage_sarea {
/usr/include/drm/savage_drm.h:typedef struct drm_savage_init {
/usr/include/drm/savage_drm.h:typedef union drm_savage_cmd_header drm_savage_cmd_header_t;
/usr/include/drm/savage_drm.h:typedef struct drm_savage_cmdbuf {
/usr/include/drm/savage_drm.h:typedef struct drm_savage_event {
/usr/include/drm/via_drm.h:typedef struct {
/usr/include/drm/via_drm.h:typedef struct {
/usr/include/drm/via_drm.h:typedef struct {
/usr/include/drm/via_drm.h:typedef struct _drm_via_init {
/usr/include/drm/via_drm.h:typedef struct _drm_via_futex {
/usr/include/drm/via_drm.h:typedef struct _drm_via_dma_init {
/usr/include/drm/via_drm.h:typedef struct _drm_via_cmdbuffer {
/usr/include/drm/via_drm.h:typedef struct _drm_via_tex_region {
/usr/include/drm/via_drm.h:typedef struct _drm_via_sarea {
/usr/include/drm/via_drm.h:typedef struct _drm_via_cmdbuf_size {
/usr/include/drm/via_drm.h:typedef enum {
/usr/include/drm/via_drm.h:typedef union drm_via_irqwait {
/usr/include/drm/via_drm.h:typedef struct drm_via_blitsync {
/usr/include/drm/via_drm.h:typedef struct drm_via_dmablit {
/usr/include/drm/i810_drm.h:typedef enum _drm_i810_init_func {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_init {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_pre12_init {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_tex_region {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_sarea {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_clear {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_vertex {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_copy_t {
/usr/include/drm/i810_drm.h:typedef struct drm_i810_dma {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_overlay_t {
/usr/include/drm/i810_drm.h:typedef struct _drm_i810_mc {
/usr/include/drm/i915_drm.h:typedef struct _drm_i915_init {
/usr/include/drm/i915_drm.h:typedef struct _drm_i915_sarea {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_batchbuffer {
/usr/include/drm/i915_drm.h:typedef struct _drm_i915_cmdbuffer {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_irq_emit {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_irq_wait {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_getparam {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_setparam {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_mem_alloc {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_mem_free {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_mem_init_heap {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_mem_destroy_heap {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_vblank_pipe {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_vblank_swap {
/usr/include/drm/i915_drm.h:typedef struct drm_i915_hws_addr {
/usr/include/dirent.h:typedef __ino_t ino_t;
/usr/include/dirent.h:typedef __ino64_t ino_t;
/usr/include/dirent.h:typedef __ino64_t ino64_t;
/usr/include/dirent.h:typedef struct __dirstream DIR;
/usr/include/arpa/nameser_compat.h:typedef struct {
/usr/include/arpa/inet.h:typedef __socklen_t socklen_t;
/usr/include/arpa/nameser.h:typedef enum __ns_sect {
/usr/include/arpa/nameser.h:typedef struct __ns_msg {
/usr/include/arpa/nameser.h:typedef	struct __ns_rr {
/usr/include/arpa/nameser.h:typedef enum __ns_flag {
/usr/include/arpa/nameser.h:typedef enum __ns_opcode {
/usr/include/arpa/nameser.h:typedef	enum __ns_rcode {
/usr/include/arpa/nameser.h:typedef enum __ns_update_operation {
/usr/include/arpa/nameser.h:typedef struct ns_tsig_key ns_tsig_key;
/usr/include/arpa/nameser.h:typedef struct ns_tcp_tsig_state ns_tcp_tsig_state;
/usr/include/arpa/nameser.h:typedef enum __ns_type {
/usr/include/arpa/nameser.h:typedef enum __ns_class {
/usr/include/arpa/nameser.h:typedef enum __ns_key_types {
/usr/include/arpa/nameser.h:typedef enum __ns_cert_types {
/usr/include/argp.h:typedef int error_t;
/usr/include/argp.h:typedef error_t (*argp_parser_t) (int __key, char *__arg,
/usr/include/dlfcn.h:typedef long int Lmid_t;
/usr/include/dlfcn.h:typedef struct
/usr/include/dlfcn.h:typedef struct
/usr/include/dlfcn.h:typedef struct
/usr/include/thread_db.h:typedef enum
/usr/include/thread_db.h:typedef enum
/usr/include/thread_db.h:typedef enum
/usr/include/thread_db.h:typedef struct td_thragent td_thragent_t;
/usr/include/thread_db.h:typedef struct td_thrhandle
/usr/include/thread_db.h:typedef struct td_thr_events
/usr/include/thread_db.h:typedef enum
/usr/include/thread_db.h:typedef enum
/usr/include/thread_db.h:typedef struct td_notify
/usr/include/thread_db.h:typedef struct td_event_msg
/usr/include/thread_db.h:typedef struct
/usr/include/thread_db.h:typedef struct td_ta_stats
/usr/include/thread_db.h:typedef pthread_t thread_t;
/usr/include/thread_db.h:typedef pthread_key_t thread_key_t;
/usr/include/thread_db.h:typedef int td_thr_iter_f (const td_thrhandle_t *, void *);
/usr/include/thread_db.h:typedef int td_key_iter_f (thread_key_t, void (*) (void *), void *);
/usr/include/thread_db.h:typedef struct td_thrinfo
/usr/include/stdio.h:typedef struct _IO_FILE FILE;
/usr/include/stdio.h:typedef struct _IO_FILE __FILE;
/usr/include/stdio.h:typedef _G_va_list va_list;
/usr/include/stdio.h:typedef __off_t off_t;
/usr/include/stdio.h:typedef __off64_t off_t;
/usr/include/stdio.h:typedef __off64_t off64_t;
/usr/include/stdio.h:typedef __ssize_t ssize_t;
/usr/include/stdio.h:typedef _G_fpos_t fpos_t;
/usr/include/stdio.h:typedef _G_fpos64_t fpos_t;
/usr/include/stdio.h:typedef _G_fpos64_t fpos64_t;
